// Copyright (C) 2005-2006 Josh Turpen, Nikolaus Gebhardt
// This file is part of the IrrLua Lua binding for Irrlicht.
// For conditions of distribution and use, see copyright notice in IrrLua.h

namespace irr
{
namespace video
{
	class IrrLuaIShaderConstantSetCallBack : public irr::video::IShaderConstantSetCallBack {

	public:
	IrrLuaIShaderConstantSetCallBack();
	~IrrLuaIShaderConstantSetCallBack();

	void OnSetConstants(irr::video::IMaterialRendererServices *services, s32 userData);
	
	///////////////////////////////////////
	// IUnknown
	void grab();
	bool drop();

	
	//////////////////////////////////////
	// IrrLua stuff
	void *GetProxy();	
};

}
}

$[

irr.__shaderproxy = {}

function irr.video.createIShaderConstantSetCallBack(def)
	local o = {}
	for i,v in pairs(def) do o[i] = v end
	o.__c_class = irr.video.IrrLuaIShaderConstantSetCallBack:new()
	tolua.inherit(o, o.__c_class)
	tolua.takeownership(o)
	o.__index = function (t, k) return rawget(t,"__c_class")[k] end	
	setmetatable(o, o)	
	irr.__shaderproxy[o.__c_class:GetProxy()] = o
	return o
end

$]
