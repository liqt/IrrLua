// Copyright (C) 2002-2006 Nikolaus Gebhardt
// This file is part of the "Irrlicht Engine".
// For conditions of distribution and use, see copyright notice in irrlicht.h

namespace irr
{

namespace io
{

class IAttributes;

//! Enumation flags passed through SAttributeReadWriteOptions to the IAttributeExchangingObject object
enum E_ATTRIBUTE_READ_WRITE_FLAGS
{
	//! Serialization/Deserializion is done for an xml file
	EARWF_FOR_FILE = 1,

	//! Serialization/Deserializion is done for an editor property box
	EARWF_FOR_EDITOR = 2,

	//! When writing filenames, relative paths should be used
	EARWF_USE_RELATIVE_PATHS = 4
};


//! struct holding data describing options 
struct SAttributeReadWriteOptions
{
	//! constructor
	SAttributeReadWriteOptions();

	//! Combination of E_ATTRIBUTE_READ_WRITE_FLAGS or other, custom ones
	s32 Flags; 

	//! optional filename
	c8* Filename;
};


//! An object which is able to serialize and deserialize its attributes into an attributes object
class IAttributeExchangingObject : public IUnknown
{
public:

	//! Writes attributes of the object.
	//! Implement this to expose the attributes of your scene node animator for 
	//! scripting languages, editors, debuggers or xml serialization purposes.
	virtual void serializeAttributes(irr::io::IAttributes* out, irr::io::SAttributeReadWriteOptions* options);

	//! Reads attributes of the object.
	//! Implement this to set the attributes of your scene node animator for 
	//! scripting languages, editors, debuggers or xml deserialization purposes.
	virtual void deserializeAttributes(irr::io::IAttributes* in, irr::io::SAttributeReadWriteOptions* options);

	//////////////////////////////////////////////////////////////////////////////////////	
	//IUnknown
	//////////////////////////////////////////////////////////////////////////////////////
	
	virtual void grab();
	virtual bool drop();
	c8* getDebugName();	


};

} // end namespace io
} // end namespace irr



