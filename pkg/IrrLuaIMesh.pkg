// Copyright (C) 2005-2006 Josh Turpen
// This file is part of the IrrLua Lua binding for Irrlicht.
// For conditions of distribution and use, see copyright notice in IrrLua.h

namespace irr
{
namespace scene
{
class IrrLuaIMesh : public IMesh {
	public:
	IrrLuaIMesh();
	~IrrLuaIMesh();

	virtual s32 getMeshBufferCount();
	virtual IMeshBuffer* getMeshBuffer(s32 nr);
	virtual core::aabbox3d<f32>& getBoundingBox(); 
	virtual void setMaterialFlag(video::E_MATERIAL_FLAG flag, bool newvalue); 

	virtual void grab();
	virtual bool drop();

	void *GetProxy();

};
}
}

$[

irr.__imeshproxy = {}

function irr.scene.createIMesh(def)
	local o = {}
	for i,v in pairs(def) do o[i] = v end
	o.__c_class = irr.scene.IrrLuaIMesh:new()
	tolua.inherit(o, o.__c_class)
	tolua.takeownership(o)
	o.__index = function (t, k) return rawget(t,"__c_class")[k] end	
	setmetatable(o, o)	
	irr.__imeshproxy[o.__c_class:GetProxy()] = o
	return o
end

$]

