/*
** Lua binding: IrrLua
** Generated automatically by tolua++-1.0.92 on 08/23/06 21:55:16.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_IrrLua_open (lua_State* tolua_S);

#include "IrrLua.h"
#include "IrrLuaCast.h"
#include <string>
#include <IMeshCache.h>
#include "ISceneUserDataSerializer.h"
#include "IrrLua.h"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_irr__io__IReadFile (lua_State* tolua_S)
{
 irr::io::IReadFile* self = (irr::io::IReadFile*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__dimension2d_f32_ (lua_State* tolua_S)
{
 irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__SKeyMap (lua_State* tolua_S)
{
 irr::SKeyMap* self = (irr::SKeyMap*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__matrix4 (lua_State* tolua_S)
{
 irr::core::matrix4* self = (irr::core::matrix4*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IAnimatedMesh (lua_State* tolua_S)
{
 irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUISkin (lua_State* tolua_S)
{
 irr::gui::IGUISkin* self = (irr::gui::IGUISkin*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__array_irr__video__PITexture_ (lua_State* tolua_S)
{
 irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__quaternion (lua_State* tolua_S)
{
 irr::core::quaternion* self = (irr::core::quaternion*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__IXMLWriter (lua_State* tolua_S)
{
 irr::io::IXMLWriter* self = (irr::io::IXMLWriter*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIEnvironment (lua_State* tolua_S)
{
 irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaITriangleSelector (lua_State* tolua_S)
{
 irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__SExposedVideoData (lua_State* tolua_S)
{
 irr::video::SExposedVideoData* self = (irr::video::SExposedVideoData*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IMeshCache (lua_State* tolua_S)
{
 irr::scene::IMeshCache* self = (irr::scene::IMeshCache*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__ITexture (lua_State* tolua_S)
{
 irr::video::ITexture* self = (irr::video::ITexture*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__ITimer (lua_State* tolua_S)
{
 irr::ITimer* self = (irr::ITimer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SMeshBufferLightMap (lua_State* tolua_S)
{
 irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IImage (lua_State* tolua_S)
{
 irr::video::IImage* self = (irr::video::IImage*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__IWriteFile (lua_State* tolua_S)
{
 irr::io::IWriteFile* self = (irr::io::IWriteFile*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__stringc (lua_State* tolua_S)
{
 irr::core::stringc* self = (irr::core::stringc*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaIParticleAffector (lua_State* tolua_S)
{
 irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IMeshManipulator (lua_State* tolua_S)
{
 irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__S3DVertexTangents (lua_State* tolua_S)
{
 irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__stringw (lua_State* tolua_S)
{
 irr::core::stringw* self = (irr::core::stringw*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ITriangleSelector (lua_State* tolua_S)
{
 irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_f32___Iterator (lua_State* tolua_S)
{
 irr::core::list<f32>::Iterator* self = (irr::core::list<f32>::Iterator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__rect_s32_ (lua_State* tolua_S)
{
 irr::core::rect<s32>* self = (irr::core::rect<s32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IImageWriter (lua_State* tolua_S)
{
 irr::video::IImageWriter* self = (irr::video::IImageWriter*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__aabbox3d_f32_ (lua_State* tolua_S)
{
 irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__line3d_f32_ (lua_State* tolua_S)
{
 irr::core::line3d<f32>* self = (irr::core::line3d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__IrrlichtDevice (lua_State* tolua_S)
{
 irr::IrrlichtDevice* self = (irr::IrrlichtDevice*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SAnimatedMesh (lua_State* tolua_S)
{
 irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_irr__scene__ISceneNode____Iterator (lua_State* tolua_S)
{
 irr::core::list<irr::scene::ISceneNode*>::Iterator* self = (irr::core::list<irr::scene::ISceneNode*>::Iterator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIMeshViewer (lua_State* tolua_S)
{
 irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIToolBar (lua_State* tolua_S)
{
 irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__SIrrlichtCreationParameters (lua_State* tolua_S)
{
 irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IVideoDriver (lua_State* tolua_S)
{
 irr::video::IVideoDriver* self = (irr::video::IVideoDriver*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SMeshBuffer (lua_State* tolua_S)
{
 irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__dimension2d_s32_ (lua_State* tolua_S)
{
 irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IMeshBuffer (lua_State* tolua_S)
{
 irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__IrrLuaEventReceiver (lua_State* tolua_S)
{
 irr::IrrLuaEventReceiver* self = (irr::IrrLuaEventReceiver*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__IEventReceiver (lua_State* tolua_S)
{
 irr::IEventReceiver* self = (irr::IEventReceiver*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SMeshBufferTangents (lua_State* tolua_S)
{
 irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__SLight (lua_State* tolua_S)
{
 irr::video::SLight* self = (irr::video::SLight*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IImageLoader (lua_State* tolua_S)
{
 irr::video::IImageLoader* self = (irr::video::IImageLoader*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIEditBox (lua_State* tolua_S)
{
 irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IrrLuaIGUISkin (lua_State* tolua_S)
{
 irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIButton (lua_State* tolua_S)
{
 irr::gui::IGUIButton* self = (irr::gui::IGUIButton*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SMesh (lua_State* tolua_S)
{
 irr::scene::SMesh* self = (irr::scene::SMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__ILogger (lua_State* tolua_S)
{
 irr::ILogger* self = (irr::ILogger*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaISceneNode (lua_State* tolua_S)
{
 irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IAnimatedMeshSceneNode (lua_State* tolua_S)
{
 irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__SColor (lua_State* tolua_S)
{
 irr::video::SColor* self = (irr::video::SColor*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__S3DVertex (lua_State* tolua_S)
{
 irr::video::S3DVertex* self = (irr::video::S3DVertex*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__position2d_f32_ (lua_State* tolua_S)
{
 irr::core::position2d<f32>* self = (irr::core::position2d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIWindow (lua_State* tolua_S)
{
 irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUITabControl (lua_State* tolua_S)
{
 irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUITab (lua_State* tolua_S)
{
 irr::gui::IGUITab* self = (irr::gui::IGUITab*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaIAnimatedMesh (lua_State* tolua_S)
{
 irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIStaticText (lua_State* tolua_S)
{
 irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIScrollBar (lua_State* tolua_S)
{
 irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__SMaterial (lua_State* tolua_S)
{
 irr::video::SMaterial* self = (irr::video::SMaterial*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIListBox (lua_State* tolua_S)
{
 irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIInOutFader (lua_State* tolua_S)
{
 irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__array_irr__core__vector3d_f32___ (lua_State* tolua_S)
{
 irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ISceneNode (lua_State* tolua_S)
{
 irr::scene::ISceneNode* self = (irr::scene::ISceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__plane3d_f32_ (lua_State* tolua_S)
{
 irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIContextMenu (lua_State* tolua_S)
{
 irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__line2d_f32_ (lua_State* tolua_S)
{
 irr::core::line2d<f32>* self = (irr::core::line2d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIImage (lua_State* tolua_S)
{
 irr::gui::IGUIImage* self = (irr::gui::IGUIImage*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIFileOpenDialog (lua_State* tolua_S)
{
 irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__vector3d_f32_ (lua_State* tolua_S)
{
 irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__SViewFrustrum (lua_State* tolua_S)
{
 irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IMaterialRenderer (lua_State* tolua_S)
{
 irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__IXMLReader (lua_State* tolua_S)
{
 irr::io::IXMLReader* self = (irr::io::IXMLReader*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaISceneNodeAnimator (lua_State* tolua_S)
{
 irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ISceneNodeAnimator (lua_State* tolua_S)
{
 irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIComboBox (lua_State* tolua_S)
{
 irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUICheckBox (lua_State* tolua_S)
{
 irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaIAnimatedMeshSceneNode (lua_State* tolua_S)
{
 irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__array_s32_ (lua_State* tolua_S)
{
 irr::core::array<s32>* self = (irr::core::array<s32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IrrLuaIShaderConstantSetCallBack (lua_State* tolua_S)
{
 irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__IUnknown (lua_State* tolua_S)
{
 irr::IUnknown* self = (irr::IUnknown*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IMesh (lua_State* tolua_S)
{
 irr::scene::IMesh* self = (irr::scene::IMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ISceneManager (lua_State* tolua_S)
{
 irr::scene::ISceneManager* self = (irr::scene::ISceneManager*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__SAttributeReadWriteOptions (lua_State* tolua_S)
{
 irr::io::SAttributeReadWriteOptions* self = (irr::io::SAttributeReadWriteOptions*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IrrLuaIGUIElement (lua_State* tolua_S)
{
 irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IShaderConstantSetCallBack (lua_State* tolua_S)
{
 irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IVideoModeList (lua_State* tolua_S)
{
 irr::video::IVideoModeList* self = (irr::video::IVideoModeList*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ITerrainSceneNode (lua_State* tolua_S)
{
 irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IParticleEmitter (lua_State* tolua_S)
{
 irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_core__vector3df (lua_State* tolua_S)
{
 core::vector3df* self = (core::vector3df*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__triangle3d_f32_ (lua_State* tolua_S)
{
 irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ISceneNodeAnimatorCollisionResponse (lua_State* tolua_S)
{
 irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIFont (lua_State* tolua_S)
{
 irr::gui::IGUIFont* self = (irr::gui::IGUIFont*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ICameraSceneNode (lua_State* tolua_S)
{
 irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__position2d_s32_ (lua_State* tolua_S)
{
 irr::core::position2d<s32>* self = (irr::core::position2d<s32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__gui__IGUIElement (lua_State* tolua_S)
{
 irr::gui::IGUIElement* self = (irr::gui::IGUIElement*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__ISceneCollisionManager (lua_State* tolua_S)
{
 irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_irr__scene__ISceneNode__ (lua_State* tolua_S)
{
 irr::core::list<irr::scene::ISceneNode*>* self = (irr::core::list<irr::scene::ISceneNode*>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaIMesh (lua_State* tolua_S)
{
 irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__IFileList (lua_State* tolua_S)
{
 irr::io::IFileList* self = (irr::io::IFileList*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__S3DVertex2TCoords (lua_State* tolua_S)
{
 irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__SColorf (lua_State* tolua_S)
{
 irr::video::SColorf* self = (irr::video::SColorf*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__PITexture (lua_State* tolua_S)
{
 irr::video::PITexture* self = (irr::video::PITexture*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_irr__scene__ISceneNodeAnimator__ (lua_State* tolua_S)
{
 irr::core::list<irr::scene::ISceneNodeAnimator*>* self = (irr::core::list<irr::scene::ISceneNodeAnimator*>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__array_f32_ (lua_State* tolua_S)
{
 irr::core::array<f32>* self = (irr::core::array<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_irr__gui__IGUIElement__ (lua_State* tolua_S)
{
 irr::core::list<irr::gui::IGUIElement*>* self = (irr::core::list<irr::gui::IGUIElement*>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__io__IFileSystem (lua_State* tolua_S)
{
 irr::io::IFileSystem* self = (irr::io::IFileSystem*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__list_irr__scene__ISceneNodeAnimator____Iterator (lua_State* tolua_S)
{
 irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* self = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__scene__IrrLuaISceneNodeAnimatorCollisionResponse (lua_State* tolua_S)
{
 irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__core__vector2d_f32_ (lua_State* tolua_S)
{
 irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}

static int tolua_collect_irr__video__IMaterialRendererServices (lua_State* tolua_S)
{
 irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*) tolua_tousertype(tolua_S,1,0);
	delete self;
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"irr::io::IReadFile");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMesh");
 tolua_usertype(tolua_S,"wchar_t");
 tolua_usertype(tolua_S,"irr::core::array<irr::video::S3DVertex>");
 tolua_usertype(tolua_S,"irr::core::quaternion");
 tolua_usertype(tolua_S,"irr::io::IXMLWriter");
 tolua_usertype(tolua_S,"irr::gui::IGUIEnvironment");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaITriangleSelector");
 tolua_usertype(tolua_S,"irr::video::IGPUProgrammingServices");
 tolua_usertype(tolua_S,"irr::video::ITexture");
 tolua_usertype(tolua_S,"irr::scene::SMeshBufferLightMap");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMeshB3d");
 tolua_usertype(tolua_S,"irr::scene::IParticleAffector");
 tolua_usertype(tolua_S,"irr::core::stringc");
 tolua_usertype(tolua_S,"irr::core::triangle3d<f32>");
 tolua_usertype(tolua_S,"irr::scene::IBillboardSceneNode");
 tolua_usertype(tolua_S,"irr::scene::IParticleEmitter");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMeshMD2");
 tolua_usertype(tolua_S,"irr::video::IImageWriter");
 tolua_usertype(tolua_S,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
 tolua_usertype(tolua_S,"irr::gui::IGUIMeshViewer");
 tolua_usertype(tolua_S,"irr::gui::IGUIToolBar");
 tolua_usertype(tolua_S,"irr::io::IAttributes");
 tolua_usertype(tolua_S,"irr::scene::SMeshBuffer");
 tolua_usertype(tolua_S,"irr::scene::IMeshBuffer");
 tolua_usertype(tolua_S,"irr::scene::SMeshBufferTangents");
 tolua_usertype(tolua_S,"irr::video::IImageLoader");
 tolua_usertype(tolua_S,"irr::gui::IGUIEditBox");
 tolua_usertype(tolua_S,"irr::ILogger");
 tolua_usertype(tolua_S,"irr::video::SColor");
 tolua_usertype(tolua_S,"irr::core::position2d<f32>");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaIAnimatedMesh");
 tolua_usertype(tolua_S,"irr::core::array<irr::core::vector3d<f32> >");
 tolua_usertype(tolua_S,"irr::scene::ISceneNode");
 tolua_usertype(tolua_S,"irr::core::plane3d<f32>");
 tolua_usertype(tolua_S,"irr::gui::IGUIContextMenu");
 tolua_usertype(tolua_S,"irr::scene::ISceneCollisionManager");
 tolua_usertype(tolua_S,"irr::scene::SViewFrustrum");
 tolua_usertype(tolua_S,"irr::core::array<irr::scene::IMeshBuffer*>");
 tolua_usertype(tolua_S,"irr::Unknown");
 tolua_usertype(tolua_S,"irr::scene::ISceneNodeAnimator");
 tolua_usertype(tolua_S,"core::array<irr::video::S3DVertex2TCoords>");
 tolua_usertype(tolua_S,"irr::core::array<s32>");
 tolua_usertype(tolua_S,"irr::IUnknown");
 tolua_usertype(tolua_S,"irr::io::SAttributeReadWriteOptions");
 tolua_usertype(tolua_S,"irr::gui::IGUIFileOpenDialog");
 tolua_usertype(tolua_S,"irr::video::IVideoModeList");
 tolua_usertype(tolua_S,"core::vector3df");
 tolua_usertype(tolua_S,"irr::gui::ICursorControl");
 tolua_usertype(tolua_S,"irr::core::position2d<s32>");
 tolua_usertype(tolua_S,"irr::gui::IGUIElement");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaIMesh");
 tolua_usertype(tolua_S,"irr::io::IFileList");
 tolua_usertype(tolua_S,"irr::core::list<f32>");
 tolua_usertype(tolua_S,"irr::video::PITexture");
 tolua_usertype(tolua_S,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
 tolua_usertype(tolua_S,"irr::scene::IDummyTransformationSceneNode");
 tolua_usertype(tolua_S,"irr::SKeyMap");
 tolua_usertype(tolua_S,"irr::core::matrix4");
 tolua_usertype(tolua_S,"irr::gui::IGUIInOutFader");
 tolua_usertype(tolua_S,"irr::core::array<irr::video::PITexture>");
 tolua_usertype(tolua_S,"irr::scene::ISceneNodeAnimatorCollisionResponse");
 tolua_usertype(tolua_S,"irr::video::SExposedVideoData");
 tolua_usertype(tolua_S,"irr::scene::IMeshCache");
 tolua_usertype(tolua_S,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
 tolua_usertype(tolua_S,"irr::video::IImage");
 tolua_usertype(tolua_S,"virtual irr::IUnknown");
 tolua_usertype(tolua_S,"irr::io::IWriteFile");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaIParticleAffector");
 tolua_usertype(tolua_S,"irr::scene::IMeshManipulator");
 tolua_usertype(tolua_S,"irr::video::S3DVertexTangents");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaIAnimatedMeshSceneNode");
 tolua_usertype(tolua_S,"irr::scene::ISceneUserDataSerializer");
 tolua_usertype(tolua_S,"irr::core::rect<s32>");
 tolua_usertype(tolua_S,"irr::core::array<u32>");
 tolua_usertype(tolua_S,"irr::core::aabbox3d<f32>");
 tolua_usertype(tolua_S,"irr::core::line3d<f32>");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMeshX");
 tolua_usertype(tolua_S,"irr::scene::SAnimatedMesh");
 tolua_usertype(tolua_S,"irr::gui::IGUIButton");
 tolua_usertype(tolua_S,"irr::IOSOperator");
 tolua_usertype(tolua_S,"irr::IrrlichtDevice");
 tolua_usertype(tolua_S,"irr::SIrrlichtCreationParameters");
 tolua_usertype(tolua_S,"irr::video::SLight");
 tolua_usertype(tolua_S,"c8");
 tolua_usertype(tolua_S,"irr::gui::IGUIScrollBar");
 tolua_usertype(tolua_S,"irr::scene::IShadowVolumeSceneNode");
 tolua_usertype(tolua_S,"core::list<irr::gui::IGUIElement*>");
 tolua_usertype(tolua_S,"irr::scene::SMesh");
 tolua_usertype(tolua_S,"irr::core::array<f32>");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaISceneNode");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMeshSceneNode");
 tolua_usertype(tolua_S,"irr::gui::IrrLuaIGUIElement");
 tolua_usertype(tolua_S,"irr::video::S3DVertex");
 tolua_usertype(tolua_S,"irr::gui::IGUIStaticText");
 tolua_usertype(tolua_S,"irr::IrrLuaEventReceiver");
 tolua_usertype(tolua_S,"irr::IEventReceiver");
 tolua_usertype(tolua_S,"irr::SEvent");
 tolua_usertype(tolua_S,"irr::scene::IAnimationEndCallBack");
 tolua_usertype(tolua_S,"irr::gui::IrrLuaIGUISkin");
 tolua_usertype(tolua_S,"irr::gui::IGUISkin");
 tolua_usertype(tolua_S,"irr::video::SMaterial");
 tolua_usertype(tolua_S,"irr::io::IAttributeExchangingObject");
 tolua_usertype(tolua_S,"irr::gui::IGUITabControl");
 tolua_usertype(tolua_S,"irr::core::dimension2d<s32>");
 tolua_usertype(tolua_S,"irr::gui::IGUITab");
 tolua_usertype(tolua_S,"irr::gui::IGUIListBox");
 tolua_usertype(tolua_S,"irr::gui::IGUIImage");
 tolua_usertype(tolua_S,"irr::core::line2d<f32>");
 tolua_usertype(tolua_S,"irr::scene::ITriangleSelector");
 tolua_usertype(tolua_S,"irr::core::dimension2d<f32>");
 tolua_usertype(tolua_S,"irr::gui::IGUIWindow");
 tolua_usertype(tolua_S,"irr::gui::IGUIComboBox");
 tolua_usertype(tolua_S,"irr::video::IMaterialRenderer");
 tolua_usertype(tolua_S,"irr::io::IXMLReader");
 tolua_usertype(tolua_S,"irr::core::array<irr::video::S3DVertexTangents>");
 tolua_usertype(tolua_S,"irr::scene::ISceneNodeFactory");
 tolua_usertype(tolua_S,"irr::gui::IGUICheckBox");
 tolua_usertype(tolua_S,"core::array<irr::scene::IMesh*>");
 tolua_usertype(tolua_S,"irr::io::IFileSystem");
 tolua_usertype(tolua_S,"irr::scene::IMesh");
 tolua_usertype(tolua_S,"irr::ITimer");
 tolua_usertype(tolua_S,"irr::video::IrrLuaIShaderConstantSetCallBack");
 tolua_usertype(tolua_S,"irr::scene::IParticleSystemSceneNode");
 tolua_usertype(tolua_S,"irr::scene::IMeshSceneNode");
 tolua_usertype(tolua_S,"irr::scene::ITerrainSceneNode");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaIAnimationEndCallBack");
 tolua_usertype(tolua_S,"irr::video::IShaderConstantSetCallBack");
 tolua_usertype(tolua_S,"irr::video::SColorf");
 tolua_usertype(tolua_S,"irr::core::array<irr::core::stringc>");
 tolua_usertype(tolua_S,"irr::video::IVideoDriver");
 tolua_usertype(tolua_S,"core::array<u16>");
 tolua_usertype(tolua_S,"irr::scene::ISceneNodeAnimatorFactory");
 tolua_usertype(tolua_S,"irr::core::stringw");
 tolua_usertype(tolua_S,"irr::gui::IGUIFont");
 tolua_usertype(tolua_S,"irr::core::list<f32>::Iterator");
 tolua_usertype(tolua_S,"irr::scene::ICameraSceneNode");
 tolua_usertype(tolua_S,"irr::scene::ITextSceneNode");
 tolua_usertype(tolua_S,"irr::scene::IMetaTriangleSelector");
 tolua_usertype(tolua_S,"irr::scene::ISceneManager");
 tolua_usertype(tolua_S,"irr::core::array<u16>");
 tolua_usertype(tolua_S,"irr::scene::SParticle");
 tolua_usertype(tolua_S,"irr::video::S3DVertex2TCoords");
 tolua_usertype(tolua_S,"irr::scene::ILightSceneNode");
 tolua_usertype(tolua_S,"irr::core::list<irr::scene::ISceneNode*>");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaISceneNodeAnimator");
 tolua_usertype(tolua_S,"irr::scene::IAnimatedMeshMS3D");
 tolua_usertype(tolua_S,"irr::core::list<irr::gui::IGUIElement*>");
 tolua_usertype(tolua_S,"irr::core::vector3d<f32>");
 tolua_usertype(tolua_S,"irr::scene::IMeshLoader");
 tolua_usertype(tolua_S,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse");
 tolua_usertype(tolua_S,"irr::core::vector2d<f32>");
 tolua_usertype(tolua_S,"irr::video::IMaterialRendererServices");
}

/* function: irr::cast::to_pitexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_pitexture00
static int tolua_IrrLua_irr_cast_to_pitexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* p = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::video::PITexture tolua_ret = (irr::video::PITexture)  irr::cast::to_pitexture(p);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::PITexture(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::PITexture");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::PITexture));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::PITexture");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_pitexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::to_stringw */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_stringw00
static int tolua_IrrLua_irr_cast_to_stringw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_iscppstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,1,0));
  {
   irr::core::stringw tolua_ret = (irr::core::stringw)  irr::cast::to_stringw(s);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::stringw(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringw");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::stringw));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringw");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_stringw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::to_wchar_t_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_wchar_t_ptr00
static int tolua_IrrLua_irr_cast_to_wchar_t_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_iscppstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,1,0));
  {
   wchar_t* tolua_ret = (wchar_t*)  irr::cast::to_wchar_t_ptr(s);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_wchar_t_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::to_const_wchar_t_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_const_wchar_t_ptr00
static int tolua_IrrLua_irr_cast_to_const_wchar_t_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_iscppstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,1,0));
  {
   const wchar_t* tolua_ret = (const wchar_t*)  irr::cast::to_const_wchar_t_ptr(s);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_const_wchar_t_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::to_const_c8_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_const_c8_ptr00
static int tolua_IrrLua_irr_cast_to_const_c8_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_iscppstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,1,0));
  {
   const c8* tolua_ret = (const c8*)  irr::cast::to_const_c8_ptr(s);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"const c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_const_c8_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::to_c8_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_to_c8_ptr00
static int tolua_IrrLua_irr_cast_to_c8_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_iscppstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,1,0));
  {
   c8* tolua_ret = (c8*)  irr::cast::to_c8_ptr(s);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'to_c8_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::c8_ptr_to_std_string */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_c8_ptr_to_std_string00
static int tolua_IrrLua_irr_cast_c8_ptr_to_std_string00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  c8* s = ((c8*)  tolua_tousertype(tolua_S,1,0));
  {
   std::string tolua_ret = (std::string)  irr::cast::c8_ptr_to_std_string(s);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'c8_ptr_to_std_string'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::const_wchar_t_ptr_to_std_string */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_const_wchar_t_ptr_to_std_string00
static int tolua_IrrLua_irr_cast_const_wchar_t_ptr_to_std_string00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  wchar_t* w = ((wchar_t*)  tolua_tousertype(tolua_S,1,0));
  {
   std::string tolua_ret = (std::string)  irr::cast::const_wchar_t_ptr_to_std_string(w);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'const_wchar_t_ptr_to_std_string'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::wchar_t_ptr_to_std_string */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_wchar_t_ptr_to_std_string00
static int tolua_IrrLua_irr_cast_wchar_t_ptr_to_std_string00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  wchar_t* w = ((wchar_t*)  tolua_tousertype(tolua_S,1,0));
  {
   std::string tolua_ret = (std::string)  irr::cast::wchar_t_ptr_to_std_string(w);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wchar_t_ptr_to_std_string'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::delete_wchar_t_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_delete_wchar_t_ptr00
static int tolua_IrrLua_irr_cast_delete_wchar_t_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  wchar_t* w = ((wchar_t*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::cast::delete_wchar_t_ptr(w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete_wchar_t_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::delete_const_wchar_t_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_delete_const_wchar_t_ptr00
static int tolua_IrrLua_irr_cast_delete_const_wchar_t_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const wchar_t* w = ((const wchar_t*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::cast::delete_const_wchar_t_ptr(w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete_const_wchar_t_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::delete_c8_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_delete_c8_ptr00
static int tolua_IrrLua_irr_cast_delete_c8_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  c8* c = ((c8*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::cast::delete_c8_ptr(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete_c8_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::cast::delete_const_c8_ptr */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_cast_delete_const_c8_ptr00
static int tolua_IrrLua_irr_cast_delete_const_c8_ptr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const c8* c = ((const c8*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::cast::delete_const_c8_ptr(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete_const_c8_ptr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_SKeyMap_new00
static int tolua_IrrLua_irr_SKeyMap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::SKeyMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::SKeyMap* tolua_ret = (irr::SKeyMap*)  new irr::SKeyMap();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::SKeyMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_SKeyMap_new00_local
static int tolua_IrrLua_irr_SKeyMap_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::SKeyMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::SKeyMap* tolua_ret = (irr::SKeyMap*)  new irr::SKeyMap();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::SKeyMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Action of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__SKeyMap_Action
static int tolua_get_irr__SKeyMap_Action(lua_State* tolua_S)
{
  irr::SKeyMap* self = (irr::SKeyMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Action'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Action);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Action of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__SKeyMap_Action
static int tolua_set_irr__SKeyMap_Action(lua_State* tolua_S)
{
  irr::SKeyMap* self = (irr::SKeyMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Action'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Action = ((irr::EKEY_ACTION) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KeyCode of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__SKeyMap_KeyCode
static int tolua_get_irr__SKeyMap_KeyCode(lua_State* tolua_S)
{
  irr::SKeyMap* self = (irr::SKeyMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyCode'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->KeyCode);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KeyCode of class  irr::SKeyMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__SKeyMap_KeyCode
static int tolua_set_irr__SKeyMap_KeyCode(lua_State* tolua_S)
{
  irr::SKeyMap* self = (irr::SKeyMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KeyCode'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KeyCode = ((irr::EKEY_CODE) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_new00
static int tolua_IrrLua_irr_IUnknown_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::IUnknown* tolua_ret = (irr::IUnknown*)  new irr::IUnknown();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IUnknown");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_new00_local
static int tolua_IrrLua_irr_IUnknown_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::IUnknown* tolua_ret = (irr::IUnknown*)  new irr::IUnknown();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::IUnknown");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_delete00
static int tolua_IrrLua_irr_IUnknown_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IUnknown* self = (irr::IUnknown*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_grab00
static int tolua_IrrLua_irr_IUnknown_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IUnknown* self = (irr::IUnknown*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_drop00
static int tolua_IrrLua_irr_IUnknown_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IUnknown* self = (irr::IUnknown*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::IUnknown */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IUnknown_getDebugName00
static int tolua_IrrLua_irr_IUnknown_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IUnknown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IUnknown* self = (irr::IUnknown*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_clear00
static int tolua_IrrLua_irr_io_IAttributes_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addInt of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addInt00
static int tolua_IrrLua_irr_io_IAttributes_addInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  signed int value = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addInt'",NULL);
#endif
  {
   self->addInt(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFloat of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addFloat00
static int tolua_IrrLua_irr_io_IAttributes_addFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
   float value = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFloat'",NULL);
#endif
  {
   self->addFloat(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addString of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addString00
static int tolua_IrrLua_irr_io_IAttributes_addString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* value = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addString'",NULL);
#endif
  {
   self->addString(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addBool of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addBool00
static int tolua_IrrLua_irr_io_IAttributes_addBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addBool'",NULL);
#endif
  {
   self->addBool(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEnum of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addEnum00
static int tolua_IrrLua_irr_io_IAttributes_addEnum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* enumValue = ((c8*)  tolua_tousertype(tolua_S,3,0));
  c8* enumerationLiterals = ((c8*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEnum'",NULL);
#endif
  {
   self->addEnum(attributeName,enumValue,&enumerationLiterals);
   tolua_pushusertype(tolua_S,(void*)enumerationLiterals,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEnum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEnum of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addEnum01
static int tolua_IrrLua_irr_io_IAttributes_addEnum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  signed int enumValue = (( signed int)  tolua_tonumber(tolua_S,3,0));
  c8* enumerationLiterals = ((c8*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEnum'",NULL);
#endif
  {
   self->addEnum(attributeName,enumValue,&enumerationLiterals);
   tolua_pushusertype(tolua_S,(void*)enumerationLiterals,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_addEnum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addColor of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addColor00
static int tolua_IrrLua_irr_io_IAttributes_addColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor value = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addColor'",NULL);
#endif
  {
   self->addColor(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addColorf of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addColorf00
static int tolua_IrrLua_irr_io_IAttributes_addColorf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColorf value = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addColorf'",NULL);
#endif
  {
   self->addColorf(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addColorf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addVector3d of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addVector3d00
static int tolua_IrrLua_irr_io_IAttributes_addVector3d00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32> value = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addVector3d'",NULL);
#endif
  {
   self->addVector3d(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addVector3d'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addBinary of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addBinary00
static int tolua_IrrLua_irr_io_IAttributes_addBinary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
  signed int dataSizeInBytes = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addBinary'",NULL);
#endif
  {
   self->addBinary(attributeName,data,dataSizeInBytes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBinary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTexture of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_addTexture00
static int tolua_IrrLua_irr_io_IAttributes_addTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTexture'",NULL);
#endif
  {
   self->addTexture(attributeName,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeCount of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeCount00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeName of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeName00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getAttributeName(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeType of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeType00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeType'",NULL);
#endif
  {
   irr::io::E_ATTRIBUTE_TYPE tolua_ret = (irr::io::E_ATTRIBUTE_TYPE)  self->getAttributeType(attributeName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeType of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeType01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeType'",NULL);
#endif
  {
   irr::io::E_ATTRIBUTE_TYPE tolua_ret = (irr::io::E_ATTRIBUTE_TYPE)  self->getAttributeType(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute00
static int tolua_IrrLua_irr_io_IAttributes_setAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* value = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsString of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsString00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsString'",NULL);
#endif
  {
   irr::core::stringc tolua_ret = (irr::core::stringc)  self->getAttributeAsString(attributeName);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::stringc(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::stringc));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsString of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsString01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* target = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsString'",NULL);
#endif
  {
   self->getAttributeAsString(attributeName,target);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsString of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsString02
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsString02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsString'",NULL);
#endif
  {
   irr::core::stringc tolua_ret = (irr::core::stringc)  self->getAttributeAsString(index);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::stringc(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::stringc));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsString01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute01
static int tolua_IrrLua_irr_io_IAttributes_setAttribute01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsBool of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsBool'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAttributeAsBool(attributeName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsBool of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsBool'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAttributeAsBool(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute02
static int tolua_IrrLua_irr_io_IAttributes_setAttribute02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  signed int value = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsInt of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsInt'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeAsInt(attributeName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsInt of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsInt'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeAsInt(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute03
static int tolua_IrrLua_irr_io_IAttributes_setAttribute03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
   float value = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsFloat of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsFloat'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getAttributeAsFloat(attributeName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsFloat of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsFloat'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getAttributeAsFloat(index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute04
static int tolua_IrrLua_irr_io_IAttributes_setAttribute04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,color);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsColor of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  const c8* attributeName = ((const c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getAttributeAsColor(attributeName);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsColor of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getAttributeAsColor(index);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute05
static int tolua_IrrLua_irr_io_IAttributes_setAttribute05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColorf color = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,color);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsColorf of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsColorf'",NULL);
#endif
  {
   irr::video::SColorf tolua_ret = (irr::video::SColorf)  self->getAttributeAsColorf(attributeName);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColorf(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColorf));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsColorf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsColorf of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsColorf'",NULL);
#endif
  {
   irr::video::SColorf tolua_ret = (irr::video::SColorf)  self->getAttributeAsColorf(index);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColorf(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColorf));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute06
static int tolua_IrrLua_irr_io_IAttributes_setAttribute06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,v);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsVector3d of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsVector3d'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAttributeAsVector3d(attributeName);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsVector3d'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsVector3d of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsVector3d'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAttributeAsVector3d(index);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute07
static int tolua_IrrLua_irr_io_IAttributes_setAttribute07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
  signed int dataSizeInBytes = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,data,dataSizeInBytes);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsBinaryData of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  void* outData = ((void*)  tolua_touserdata(tolua_S,3,0));
  signed int maxSizeInBytes = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsBinaryData'",NULL);
#endif
  {
   self->getAttributeAsBinaryData(attributeName,outData,maxSizeInBytes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsBinaryData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsBinaryData of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  void* outData = ((void*)  tolua_touserdata(tolua_S,3,0));
  signed int maxSizeInBytes = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsBinaryData'",NULL);
#endif
  {
   self->getAttributeAsBinaryData(index,outData,maxSizeInBytes);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute08
static int tolua_IrrLua_irr_io_IAttributes_setAttribute08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* enumValue = ((c8*)  tolua_tousertype(tolua_S,3,0));
  c8* enumerationLiterals = ((c8*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,enumValue,&enumerationLiterals);
   tolua_pushusertype(tolua_S,(void*)enumerationLiterals,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsEnumeration'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getAttributeAsEnumeration(attributeName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsEnumeration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* enumerationLiteralsToUse = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsEnumeration'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeAsEnumeration(attributeName,&enumerationLiteralsToUse);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushusertype(tolua_S,(void*)enumerationLiteralsToUse,"c8");
  }
 }
 return 2;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration02
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  c8* enumerationLiteralsToUse = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsEnumeration'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeAsEnumeration(index,&enumerationLiteralsToUse);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushusertype(tolua_S,(void*)enumerationLiteralsToUse,"c8");
  }
 }
 return 2;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration03
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsEnumeration'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getAttributeAsEnumeration(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeEnumerationLiteralsOfEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::array<irr::core::stringc>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::core::array<irr::core::stringc>* outLiterals = ((irr::core::array<irr::core::stringc>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeEnumerationLiteralsOfEnumeration'",NULL);
#endif
  {
   self->getAttributeEnumerationLiteralsOfEnumeration(attributeName,*outLiterals);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeEnumerationLiteralsOfEnumeration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeEnumerationLiteralsOfEnumeration of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::array<irr::core::stringc>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::core::array<irr::core::stringc>* outLiterals = ((irr::core::array<irr::core::stringc>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeEnumerationLiteralsOfEnumeration'",NULL);
#endif
  {
   self->getAttributeEnumerationLiteralsOfEnumeration(index,*outLiterals);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute09
static int tolua_IrrLua_irr_io_IAttributes_setAttribute09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(attributeName,texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsTexture of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture00
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->getAttributeAsTexture(attributeName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeAsTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeAsTexture of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture01
static int tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeAsTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->getAttributeAsTexture(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: existsAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_existsAttribute00
static int tolua_IrrLua_irr_io_IAttributes_existsAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'existsAttribute'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->existsAttribute(attributeName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'existsAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_findAttribute00
static int tolua_IrrLua_irr_io_IAttributes_findAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  c8* attributeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findAttribute'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->findAttribute(attributeName);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute10
static int tolua_IrrLua_irr_io_IAttributes_setAttribute10(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  c8* value = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute09(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute11
static int tolua_IrrLua_irr_io_IAttributes_setAttribute11(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute10(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute12
static int tolua_IrrLua_irr_io_IAttributes_setAttribute12(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int value = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute11(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute13
static int tolua_IrrLua_irr_io_IAttributes_setAttribute13(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
   float value = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute12(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute14
static int tolua_IrrLua_irr_io_IAttributes_setAttribute14(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,color);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute13(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute15
static int tolua_IrrLua_irr_io_IAttributes_setAttribute15(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::SColorf color = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,color);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute14(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute16
static int tolua_IrrLua_irr_io_IAttributes_setAttribute16(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,v);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute15(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute17
static int tolua_IrrLua_irr_io_IAttributes_setAttribute17(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,3,0));
  signed int dataSizeInBytes = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,data,dataSizeInBytes);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute16(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute18
static int tolua_IrrLua_irr_io_IAttributes_setAttribute18(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  c8* enumValue = ((c8*)  tolua_tousertype(tolua_S,3,0));
  c8* enumerationLiterals = ((c8*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,enumValue,&enumerationLiterals);
   tolua_pushusertype(tolua_S,(void*)enumerationLiterals,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute17(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_setAttribute19
static int tolua_IrrLua_irr_io_IAttributes_setAttribute19(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'",NULL);
#endif
  {
   self->setAttribute(index,texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_io_IAttributes_setAttribute18(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: read of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_read00
static int tolua_IrrLua_irr_io_IAttributes_read00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IXMLReader* reader = ((irr::io::IXMLReader*)  tolua_tousertype(tolua_S,2,0));
  bool readCurrentElementOnly = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'read'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->read(reader,readCurrentElementOnly);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'read'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: write of class  irr::io::IAttributes */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributes_write00
static int tolua_IrrLua_irr_io_IAttributes_write00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributes* self = (irr::io::IAttributes*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IXMLWriter* writer = ((irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'write'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->write(writer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00
static int tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::io::SAttributeReadWriteOptions* tolua_ret = (irr::io::SAttributeReadWriteOptions*)  new irr::io::SAttributeReadWriteOptions();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::SAttributeReadWriteOptions");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00_local
static int tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::io::SAttributeReadWriteOptions* tolua_ret = (irr::io::SAttributeReadWriteOptions*)  new irr::io::SAttributeReadWriteOptions();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::io::SAttributeReadWriteOptions");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Flags of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_get_irr__io__SAttributeReadWriteOptions_Flags
static int tolua_get_irr__io__SAttributeReadWriteOptions_Flags(lua_State* tolua_S)
{
  irr::io::SAttributeReadWriteOptions* self = (irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flags'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Flags);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Flags of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_set_irr__io__SAttributeReadWriteOptions_Flags
static int tolua_set_irr__io__SAttributeReadWriteOptions_Flags(lua_State* tolua_S)
{
  irr::io::SAttributeReadWriteOptions* self = (irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Flags'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Flags = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Filename of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_get_irr__io__SAttributeReadWriteOptions_Filename_ptr
static int tolua_get_irr__io__SAttributeReadWriteOptions_Filename_ptr(lua_State* tolua_S)
{
  irr::io::SAttributeReadWriteOptions* self = (irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Filename'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->Filename,"c8");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Filename of class  irr::io::SAttributeReadWriteOptions */
#ifndef TOLUA_DISABLE_tolua_set_irr__io__SAttributeReadWriteOptions_Filename_ptr
static int tolua_set_irr__io__SAttributeReadWriteOptions_Filename_ptr(lua_State* tolua_S)
{
  irr::io::SAttributeReadWriteOptions* self = (irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Filename'",NULL);
  if (!tolua_isusertype(tolua_S,2,"c8",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Filename = ((c8*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::io::IAttributeExchangingObject */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributeExchangingObject_serializeAttributes00
static int tolua_IrrLua_irr_io_IAttributeExchangingObject_serializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributeExchangingObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributeExchangingObject* self = (irr::io::IAttributeExchangingObject*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::io::IAttributeExchangingObject */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributeExchangingObject_deserializeAttributes00
static int tolua_IrrLua_irr_io_IAttributeExchangingObject_deserializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributeExchangingObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributeExchangingObject* self = (irr::io::IAttributeExchangingObject*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   self->deserializeAttributes(in,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deserializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IAttributeExchangingObject */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributeExchangingObject_grab00
static int tolua_IrrLua_irr_io_IAttributeExchangingObject_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributeExchangingObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributeExchangingObject* self = (irr::io::IAttributeExchangingObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IAttributeExchangingObject */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributeExchangingObject_drop00
static int tolua_IrrLua_irr_io_IAttributeExchangingObject_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributeExchangingObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributeExchangingObject* self = (irr::io::IAttributeExchangingObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IAttributeExchangingObject */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IAttributeExchangingObject_getDebugName00
static int tolua_IrrLua_irr_io_IAttributeExchangingObject_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IAttributeExchangingObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IAttributeExchangingObject* self = (irr::io::IAttributeExchangingObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new00
static int tolua_IrrLua_irr_core_vector2d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new00_local
static int tolua_IrrLua_irr_core_vector2d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new01
static int tolua_IrrLua_irr_core_vector2d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>(nx,ny);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new01_local
static int tolua_IrrLua_irr_core_vector2d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>(nx,ny);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new02
static int tolua_IrrLua_irr_core_vector2d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__new02_local
static int tolua_IrrLua_irr_core_vector2d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::vector2d<f32>* tolua_ret = (irr::core::vector2d<f32>*)  new irr::core::vector2d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___sub00
static int tolua_IrrLua_irr_core_vector2d_f32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator-();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___add00
static int tolua_IrrLua_irr_core_vector2d_f32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator+(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___sub01
static int tolua_IrrLua_irr_core_vector2d_f32___sub01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator-(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32___sub00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___mul00
static int tolua_IrrLua_irr_core_vector2d_f32___mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator*(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___mul01
static int tolua_IrrLua_irr_core_vector2d_f32___mul01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float v = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator*(v);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32___mul00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___div00
static int tolua_IrrLua_irr_core_vector2d_f32___div00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator/(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.div'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___div01
static int tolua_IrrLua_irr_core_vector2d_f32___div01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float v = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->operator/(v);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector2d_f32___div00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32___eq00
static int tolua_IrrLua_irr_core_vector2d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__set00
static int tolua_IrrLua_irr_core_vector2d_f32__set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(nx,ny);
   tolua_pushnumber(tolua_S,(lua_Number)nx);
   tolua_pushnumber(tolua_S,(lua_Number)ny);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLength of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getLength00
static int tolua_IrrLua_irr_core_vector2d_f32__getLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLength'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dotProduct of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__dotProduct00
static int tolua_IrrLua_irr_core_vector2d_f32__dotProduct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dotProduct'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->dotProduct(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dotProduct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDistanceFrom of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getDistanceFrom00
static int tolua_IrrLua_irr_core_vector2d_f32__getDistanceFrom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDistanceFrom'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getDistanceFrom(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDistanceFrom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotateBy of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__rotateBy00
static int tolua_IrrLua_irr_core_vector2d_f32__rotateBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
   double degrees = ((  double)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector2d<f32>* center = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotateBy'",NULL);
#endif
  {
   self->rotateBy(degrees,*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotateBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: normalize of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__normalize00
static int tolua_IrrLua_irr_core_vector2d_f32__normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'normalize'",NULL);
#endif
  {
   irr::core::vector2d<f32>& tolua_ret = (irr::core::vector2d<f32>&)  self->normalize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::vector2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngleTrig of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getAngleTrig00
static int tolua_IrrLua_irr_core_vector2d_f32__getAngleTrig00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngleTrig'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getAngleTrig();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngleTrig'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngle of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getAngle00
static int tolua_IrrLua_irr_core_vector2d_f32__getAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngle'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngleWith of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getAngleWith00
static int tolua_IrrLua_irr_core_vector2d_f32__getAngleWith00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* b = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngleWith'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getAngleWith(*b);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngleWith'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterpolated of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__getInterpolated00
static int tolua_IrrLua_irr_core_vector2d_f32__getInterpolated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* other = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterpolated'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->getInterpolated(*other,d);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterpolated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: interpolate of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector2d_f32__interpolate00
static int tolua_IrrLua_irr_core_vector2d_f32__interpolate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* a = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector2d<f32>* b = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
   float t = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'interpolate'",NULL);
#endif
  {
   self->interpolate(*a,*b,t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'interpolate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__vector2d_f32__X
static int tolua_get_irr__core__vector2d_f32__X(lua_State* tolua_S)
{
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__vector2d_f32__X
static int tolua_set_irr__core__vector2d_f32__X(lua_State* tolua_S)
{
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__vector2d_f32__Y
static int tolua_get_irr__core__vector2d_f32__Y(lua_State* tolua_S)
{
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  irr::core::vector2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__vector2d_f32__Y
static int tolua_set_irr__core__vector2d_f32__Y(lua_State* tolua_S)
{
  irr::core::vector2d<f32>* self = (irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new00
static int tolua_IrrLua_irr_core_vector3d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new00_local
static int tolua_IrrLua_irr_core_vector3d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new01
static int tolua_IrrLua_irr_core_vector3d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>(nx,ny,nz);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new01_local
static int tolua_IrrLua_irr_core_vector3d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>(nx,ny,nz);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new02
static int tolua_IrrLua_irr_core_vector3d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__new02_local
static int tolua_IrrLua_irr_core_vector3d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  new irr::core::vector3d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___sub00
static int tolua_IrrLua_irr_core_vector3d_f32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator-();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___add00
static int tolua_IrrLua_irr_core_vector3d_f32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator+(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___sub01
static int tolua_IrrLua_irr_core_vector3d_f32___sub01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator-(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32___sub00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___mul00
static int tolua_IrrLua_irr_core_vector3d_f32___mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator*(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___mul01
static int tolua_IrrLua_irr_core_vector3d_f32___mul01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float v = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator*(v);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32___mul00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___div00
static int tolua_IrrLua_irr_core_vector3d_f32___div00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator/(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.div'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___div01
static int tolua_IrrLua_irr_core_vector3d_f32___div01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float v = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator/(v);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32___div00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator<= of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___le00
static int tolua_IrrLua_irr_core_vector3d_f32___le00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator<='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator<=(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.le'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32___eq00
static int tolua_IrrLua_irr_core_vector3d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: equals of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__equals00
static int tolua_IrrLua_irr_core_vector3d_f32__equals00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'equals'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->equals(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'equals'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__set00
static int tolua_IrrLua_irr_core_vector3d_f32__set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float nx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,3,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(nx,ny,nz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__set01
static int tolua_IrrLua_irr_core_vector3d_f32__set01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(*p);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_vector3d_f32__set00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLength of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getLength00
static int tolua_IrrLua_irr_core_vector3d_f32__getLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLength'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLengthSQ of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getLengthSQ00
static int tolua_IrrLua_irr_core_vector3d_f32__getLengthSQ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLengthSQ'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getLengthSQ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLengthSQ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dotProduct of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__dotProduct00
static int tolua_IrrLua_irr_core_vector3d_f32__dotProduct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dotProduct'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->dotProduct(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dotProduct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDistanceFrom of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getDistanceFrom00
static int tolua_IrrLua_irr_core_vector3d_f32__getDistanceFrom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDistanceFrom'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getDistanceFrom(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDistanceFrom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDistanceFromSQ of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getDistanceFromSQ00
static int tolua_IrrLua_irr_core_vector3d_f32__getDistanceFromSQ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDistanceFromSQ'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getDistanceFromSQ(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDistanceFromSQ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: crossProduct of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__crossProduct00
static int tolua_IrrLua_irr_core_vector3d_f32__crossProduct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'crossProduct'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->crossProduct(*p);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'crossProduct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBetweenPoints of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__isBetweenPoints00
static int tolua_IrrLua_irr_core_vector3d_f32__isBetweenPoints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* begin = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* end = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBetweenPoints'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBetweenPoints(*begin,*end);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBetweenPoints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: normalize of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__normalize00
static int tolua_IrrLua_irr_core_vector3d_f32__normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'normalize'",NULL);
#endif
  {
   irr::core::vector3d<f32>& tolua_ret = (irr::core::vector3d<f32>&)  self->normalize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLength of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__setLength00
static int tolua_IrrLua_irr_core_vector3d_f32__setLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float newlength = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLength'",NULL);
#endif
  {
   self->setLength(newlength);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: invert of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__invert00
static int tolua_IrrLua_irr_core_vector3d_f32__invert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'invert'",NULL);
#endif
  {
   self->invert();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'invert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotateXZBy of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__rotateXZBy00
static int tolua_IrrLua_irr_core_vector3d_f32__rotateXZBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   double degrees = ((  double)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32>* center = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotateXZBy'",NULL);
#endif
  {
   self->rotateXZBy(degrees,*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotateXZBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotateXYBy of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__rotateXYBy00
static int tolua_IrrLua_irr_core_vector3d_f32__rotateXYBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   double degrees = ((  double)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32>* center = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotateXYBy'",NULL);
#endif
  {
   self->rotateXYBy(degrees,*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotateXYBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotateYZBy of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__rotateYZBy00
static int tolua_IrrLua_irr_core_vector3d_f32__rotateYZBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   double degrees = ((  double)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32>* center = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotateYZBy'",NULL);
#endif
  {
   self->rotateYZBy(degrees,*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotateYZBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterpolated of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getInterpolated00
static int tolua_IrrLua_irr_core_vector3d_f32__getInterpolated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* other = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterpolated'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getInterpolated(*other,d);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterpolated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHorizontalAngle of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getHorizontalAngle00
static int tolua_IrrLua_irr_core_vector3d_f32__getHorizontalAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHorizontalAngle'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getHorizontalAngle();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHorizontalAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAs4Values of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_vector3d_f32__getAs4Values00
static int tolua_IrrLua_irr_core_vector3d_f32__getAs4Values00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float array = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAs4Values'",NULL);
#endif
  {
   self->getAs4Values(&array);
   tolua_pushnumber(tolua_S,(lua_Number)array);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAs4Values'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__vector3d_f32__X
static int tolua_get_irr__core__vector3d_f32__X(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__vector3d_f32__X
static int tolua_set_irr__core__vector3d_f32__X(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__vector3d_f32__Y
static int tolua_get_irr__core__vector3d_f32__Y(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__vector3d_f32__Y
static int tolua_set_irr__core__vector3d_f32__Y(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Z of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__vector3d_f32__Z
static int tolua_get_irr__core__vector3d_f32__Z(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Z of class  irr::core::vector3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__vector3d_f32__Z
static int tolua_set_irr__core__vector3d_f32__Z(lua_State* tolua_S)
{
  irr::core::vector3d<f32>* self = (irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Z = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new00
static int tolua_IrrLua_irr_core_dimension2d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new00_local
static int tolua_IrrLua_irr_core_dimension2d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new01
static int tolua_IrrLua_irr_core_dimension2d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float width = ((  float)  tolua_tonumber(tolua_S,2,0));
   float height = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>(width,height);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new01_local
static int tolua_IrrLua_irr_core_dimension2d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float width = ((  float)  tolua_tonumber(tolua_S,2,0));
   float height = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>(width,height);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new02
static int tolua_IrrLua_irr_core_dimension2d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::dimension2d<f32>* other = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32__new02_local
static int tolua_IrrLua_irr_core_dimension2d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::dimension2d<f32>* other = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::dimension2d<f32>* tolua_ret = (irr::core::dimension2d<f32>*)  new irr::core::dimension2d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_f32___eq00
static int tolua_IrrLua_irr_core_dimension2d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<f32>* other = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Width of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__dimension2d_f32__Width
static int tolua_get_irr__core__dimension2d_f32__Width(lua_State* tolua_S)
{
  irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Width of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__dimension2d_f32__Width
static int tolua_set_irr__core__dimension2d_f32__Width(lua_State* tolua_S)
{
  irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Width = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Height of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__dimension2d_f32__Height
static int tolua_get_irr__core__dimension2d_f32__Height(lua_State* tolua_S)
{
  irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Height of class  irr::core::dimension2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__dimension2d_f32__Height
static int tolua_set_irr__core__dimension2d_f32__Height(lua_State* tolua_S)
{
  irr::core::dimension2d<f32>* self = (irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Height = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new00
static int tolua_IrrLua_irr_core_dimension2d_s32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new00_local
static int tolua_IrrLua_irr_core_dimension2d_s32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new01
static int tolua_IrrLua_irr_core_dimension2d_s32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int width = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int height = (( signed int)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>(width,height);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_s32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new01_local
static int tolua_IrrLua_irr_core_dimension2d_s32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int width = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int height = (( signed int)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>(width,height);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_s32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new02
static int tolua_IrrLua_irr_core_dimension2d_s32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::dimension2d<s32>* other = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_s32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32__new02_local
static int tolua_IrrLua_irr_core_dimension2d_s32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::dimension2d<s32>* other = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::dimension2d<s32>* tolua_ret = (irr::core::dimension2d<s32>*)  new irr::core::dimension2d<s32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_dimension2d_s32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_dimension2d_s32___eq00
static int tolua_IrrLua_irr_core_dimension2d_s32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<s32>* other = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Width of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__dimension2d_s32__Width
static int tolua_get_irr__core__dimension2d_s32__Width(lua_State* tolua_S)
{
  irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Width of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__dimension2d_s32__Width
static int tolua_set_irr__core__dimension2d_s32__Width(lua_State* tolua_S)
{
  irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Width = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Height of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__dimension2d_s32__Height
static int tolua_get_irr__core__dimension2d_s32__Height(lua_State* tolua_S)
{
  irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Height of class  irr::core::dimension2d<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__dimension2d_s32__Height
static int tolua_set_irr__core__dimension2d_s32__Height(lua_State* tolua_S)
{
  irr::core::dimension2d<s32>* self = (irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Height = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new00
static int tolua_IrrLua_irr_core_position2d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new00_local
static int tolua_IrrLua_irr_core_position2d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new01
static int tolua_IrrLua_irr_core_position2d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>(x,y);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new01_local
static int tolua_IrrLua_irr_core_position2d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>(x,y);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new02
static int tolua_IrrLua_irr_core_position2d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<f32>* other = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32__new02_local
static int tolua_IrrLua_irr_core_position2d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<f32>* other = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::position2d<f32>* tolua_ret = (irr::core::position2d<f32>*)  new irr::core::position2d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32___eq00
static int tolua_IrrLua_irr_core_position2d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<f32>* other = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32___sub00
static int tolua_IrrLua_irr_core_position2d_f32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<f32>* other = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::position2d<f32> tolua_ret = (irr::core::position2d<f32>)  self->operator-(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_f32___add00
static int tolua_IrrLua_irr_core_position2d_f32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<f32>* other = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::position2d<f32> tolua_ret = (irr::core::position2d<f32>)  self->operator+(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__position2d_f32__X
static int tolua_get_irr__core__position2d_f32__X(lua_State* tolua_S)
{
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__position2d_f32__X
static int tolua_set_irr__core__position2d_f32__X(lua_State* tolua_S)
{
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__position2d_f32__Y
static int tolua_get_irr__core__position2d_f32__Y(lua_State* tolua_S)
{
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  irr::core::position2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__position2d_f32__Y
static int tolua_set_irr__core__position2d_f32__Y(lua_State* tolua_S)
{
  irr::core::position2d<f32>* self = (irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new00
static int tolua_IrrLua_irr_core_position2d_s32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new00_local
static int tolua_IrrLua_irr_core_position2d_s32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new01
static int tolua_IrrLua_irr_core_position2d_s32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>(x,y);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_s32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new01_local
static int tolua_IrrLua_irr_core_position2d_s32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>(x,y);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_s32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new02
static int tolua_IrrLua_irr_core_position2d_s32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* other = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_s32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32__new02_local
static int tolua_IrrLua_irr_core_position2d_s32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* other = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::position2d<s32>* tolua_ret = (irr::core::position2d<s32>*)  new irr::core::position2d<s32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::position2d<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_position2d_s32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32___eq00
static int tolua_IrrLua_irr_core_position2d_s32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* other = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32___sub00
static int tolua_IrrLua_irr_core_position2d_s32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* other = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::position2d<s32> tolua_ret = (irr::core::position2d<s32>)  self->operator-(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_position2d_s32___add00
static int tolua_IrrLua_irr_core_position2d_s32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* other = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::position2d<s32> tolua_ret = (irr::core::position2d<s32>)  self->operator+(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__position2d_s32__X
static int tolua_get_irr__core__position2d_s32__X(lua_State* tolua_S)
{
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__position2d_s32__X
static int tolua_set_irr__core__position2d_s32__X(lua_State* tolua_S)
{
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__position2d_s32__Y
static int tolua_get_irr__core__position2d_s32__Y(lua_State* tolua_S)
{
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  irr::core::position2d<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__position2d_s32__Y
static int tolua_set_irr__core__position2d_s32__Y(lua_State* tolua_S)
{
  irr::core::position2d<s32>* self = (irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new00
static int tolua_IrrLua_irr_core_line2d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new00_local
static int tolua_IrrLua_irr_core_line2d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new01
static int tolua_IrrLua_irr_core_line2d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,4,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(xa,ya,xb,yb);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new01_local
static int tolua_IrrLua_irr_core_line2d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,4,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(xa,ya,xb,yb);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new02
static int tolua_IrrLua_irr_core_line2d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* Start = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector2d<f32>* End = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(*Start,*End);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new02_local
static int tolua_IrrLua_irr_core_line2d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector2d<f32>* Start = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector2d<f32>* End = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(*Start,*End);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new03
static int tolua_IrrLua_irr_core_line2d_f32__new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line2d<f32>* other = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__new03_local
static int tolua_IrrLua_irr_core_line2d_f32__new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line2d<f32>* other = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::line2d<f32>* tolua_ret = (irr::core::line2d<f32>*)  new irr::core::line2d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line2d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32___add00
static int tolua_IrrLua_irr_core_line2d_f32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* point = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::line2d<f32> tolua_ret = (irr::core::line2d<f32>)  self->operator+(*point);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::line2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::line2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32___sub00
static int tolua_IrrLua_irr_core_line2d_f32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* point = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::line2d<f32> tolua_ret = (irr::core::line2d<f32>)  self->operator-(*point);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::line2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::line2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32___eq00
static int tolua_IrrLua_irr_core_line2d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line2d<f32>* other = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__setLine00
static int tolua_IrrLua_irr_core_line2d_f32__setLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,4,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(xa,ya,xb,yb);
   tolua_pushnumber(tolua_S,(lua_Number)xa);
   tolua_pushnumber(tolua_S,(lua_Number)ya);
   tolua_pushnumber(tolua_S,(lua_Number)xb);
   tolua_pushnumber(tolua_S,(lua_Number)yb);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__setLine01
static int tolua_IrrLua_irr_core_line2d_f32__setLine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector2d<f32>* nstart = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector2d<f32>* nend = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(*nstart,*nend);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__setLine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__setLine02
static int tolua_IrrLua_irr_core_line2d_f32__setLine02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line2d<f32>* line = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(*line);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_line2d_f32__setLine01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLength of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__getLength00
static int tolua_IrrLua_irr_core_line2d_f32__getLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLength'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVector of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__getVector00
static int tolua_IrrLua_irr_core_line2d_f32__getVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVector'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->getVector();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: intersectWith of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__intersectWith00
static int tolua_IrrLua_irr_core_line2d_f32__intersectWith00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line2d<f32>* l = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector2d<f32>* out = ((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'intersectWith'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->intersectWith(*l,*out);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'intersectWith'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUnitVector of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__getUnitVector00
static int tolua_IrrLua_irr_core_line2d_f32__getUnitVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUnitVector'",NULL);
#endif
  {
   irr::core::vector2d<f32> tolua_ret = (irr::core::vector2d<f32>)  self->getUnitVector();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUnitVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAngleWith of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line2d_f32__getAngleWith00
static int tolua_IrrLua_irr_core_line2d_f32__getAngleWith00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line2d<f32>* l = ((irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAngleWith'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getAngleWith(*l);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAngleWith'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: start of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__line2d_f32__start
static int tolua_get_irr__core__line2d_f32__start(lua_State* tolua_S)
{
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'start'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->start,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: start of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__line2d_f32__start
static int tolua_set_irr__core__line2d_f32__start(lua_State* tolua_S)
{
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'start'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->start = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: end of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__line2d_f32__end
static int tolua_get_irr__core__line2d_f32__end(lua_State* tolua_S)
{
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->end,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: end of class  irr::core::line2d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__line2d_f32__end
static int tolua_set_irr__core__line2d_f32__end(lua_State* tolua_S)
{
  irr::core::line2d<f32>* self = (irr::core::line2d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->end = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new00
static int tolua_IrrLua_irr_core_line3d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new00_local
static int tolua_IrrLua_irr_core_line3d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new01
static int tolua_IrrLua_irr_core_line3d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float za = ((  float)  tolua_tonumber(tolua_S,4,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,5,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,6,0));
   float zb = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(xa,ya,za,xb,yb,zb);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new01_local
static int tolua_IrrLua_irr_core_line3d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float za = ((  float)  tolua_tonumber(tolua_S,4,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,5,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,6,0));
   float zb = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(xa,ya,za,xb,yb,zb);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new02
static int tolua_IrrLua_irr_core_line3d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* start = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* end = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(*start,*end);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new02_local
static int tolua_IrrLua_irr_core_line3d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* start = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* end = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(*start,*end);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new03
static int tolua_IrrLua_irr_core_line3d_f32__new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line3d<f32>* other = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__new03_local
static int tolua_IrrLua_irr_core_line3d_f32__new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line3d<f32>* other = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::line3d<f32>* tolua_ret = (irr::core::line3d<f32>*)  new irr::core::line3d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::line3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32___add00
static int tolua_IrrLua_irr_core_line3d_f32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::line3d<f32> tolua_ret = (irr::core::line3d<f32>)  self->operator+(*point);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::line3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::line3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32___sub00
static int tolua_IrrLua_irr_core_line3d_f32___sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::line3d<f32> tolua_ret = (irr::core::line3d<f32>)  self->operator-(*point);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::line3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::line3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32___eq00
static int tolua_IrrLua_irr_core_line3d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32>* other = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__setLine00
static int tolua_IrrLua_irr_core_line3d_f32__setLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float xa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float ya = ((  float)  tolua_tonumber(tolua_S,3,0));
   float za = ((  float)  tolua_tonumber(tolua_S,4,0));
   float xb = ((  float)  tolua_tonumber(tolua_S,5,0));
   float yb = ((  float)  tolua_tonumber(tolua_S,6,0));
   float zb = ((  float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(xa,ya,za,xb,yb,zb);
   tolua_pushnumber(tolua_S,(lua_Number)xa);
   tolua_pushnumber(tolua_S,(lua_Number)ya);
   tolua_pushnumber(tolua_S,(lua_Number)za);
   tolua_pushnumber(tolua_S,(lua_Number)xb);
   tolua_pushnumber(tolua_S,(lua_Number)yb);
   tolua_pushnumber(tolua_S,(lua_Number)zb);
  }
 }
 return 6;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__setLine01
static int tolua_IrrLua_irr_core_line3d_f32__setLine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* nstart = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* nend = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(*nstart,*nend);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__setLine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLine of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__setLine02
static int tolua_IrrLua_irr_core_line3d_f32__setLine02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLine'",NULL);
#endif
  {
   self->setLine(*line);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_line3d_f32__setLine01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLength of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getLength00
static int tolua_IrrLua_irr_core_line3d_f32__getLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLength'",NULL);
#endif
  {
    double tolua_ret = (  double)  self->getLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLengthSQ of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getLengthSQ00
static int tolua_IrrLua_irr_core_line3d_f32__getLengthSQ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLengthSQ'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getLengthSQ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLengthSQ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMiddle of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getMiddle00
static int tolua_IrrLua_irr_core_line3d_f32__getMiddle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMiddle'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getMiddle();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiddle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVector of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getVector00
static int tolua_IrrLua_irr_core_line3d_f32__getVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVector'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getVector();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointBetweenStartAndEnd of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__isPointBetweenStartAndEnd00
static int tolua_IrrLua_irr_core_line3d_f32__isPointBetweenStartAndEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointBetweenStartAndEnd'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointBetweenStartAndEnd(*point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointBetweenStartAndEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClosestPoint of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getClosestPoint00
static int tolua_IrrLua_irr_core_line3d_f32__getClosestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClosestPoint'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getClosestPoint(*point);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClosestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithSphere of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_line3d_f32__getIntersectionWithSphere00
static int tolua_IrrLua_irr_core_line3d_f32__getIntersectionWithSphere00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> sorigin = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float sradius = ((  float)  tolua_tonumber(tolua_S,3,0));
   double outdistance = ((  double)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithSphere'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithSphere(sorigin,sradius,outdistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)outdistance);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithSphere'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: start of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__line3d_f32__start
static int tolua_get_irr__core__line3d_f32__start(lua_State* tolua_S)
{
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'start'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->start,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: start of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__line3d_f32__start
static int tolua_set_irr__core__line3d_f32__start(lua_State* tolua_S)
{
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'start'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->start = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: end of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__line3d_f32__end
static int tolua_get_irr__core__line3d_f32__end(lua_State* tolua_S)
{
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->end,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: end of class  irr::core::line3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__line3d_f32__end
static int tolua_set_irr__core__line3d_f32__end(lua_State* tolua_S)
{
  irr::core::line3d<f32>* self = (irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->end = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new00
static int tolua_IrrLua_irr_core_plane3d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new00_local
static int tolua_IrrLua_irr_core_plane3d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new01
static int tolua_IrrLua_irr_core_plane3d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* MPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* Normal = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*MPoint,*Normal);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new01_local
static int tolua_IrrLua_irr_core_plane3d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* MPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* Normal = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*MPoint,*Normal);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new02
static int tolua_IrrLua_irr_core_plane3d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float px = ((  float)  tolua_tonumber(tolua_S,2,0));
   float py = ((  float)  tolua_tonumber(tolua_S,3,0));
   float pz = ((  float)  tolua_tonumber(tolua_S,4,0));
   float nx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,6,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(px,py,pz,nx,ny,nz);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new02_local
static int tolua_IrrLua_irr_core_plane3d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float px = ((  float)  tolua_tonumber(tolua_S,2,0));
   float py = ((  float)  tolua_tonumber(tolua_S,3,0));
   float pz = ((  float)  tolua_tonumber(tolua_S,4,0));
   float nx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,6,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(px,py,pz,nx,ny,nz);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new03
static int tolua_IrrLua_irr_core_plane3d_f32__new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::plane3d<f32>* other = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new03_local
static int tolua_IrrLua_irr_core_plane3d_f32__new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::plane3d<f32>* other = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new04
static int tolua_IrrLua_irr_core_plane3d_f32__new04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* point1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* point2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* point3 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*point1,*point2,*point3);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__new04_local
static int tolua_IrrLua_irr_core_plane3d_f32__new04_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* point1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* point2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* point3 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  {
   irr::core::plane3d<f32>* tolua_ret = (irr::core::plane3d<f32>*)  new irr::core::plane3d<f32>(*point1,*point2,*point3);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::plane3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__new03_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32___eq00
static int tolua_IrrLua_irr_core_plane3d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* other = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlane of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__setPlane00
static int tolua_IrrLua_irr_core_plane3d_f32__setPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* nvector = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlane'",NULL);
#endif
  {
   self->setPlane(*point,*nvector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlane of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__setPlane01
static int tolua_IrrLua_irr_core_plane3d_f32__setPlane01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* nvect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlane'",NULL);
#endif
  {
   self->setPlane(*nvect,d);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__setPlane00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlane of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__setPlane02
static int tolua_IrrLua_irr_core_plane3d_f32__setPlane02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* point2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* point3 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlane'",NULL);
#endif
  {
   self->setPlane(*point1,*point2,*point3);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_plane3d_f32__setPlane01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithLine of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLine00
static int tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linePoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* lineVect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outIntersection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithLine(*linePoint,*lineVect,*outIntersection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getKnownIntersectionWithLine of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getKnownIntersectionWithLine00
static int tolua_IrrLua_irr_core_plane3d_f32__getKnownIntersectionWithLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linePoint1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* linePoint2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getKnownIntersectionWithLine'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getKnownIntersectionWithLine(*linePoint1,*linePoint2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKnownIntersectionWithLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithLimitedLine of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLimitedLine00
static int tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLimitedLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linePoint1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* linePoint2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outIntersection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithLimitedLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithLimitedLine(*linePoint1,*linePoint2,*outIntersection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithLimitedLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: classifyPointRelation of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__classifyPointRelation00
static int tolua_IrrLua_irr_core_plane3d_f32__classifyPointRelation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'classifyPointRelation'",NULL);
#endif
  {
   irr::core::EIntersectionRelation3D tolua_ret = (irr::core::EIntersectionRelation3D)  self->classifyPointRelation(*point);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'classifyPointRelation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateD of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__recalculateD00
static int tolua_IrrLua_irr_core_plane3d_f32__recalculateD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* MPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateD'",NULL);
#endif
  {
   self->recalculateD(*MPoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMemberPoint of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getMemberPoint00
static int tolua_IrrLua_irr_core_plane3d_f32__getMemberPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMemberPoint'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getMemberPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMemberPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: existsInterSection of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__existsInterSection00
static int tolua_IrrLua_irr_core_plane3d_f32__existsInterSection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* other = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'existsInterSection'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->existsInterSection(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'existsInterSection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithPlane of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlane00
static int tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* other = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* outLinePoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outLineVect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithPlane'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithPlane(*other,*outLinePoint,*outLineVect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithPlanes of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlanes00
static int tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlanes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* o1 = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::plane3d<f32>* o2 = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithPlanes'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithPlanes(*o1,*o2,*outPoint);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithPlanes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFrontFacing of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__isFrontFacing00
static int tolua_IrrLua_irr_core_plane3d_f32__isFrontFacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* lookDirection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFrontFacing'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFrontFacing(*lookDirection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFrontFacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDistanceTo of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_plane3d_f32__getDistanceTo00
static int tolua_IrrLua_irr_core_plane3d_f32__getDistanceTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* point = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDistanceTo'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getDistanceTo(*point);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDistanceTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Normal of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__plane3d_f32__Normal
static int tolua_get_irr__core__plane3d_f32__Normal(lua_State* tolua_S)
{
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Normal,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Normal of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__plane3d_f32__Normal
static int tolua_set_irr__core__plane3d_f32__Normal(lua_State* tolua_S)
{
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Normal = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: D of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__plane3d_f32__D
static int tolua_get_irr__core__plane3d_f32__D(lua_State* tolua_S)
{
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'D'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->D);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: D of class  irr::core::plane3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__plane3d_f32__D
static int tolua_set_irr__core__plane3d_f32__D(lua_State* tolua_S)
{
  irr::core::plane3d<f32>* self = (irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'D'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->D = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new00
static int tolua_IrrLua_irr_core_aabbox3d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new00_local
static int tolua_IrrLua_irr_core_aabbox3d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new01
static int tolua_IrrLua_irr_core_aabbox3d_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* min = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* max = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(*min,*max);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new01_local
static int tolua_IrrLua_irr_core_aabbox3d_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* min = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* max = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(*min,*max);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new02
static int tolua_IrrLua_irr_core_aabbox3d_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* init = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(*init);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new02_local
static int tolua_IrrLua_irr_core_aabbox3d_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::vector3d<f32>* init = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(*init);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new03
static int tolua_IrrLua_irr_core_aabbox3d_f32__new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float minx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float miny = ((  float)  tolua_tonumber(tolua_S,3,0));
   float minz = ((  float)  tolua_tonumber(tolua_S,4,0));
   float maxx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float maxy = ((  float)  tolua_tonumber(tolua_S,6,0));
   float maxz = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(minx,miny,minz,maxx,maxy,maxz);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__new03_local
static int tolua_IrrLua_irr_core_aabbox3d_f32__new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float minx = ((  float)  tolua_tonumber(tolua_S,2,0));
   float miny = ((  float)  tolua_tonumber(tolua_S,3,0));
   float minz = ((  float)  tolua_tonumber(tolua_S,4,0));
   float maxx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float maxy = ((  float)  tolua_tonumber(tolua_S,6,0));
   float maxz = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   irr::core::aabbox3d<f32>* tolua_ret = (irr::core::aabbox3d<f32>*)  new irr::core::aabbox3d<f32>(minx,miny,minz,maxx,maxy,maxz);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32___eq00
static int tolua_IrrLua_irr_core_aabbox3d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* other = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addInternalPoint of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__addInternalPoint00
static int tolua_IrrLua_irr_core_aabbox3d_f32__addInternalPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addInternalPoint'",NULL);
#endif
  {
   self->addInternalPoint(*p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addInternalPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addInternalBox of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__addInternalBox00
static int tolua_IrrLua_irr_core_aabbox3d_f32__addInternalBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* b = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addInternalBox'",NULL);
#endif
  {
   self->addInternalBox(*b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addInternalBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__reset00
static int tolua_IrrLua_irr_core_aabbox3d_f32__reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'",NULL);
#endif
  {
   self->reset(x,y,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__reset01
static int tolua_IrrLua_irr_core_aabbox3d_f32__reset01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* initValue = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'",NULL);
#endif
  {
   self->reset(*initValue);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__reset00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__reset02
static int tolua_IrrLua_irr_core_aabbox3d_f32__reset02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* initValue = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'",NULL);
#endif
  {
   self->reset(*initValue);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__reset01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointInside of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__isPointInside00
static int tolua_IrrLua_irr_core_aabbox3d_f32__isPointInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointInside'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointInside(*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointTotalInside of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__isPointTotalInside00
static int tolua_IrrLua_irr_core_aabbox3d_f32__isPointTotalInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointTotalInside'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointTotalInside(*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointTotalInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: intersectsWithBox of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithBox00
static int tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* other = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'intersectsWithBox'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->intersectsWithBox(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'intersectsWithBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: intersectsWithLine of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine00
static int tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'intersectsWithLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->intersectsWithLine(*line);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'intersectsWithLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: intersectsWithLine of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine01
static int tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linemiddle = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* linevect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
   float halflength = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'intersectsWithLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->intersectsWithLine(*linemiddle,*linevect,halflength);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: classifyPlaneRelation of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__classifyPlaneRelation00
static int tolua_IrrLua_irr_core_aabbox3d_f32__classifyPlaneRelation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* plane = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'classifyPlaneRelation'",NULL);
#endif
  {
   irr::core::EIntersectionRelation3D tolua_ret = (irr::core::EIntersectionRelation3D)  self->classifyPlaneRelation(*plane);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'classifyPlaneRelation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenter of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__getCenter00
static int tolua_IrrLua_irr_core_aabbox3d_f32__getCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenter'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getCenter();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExtent of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__getExtent00
static int tolua_IrrLua_irr_core_aabbox3d_f32__getExtent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExtent'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getExtent();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExtent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEdges of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__getEdges00
static int tolua_IrrLua_irr_core_aabbox3d_f32__getEdges00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* edges = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEdges'",NULL);
#endif
  {
   self->getEdges(edges);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEdges'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEmpty of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__isEmpty00
static int tolua_IrrLua_irr_core_aabbox3d_f32__isEmpty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEmpty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEmpty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEmpty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: repair of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__repair00
static int tolua_IrrLua_irr_core_aabbox3d_f32__repair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'repair'",NULL);
#endif
  {
   self->repair();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'repair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterpolated of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_aabbox3d_f32__getInterpolated00
static int tolua_IrrLua_irr_core_aabbox3d_f32__getInterpolated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* other = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterpolated'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getInterpolated(*other,d);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterpolated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinEdge of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__aabbox3d_f32__MinEdge
static int tolua_get_irr__core__aabbox3d_f32__MinEdge(lua_State* tolua_S)
{
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinEdge'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->MinEdge,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinEdge of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__aabbox3d_f32__MinEdge
static int tolua_set_irr__core__aabbox3d_f32__MinEdge(lua_State* tolua_S)
{
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinEdge'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinEdge = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxEdge of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__aabbox3d_f32__MaxEdge
static int tolua_get_irr__core__aabbox3d_f32__MaxEdge(lua_State* tolua_S)
{
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEdge'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->MaxEdge,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxEdge of class  irr::core::aabbox3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__aabbox3d_f32__MaxEdge
static int tolua_set_irr__core__aabbox3d_f32__MaxEdge(lua_State* tolua_S)
{
  irr::core::aabbox3d<f32>* self = (irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxEdge'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxEdge = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__new00
static int tolua_IrrLua_irr_core_triangle3d_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::triangle3d<f32>* tolua_ret = (irr::core::triangle3d<f32>*)  new irr::core::triangle3d<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::triangle3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__new00_local
static int tolua_IrrLua_irr_core_triangle3d_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::triangle3d<f32>* tolua_ret = (irr::core::triangle3d<f32>*)  new irr::core::triangle3d<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::triangle3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__delete00
static int tolua_IrrLua_irr_core_triangle3d_f32__delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTotalInsideBox of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__isTotalInsideBox00
static int tolua_IrrLua_irr_core_triangle3d_f32__isTotalInsideBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTotalInsideBox'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTotalInsideBox(*box);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTotalInsideBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32___eq00
static int tolua_IrrLua_irr_core_triangle3d_f32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* other = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closestPointOnTriangle of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__closestPointOnTriangle00
static int tolua_IrrLua_irr_core_triangle3d_f32__closestPointOnTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closestPointOnTriangle'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->closestPointOnTriangle(*p);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closestPointOnTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointInside of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__isPointInside00
static int tolua_IrrLua_irr_core_triangle3d_f32__isPointInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointInside'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointInside(*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointInsideFast of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__isPointInsideFast00
static int tolua_IrrLua_irr_core_triangle3d_f32__isPointInsideFast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointInsideFast'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointInsideFast(*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointInsideFast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOnSameSide of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__isOnSameSide00
static int tolua_IrrLua_irr_core_triangle3d_f32__isOnSameSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* p1 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* p2 = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* a = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::vector3d<f32>* b = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOnSameSide'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOnSameSide(*p1,*p2,*a,*b);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOnSameSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithLimitedLine of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLimitedLine00
static int tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLimitedLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* outIntersection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithLimitedLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithLimitedLine(*line,*outIntersection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithLimitedLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionWithLine of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLine00
static int tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linePoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* lineVect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outIntersection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionWithLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionWithLine(*linePoint,*lineVect,*outIntersection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionWithLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntersectionOfPlaneWithLine of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionOfPlaneWithLine00
static int tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionOfPlaneWithLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* linePoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* lineVect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outIntersection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntersectionOfPlaneWithLine'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIntersectionOfPlaneWithLine(*linePoint,*lineVect,*outIntersection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntersectionOfPlaneWithLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNormal of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__getNormal00
static int tolua_IrrLua_irr_core_triangle3d_f32__getNormal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNormal'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getNormal();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNormal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFrontFacing of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__isFrontFacing00
static int tolua_IrrLua_irr_core_triangle3d_f32__isFrontFacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* lookDirection = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFrontFacing'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFrontFacing(*lookDirection);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFrontFacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlane of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__getPlane00
static int tolua_IrrLua_irr_core_triangle3d_f32__getPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlane'",NULL);
#endif
  {
   irr::core::plane3d<f32> tolua_ret = (irr::core::plane3d<f32>)  self->getPlane();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::plane3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::plane3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::plane3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::plane3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_triangle3d_f32__set00
static int tolua_IrrLua_irr_core_triangle3d_f32__set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* a = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* b = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* c = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(*a,*b,*c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointA of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__triangle3d_f32__pointA
static int tolua_get_irr__core__triangle3d_f32__pointA(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointA'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->pointA,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointA of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__triangle3d_f32__pointA
static int tolua_set_irr__core__triangle3d_f32__pointA(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointA'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointA = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointB of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__triangle3d_f32__pointB
static int tolua_get_irr__core__triangle3d_f32__pointB(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointB'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->pointB,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointB of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__triangle3d_f32__pointB
static int tolua_set_irr__core__triangle3d_f32__pointB(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointB'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointB = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointC of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__triangle3d_f32__pointC
static int tolua_get_irr__core__triangle3d_f32__pointC(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointC'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->pointC,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointC of class  irr::core::triangle3d<f32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__triangle3d_f32__pointC
static int tolua_set_irr__core__triangle3d_f32__pointC(lua_State* tolua_S)
{
  irr::core::triangle3d<f32>* self = (irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointC'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointC = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex_new00
static int tolua_IrrLua_irr_video_S3DVertex_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
   float nx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,6,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,7,0));
  irr::video::SColor* c = ((irr::video::SColor*)  tolua_tousertype(tolua_S,8,0));
   float tu = ((  float)  tolua_tonumber(tolua_S,9,0));
   float tv = ((  float)  tolua_tonumber(tolua_S,10,0));
  {
   irr::video::S3DVertex* tolua_ret = (irr::video::S3DVertex*)  new irr::video::S3DVertex(x,y,z,nx,ny,nz,*c,tu,tv);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::S3DVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex_new00_local
static int tolua_IrrLua_irr_video_S3DVertex_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
   float nx = ((  float)  tolua_tonumber(tolua_S,5,0));
   float ny = ((  float)  tolua_tonumber(tolua_S,6,0));
   float nz = ((  float)  tolua_tonumber(tolua_S,7,0));
  irr::video::SColor* c = ((irr::video::SColor*)  tolua_tousertype(tolua_S,8,0));
   float tu = ((  float)  tolua_tonumber(tolua_S,9,0));
   float tv = ((  float)  tolua_tonumber(tolua_S,10,0));
  {
   irr::video::S3DVertex* tolua_ret = (irr::video::S3DVertex*)  new irr::video::S3DVertex(x,y,z,nx,ny,nz,*c,tu,tv);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::S3DVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex_Pos
static int tolua_get_irr__video__S3DVertex_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pos,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex_Pos
static int tolua_set_irr__video__S3DVertex_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pos = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Normal of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex_Normal
static int tolua_get_irr__video__S3DVertex_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Normal,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Normal of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex_Normal
static int tolua_set_irr__video__S3DVertex_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Normal = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Color of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex_Color
static int tolua_get_irr__video__S3DVertex_Color(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Color,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Color of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex_Color
static int tolua_set_irr__video__S3DVertex_Color(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TCoords of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex_TCoords
static int tolua_get_irr__video__S3DVertex_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->TCoords,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TCoords of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex_TCoords
static int tolua_set_irr__video__S3DVertex_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TCoords = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::video::S3DVertex */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex__eq00
static int tolua_IrrLua_irr_video_S3DVertex__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::S3DVertex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::S3DVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::S3DVertex* self = (irr::video::S3DVertex*)  tolua_tousertype(tolua_S,1,0);
  irr::video::S3DVertex* other = ((irr::video::S3DVertex*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex2TCoords_new00
static int tolua_IrrLua_irr_video_S3DVertex2TCoords_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::S3DVertex2TCoords* tolua_ret = (irr::video::S3DVertex2TCoords*)  new irr::video::S3DVertex2TCoords();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::S3DVertex2TCoords");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex2TCoords_new00_local
static int tolua_IrrLua_irr_video_S3DVertex2TCoords_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::S3DVertex2TCoords* tolua_ret = (irr::video::S3DVertex2TCoords*)  new irr::video::S3DVertex2TCoords();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::S3DVertex2TCoords");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex2TCoords_new01
static int tolua_IrrLua_irr_video_S3DVertex2TCoords_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  irr::video::SColor c = *((irr::video::SColor*)  tolua_tousertype(tolua_S,5,0));
   float tu = ((  float)  tolua_tonumber(tolua_S,6,0));
   float tv = ((  float)  tolua_tonumber(tolua_S,7,0));
   float tu2 = ((  float)  tolua_tonumber(tolua_S,8,0));
   float tv2 = ((  float)  tolua_tonumber(tolua_S,9,0));
  {
   irr::video::S3DVertex2TCoords* tolua_ret = (irr::video::S3DVertex2TCoords*)  new irr::video::S3DVertex2TCoords(x,y,z,c,tu,tv,tu2,tv2);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::S3DVertex2TCoords");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_S3DVertex2TCoords_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex2TCoords_new01_local
static int tolua_IrrLua_irr_video_S3DVertex2TCoords_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  irr::video::SColor c = *((irr::video::SColor*)  tolua_tousertype(tolua_S,5,0));
   float tu = ((  float)  tolua_tonumber(tolua_S,6,0));
   float tv = ((  float)  tolua_tonumber(tolua_S,7,0));
   float tu2 = ((  float)  tolua_tonumber(tolua_S,8,0));
   float tv2 = ((  float)  tolua_tonumber(tolua_S,9,0));
  {
   irr::video::S3DVertex2TCoords* tolua_ret = (irr::video::S3DVertex2TCoords*)  new irr::video::S3DVertex2TCoords(x,y,z,c,tu,tv,tu2,tv2);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::S3DVertex2TCoords");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_S3DVertex2TCoords_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertex2TCoords__eq00
static int tolua_IrrLua_irr_video_S3DVertex2TCoords__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::S3DVertex2TCoords",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
  irr::video::S3DVertex2TCoords* other = ((irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex2TCoords_Pos
static int tolua_get_irr__video__S3DVertex2TCoords_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pos,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex2TCoords_Pos
static int tolua_set_irr__video__S3DVertex2TCoords_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pos = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Normal of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex2TCoords_Normal
static int tolua_get_irr__video__S3DVertex2TCoords_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Normal,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Normal of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex2TCoords_Normal
static int tolua_set_irr__video__S3DVertex2TCoords_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Normal = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Color of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex2TCoords_Color
static int tolua_get_irr__video__S3DVertex2TCoords_Color(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Color,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Color of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex2TCoords_Color
static int tolua_set_irr__video__S3DVertex2TCoords_Color(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TCoords of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex2TCoords_TCoords
static int tolua_get_irr__video__S3DVertex2TCoords_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->TCoords,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TCoords of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex2TCoords_TCoords
static int tolua_set_irr__video__S3DVertex2TCoords_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TCoords = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TCoords2 of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertex2TCoords_TCoords2
static int tolua_get_irr__video__S3DVertex2TCoords_TCoords2(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords2'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->TCoords2,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TCoords2 of class  irr::video::S3DVertex2TCoords */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertex2TCoords_TCoords2
static int tolua_set_irr__video__S3DVertex2TCoords_TCoords2(lua_State* tolua_S)
{
  irr::video::S3DVertex2TCoords* self = (irr::video::S3DVertex2TCoords*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords2'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TCoords2 = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertexTangents_new00
static int tolua_IrrLua_irr_video_S3DVertexTangents_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::S3DVertexTangents* tolua_ret = (irr::video::S3DVertexTangents*)  new irr::video::S3DVertexTangents();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::S3DVertexTangents");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertexTangents_new00_local
static int tolua_IrrLua_irr_video_S3DVertexTangents_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::S3DVertexTangents* tolua_ret = (irr::video::S3DVertexTangents*)  new irr::video::S3DVertexTangents();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::S3DVertexTangents");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertexTangents_new01
static int tolua_IrrLua_irr_video_S3DVertexTangents_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::video::S3DVertexTangents* tolua_ret = (irr::video::S3DVertexTangents*)  new irr::video::S3DVertexTangents(x,y,z);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::S3DVertexTangents");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_S3DVertexTangents_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertexTangents_new01_local
static int tolua_IrrLua_irr_video_S3DVertexTangents_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::video::S3DVertexTangents* tolua_ret = (irr::video::S3DVertexTangents*)  new irr::video::S3DVertexTangents(x,y,z);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::S3DVertexTangents");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_S3DVertexTangents_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_S3DVertexTangents__eq00
static int tolua_IrrLua_irr_video_S3DVertexTangents__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::S3DVertexTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
  irr::video::S3DVertexTangents* other = ((irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Pos of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_Pos
static int tolua_get_irr__video__S3DVertexTangents_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Pos,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Pos of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_Pos
static int tolua_set_irr__video__S3DVertexTangents_Pos(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Pos'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Pos = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Normal of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_Normal
static int tolua_get_irr__video__S3DVertexTangents_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Normal,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Normal of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_Normal
static int tolua_set_irr__video__S3DVertexTangents_Normal(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Normal'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Normal = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Color of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_Color
static int tolua_get_irr__video__S3DVertexTangents_Color(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Color,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Color of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_Color
static int tolua_set_irr__video__S3DVertexTangents_Color(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Color'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TCoords of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_TCoords
static int tolua_get_irr__video__S3DVertexTangents_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->TCoords,"irr::core::vector2d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TCoords of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_TCoords
static int tolua_set_irr__video__S3DVertexTangents_TCoords(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TCoords'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector2d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TCoords = *((irr::core::vector2d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Tangent of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_Tangent
static int tolua_get_irr__video__S3DVertexTangents_Tangent(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Tangent'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Tangent,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Tangent of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_Tangent
static int tolua_set_irr__video__S3DVertexTangents_Tangent(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Tangent'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Tangent = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Binormal of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__S3DVertexTangents_Binormal
static int tolua_get_irr__video__S3DVertexTangents_Binormal(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Binormal'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Binormal,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Binormal of class  irr::video::S3DVertexTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__S3DVertexTangents_Binormal
static int tolua_set_irr__video__S3DVertexTangents_Binormal(lua_State* tolua_S)
{
  irr::video::S3DVertexTangents* self = (irr::video::S3DVertexTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Binormal'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Binormal = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getTextureFormatFromFlags */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getTextureFormatFromFlags00
static int tolua_IrrLua_irr_video_getTextureFormatFromFlags00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int flags = (( unsigned int)  tolua_tonumber(tolua_S,1,0));
  {
   irr::video::E_TEXTURE_CREATION_FLAG tolua_ret = (irr::video::E_TEXTURE_CREATION_FLAG)  irr::video::getTextureFormatFromFlags(flags);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureFormatFromFlags'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_delete00
static int tolua_IrrLua_irr_video_ITexture_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lock of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_lock00
static int tolua_IrrLua_irr_video_ITexture_lock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lock'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->lock();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unlock of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_unlock00
static int tolua_IrrLua_irr_video_ITexture_unlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unlock'",NULL);
#endif
  {
   self->unlock();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOriginalSize of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getOriginalSize00
static int tolua_IrrLua_irr_video_ITexture_getOriginalSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOriginalSize'",NULL);
#endif
  {
   irr::core::dimension2d<s32>& tolua_ret = (irr::core::dimension2d<s32>&)  self->getOriginalSize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOriginalSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getSize00
static int tolua_IrrLua_irr_video_ITexture_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   irr::core::dimension2d<s32>& tolua_ret = (irr::core::dimension2d<s32>&)  self->getSize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDriverType of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getDriverType00
static int tolua_IrrLua_irr_video_ITexture_getDriverType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDriverType'",NULL);
#endif
  {
   irr::video::E_DRIVER_TYPE tolua_ret = (irr::video::E_DRIVER_TYPE)  self->getDriverType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDriverType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColorFormat of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getColorFormat00
static int tolua_IrrLua_irr_video_ITexture_getColorFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColorFormat'",NULL);
#endif
  {
   irr::video::ECOLOR_FORMAT tolua_ret = (irr::video::ECOLOR_FORMAT)  self->getColorFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColorFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPitch of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getPitch00
static int tolua_IrrLua_irr_video_ITexture_getPitch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPitch'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPitch();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPitch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: regenerateMipMapLevels of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels00
static int tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'regenerateMipMapLevels'",NULL);
#endif
  {
   self->regenerateMipMapLevels();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'regenerateMipMapLevels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMipMaps of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_hasMipMaps00
static int tolua_IrrLua_irr_video_ITexture_hasMipMaps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMipMaps'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMipMaps();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMipMaps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: regenerateMipMapLevels of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels01
static int tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'regenerateMipMapLevels'",NULL);
#endif
  {
   self->regenerateMipMapLevels();
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getName00
static int tolua_IrrLua_irr_video_ITexture_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   irr::core::stringc& tolua_ret = (irr::core::stringc&)  self->getName();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::stringc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_grab00
static int tolua_IrrLua_irr_video_ITexture_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_drop00
static int tolua_IrrLua_irr_video_ITexture_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::ITexture */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_ITexture_getDebugName00
static int tolua_IrrLua_irr_video_ITexture_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::ITexture* self = (irr::video::ITexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new00
static int tolua_IrrLua_irr_core_rect_s32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new00_local
static int tolua_IrrLua_irr_core_rect_s32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new01
static int tolua_IrrLua_irr_core_rect_s32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int x2 = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int y2 = (( signed int)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(x,y,x2,y2);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new01_local
static int tolua_IrrLua_irr_core_rect_s32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int x2 = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int y2 = (( signed int)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(x,y,x2,y2);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new02
static int tolua_IrrLua_irr_core_rect_s32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* upperLeft = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32>* lowerRight = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*upperLeft,*lowerRight);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new02_local
static int tolua_IrrLua_irr_core_rect_s32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* upperLeft = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32>* lowerRight = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*upperLeft,*lowerRight);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new03
static int tolua_IrrLua_irr_core_rect_s32__new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::rect<s32>* other = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new03_local
static int tolua_IrrLua_irr_core_rect_s32__new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::rect<s32>* other = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new04
static int tolua_IrrLua_irr_core_rect_s32__new04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* pos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::dimension2d<s32>* size = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*pos,*size);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__new04_local
static int tolua_IrrLua_irr_core_rect_s32__new04_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::position2d<s32>* pos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::dimension2d<s32>* size = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  {
   irr::core::rect<s32>* tolua_ret = (irr::core::rect<s32>*)  new irr::core::rect<s32>(*pos,*size);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_rect_s32__new03_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32___add00
static int tolua_IrrLua_irr_core_rect_s32___add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* pos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->operator+(*pos);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32___eq00
static int tolua_IrrLua_irr_core_rect_s32___eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* other = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointInside of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__isPointInside00
static int tolua_IrrLua_irr_core_rect_s32__isPointInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* pos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointInside'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointInside(*pos);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRectCollided of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__isRectCollided00
static int tolua_IrrLua_irr_core_rect_s32__isRectCollided00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* other = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRectCollided'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRectCollided(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRectCollided'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clipAgainst of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__clipAgainst00
static int tolua_IrrLua_irr_core_rect_s32__clipAgainst00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* other = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clipAgainst'",NULL);
#endif
  {
   self->clipAgainst(*other);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clipAgainst'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWidth of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__getWidth00
static int tolua_IrrLua_irr_core_rect_s32__getWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWidth'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHeight of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__getHeight00
static int tolua_IrrLua_irr_core_rect_s32__getHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHeight'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: repair of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__repair00
static int tolua_IrrLua_irr_core_rect_s32__repair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'repair'",NULL);
#endif
  {
   self->repair();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'repair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isValid of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__isValid00
static int tolua_IrrLua_irr_core_rect_s32__isValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isValid'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isValid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenter of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__getCenter00
static int tolua_IrrLua_irr_core_rect_s32__getCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenter'",NULL);
#endif
  {
   irr::core::position2d<s32> tolua_ret = (irr::core::position2d<s32>)  self->getCenter();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_rect_s32__getSize00
static int tolua_IrrLua_irr_core_rect_s32__getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   irr::core::dimension2d<s32> tolua_ret = (irr::core::dimension2d<s32>)  self->getSize();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::dimension2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::dimension2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UpperLeftCorner of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__rect_s32__UpperLeftCorner
static int tolua_get_irr__core__rect_s32__UpperLeftCorner(lua_State* tolua_S)
{
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpperLeftCorner'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->UpperLeftCorner,"irr::core::position2d<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: UpperLeftCorner of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__rect_s32__UpperLeftCorner
static int tolua_set_irr__core__rect_s32__UpperLeftCorner(lua_State* tolua_S)
{
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'UpperLeftCorner'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->UpperLeftCorner = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LowerRightCorner of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__rect_s32__LowerRightCorner
static int tolua_get_irr__core__rect_s32__LowerRightCorner(lua_State* tolua_S)
{
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LowerRightCorner'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->LowerRightCorner,"irr::core::position2d<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LowerRightCorner of class  irr::core::rect<s32> */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__rect_s32__LowerRightCorner
static int tolua_set_irr__core__rect_s32__LowerRightCorner(lua_State* tolua_S)
{
  irr::core::rect<s32>* self = (irr::core::rect<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LowerRightCorner'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LowerRightCorner = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_new00
static int tolua_IrrLua_irr_core_matrix4_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  new irr::core::matrix4();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_new00_local
static int tolua_IrrLua_irr_core_matrix4_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  new irr::core::matrix4();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_delete00
static int tolua_IrrLua_irr_core_matrix4_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4__eq00
static int tolua_IrrLua_irr_core_matrix4__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* other = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4__mul00
static int tolua_IrrLua_irr_core_matrix4__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* other = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->operator*(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeIdentity of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_makeIdentity00
static int tolua_IrrLua_irr_core_matrix4_makeIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeIdentity'",NULL);
#endif
  {
   self->makeIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makeIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isIdentity of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_isIdentity00
static int tolua_IrrLua_irr_core_matrix4_isIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isIdentity'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTranslation of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setTranslation00
static int tolua_IrrLua_irr_core_matrix4_setTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* translation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTranslation'",NULL);
#endif
  {
   self->setTranslation(*translation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTranslation of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_getTranslation00
static int tolua_IrrLua_irr_core_matrix4_getTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTranslation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getTranslation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInverseTranslation of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setInverseTranslation00
static int tolua_IrrLua_irr_core_matrix4_setInverseTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* translation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInverseTranslation'",NULL);
#endif
  {
   self->setInverseTranslation(*translation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInverseTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotationRadians of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setRotationRadians00
static int tolua_IrrLua_irr_core_matrix4_setRotationRadians00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotationRadians'",NULL);
#endif
  {
   self->setRotationRadians(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotationRadians'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotationDegrees of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setRotationDegrees00
static int tolua_IrrLua_irr_core_matrix4_setRotationDegrees00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotationDegrees'",NULL);
#endif
  {
   self->setRotationDegrees(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotationDegrees'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotationDegrees of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_getRotationDegrees00
static int tolua_IrrLua_irr_core_matrix4_getRotationDegrees00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotationDegrees'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotationDegrees();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotationDegrees'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInverseRotationRadians of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setInverseRotationRadians00
static int tolua_IrrLua_irr_core_matrix4_setInverseRotationRadians00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInverseRotationRadians'",NULL);
#endif
  {
   self->setInverseRotationRadians(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInverseRotationRadians'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInverseRotationDegrees of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setInverseRotationDegrees00
static int tolua_IrrLua_irr_core_matrix4_setInverseRotationDegrees00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInverseRotationDegrees'",NULL);
#endif
  {
   self->setInverseRotationDegrees(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInverseRotationDegrees'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_setScale00
static int tolua_IrrLua_irr_core_matrix4_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_getScale00
static int tolua_IrrLua_irr_core_matrix4_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inverseTranslateVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_inverseTranslateVect00
static int tolua_IrrLua_irr_core_matrix4_inverseTranslateVect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* vect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inverseTranslateVect'",NULL);
#endif
  {
   self->inverseTranslateVect(*vect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inverseTranslateVect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: inverseRotateVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_inverseRotateVect00
static int tolua_IrrLua_irr_core_matrix4_inverseRotateVect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* vect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'inverseRotateVect'",NULL);
#endif
  {
   self->inverseRotateVect(*vect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'inverseRotateVect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rotateVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_rotateVect00
static int tolua_IrrLua_irr_core_matrix4_rotateVect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* vect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rotateVect'",NULL);
#endif
  {
   self->rotateVect(*vect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rotateVect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformVect00
static int tolua_IrrLua_irr_core_matrix4_transformVect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* vect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformVect'",NULL);
#endif
  {
   self->transformVect(*vect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformVect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformVect01
static int tolua_IrrLua_irr_core_matrix4_transformVect01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* in = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* out = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformVect'",NULL);
#endif
  {
   self->transformVect(*in,*out);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_matrix4_transformVect00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: translateVect of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_translateVect00
static int tolua_IrrLua_irr_core_matrix4_translateVect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* vect = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'translateVect'",NULL);
#endif
  {
   self->translateVect(*vect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'translateVect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformPlane of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformPlane00
static int tolua_IrrLua_irr_core_matrix4_transformPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* plane = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformPlane'",NULL);
#endif
  {
   self->transformPlane(*plane);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformPlane of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformPlane01
static int tolua_IrrLua_irr_core_matrix4_transformPlane01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::plane3d<f32>* in = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::plane3d<f32>* out = ((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformPlane'",NULL);
#endif
  {
   self->transformPlane(*in,*out);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_matrix4_transformPlane00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformBox of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformBox00
static int tolua_IrrLua_irr_core_matrix4_transformBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformBox'",NULL);
#endif
  {
   self->transformBox(*box);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformBoxEx of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_transformBoxEx00
static int tolua_IrrLua_irr_core_matrix4_transformBoxEx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformBoxEx'",NULL);
#endif
  {
   self->transformBoxEx(*box);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformBoxEx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: multiplyWith1x4Matrix of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_multiplyWith1x4Matrix00
static int tolua_IrrLua_irr_core_matrix4_multiplyWith1x4Matrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float matrix = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'multiplyWith1x4Matrix'",NULL);
#endif
  {
   self->multiplyWith1x4Matrix(&matrix);
   tolua_pushnumber(tolua_S,(lua_Number)matrix);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'multiplyWith1x4Matrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeInverse of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_makeInverse00
static int tolua_IrrLua_irr_core_matrix4_makeInverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeInverse'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->makeInverse();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makeInverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInverse of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_getInverse00
static int tolua_IrrLua_irr_core_matrix4_getInverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* out = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInverse'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getInverse(*out);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixPerspectiveFovRH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovRH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovRH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float fieldOfViewRadians = ((  float)  tolua_tonumber(tolua_S,2,0));
   float aspectRatio = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixPerspectiveFovRH'",NULL);
#endif
  {
   self->buildProjectionMatrixPerspectiveFovRH(fieldOfViewRadians,aspectRatio,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixPerspectiveFovRH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixPerspectiveFovLH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovLH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovLH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float fieldOfViewRadians = ((  float)  tolua_tonumber(tolua_S,2,0));
   float aspectRatio = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixPerspectiveFovLH'",NULL);
#endif
  {
   self->buildProjectionMatrixPerspectiveFovLH(fieldOfViewRadians,aspectRatio,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixPerspectiveFovLH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixPerspectiveRH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveRH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveRH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float widthOfViewVolume = ((  float)  tolua_tonumber(tolua_S,2,0));
   float heightOfViewVolume = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixPerspectiveRH'",NULL);
#endif
  {
   self->buildProjectionMatrixPerspectiveRH(widthOfViewVolume,heightOfViewVolume,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixPerspectiveRH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixPerspectiveLH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveLH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveLH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float widthOfViewVolume = ((  float)  tolua_tonumber(tolua_S,2,0));
   float heightOfViewVolume = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixPerspectiveLH'",NULL);
#endif
  {
   self->buildProjectionMatrixPerspectiveLH(widthOfViewVolume,heightOfViewVolume,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixPerspectiveLH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixOrthoLH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoLH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoLH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float widthOfViewVolume = ((  float)  tolua_tonumber(tolua_S,2,0));
   float heightOfViewVolume = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixOrthoLH'",NULL);
#endif
  {
   self->buildProjectionMatrixOrthoLH(widthOfViewVolume,heightOfViewVolume,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixOrthoLH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildProjectionMatrixOrthoRH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoRH00
static int tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoRH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
   float widthOfViewVolume = ((  float)  tolua_tonumber(tolua_S,2,0));
   float heightOfViewVolume = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zNear = ((  float)  tolua_tonumber(tolua_S,4,0));
   float zFar = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildProjectionMatrixOrthoRH'",NULL);
#endif
  {
   self->buildProjectionMatrixOrthoRH(widthOfViewVolume,heightOfViewVolume,zNear,zFar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildProjectionMatrixOrthoRH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildCameraLookAtMatrixLH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixLH00
static int tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixLH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* target = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* upVector = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildCameraLookAtMatrixLH'",NULL);
#endif
  {
   self->buildCameraLookAtMatrixLH(*position,*target,*upVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildCameraLookAtMatrixLH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildCameraLookAtMatrixRH of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixRH00
static int tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixRH00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* target = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* upVector = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildCameraLookAtMatrixRH'",NULL);
#endif
  {
   self->buildCameraLookAtMatrixRH(*position,*target,*upVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildCameraLookAtMatrixRH'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildShadowMatrix of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildShadowMatrix00
static int tolua_IrrLua_irr_core_matrix4_buildShadowMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::plane3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> light = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::plane3d<f32> plane = *((irr::core::plane3d<f32>*)  tolua_tousertype(tolua_S,3,0));
   float point = ((  float)  tolua_tonumber(tolua_S,4,1));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildShadowMatrix'",NULL);
#endif
  {
   self->buildShadowMatrix(light,plane,point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildShadowMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: buildNDCToDCMatrix of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_buildNDCToDCMatrix00
static int tolua_IrrLua_irr_core_matrix4_buildNDCToDCMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* area = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
   float zScale = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'buildNDCToDCMatrix'",NULL);
#endif
  {
   self->buildNDCToDCMatrix(*area,zScale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'buildNDCToDCMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: interpolate of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_interpolate00
static int tolua_IrrLua_irr_core_matrix4_interpolate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* b = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'interpolate'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->interpolate(*b,time);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'interpolate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransposed of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_matrix4_getTransposed00
static int tolua_IrrLua_irr_core_matrix4_getTransposed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::matrix4* self = (irr::core::matrix4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransposed'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getTransposed();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransposed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: M of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_get_IrrLua_irr_core_matrix4_M
static int tolua_get_IrrLua_irr_core_matrix4_M(lua_State* tolua_S)
{
 int tolua_index;
  irr::core::matrix4* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (irr::core::matrix4*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0)-1;
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=16)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->M[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: M of class  irr::core::matrix4 */
#ifndef TOLUA_DISABLE_tolua_set_IrrLua_irr_core_matrix4_M
static int tolua_set_IrrLua_irr_core_matrix4_M(lua_State* tolua_S)
{
 int tolua_index;
  irr::core::matrix4* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (irr::core::matrix4*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0)-1;
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=16)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->M[tolua_index] = ((  float)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new00
static int tolua_IrrLua_irr_core_quaternion_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new00_local
static int tolua_IrrLua_irr_core_quaternion_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new01
static int tolua_IrrLua_irr_core_quaternion_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float X = ((  float)  tolua_tonumber(tolua_S,2,0));
   float Y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float Z = ((  float)  tolua_tonumber(tolua_S,4,0));
   float W = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(X,Y,Z,W);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new01_local
static int tolua_IrrLua_irr_core_quaternion_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float X = ((  float)  tolua_tonumber(tolua_S,2,0));
   float Y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float Z = ((  float)  tolua_tonumber(tolua_S,4,0));
   float W = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(X,Y,Z,W);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new02
static int tolua_IrrLua_irr_core_quaternion_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(x,y,z);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new02_local
static int tolua_IrrLua_irr_core_quaternion_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(x,y,z);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new03
static int tolua_IrrLua_irr_core_quaternion_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(*mat);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_new03_local
static int tolua_IrrLua_irr_core_quaternion_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::quaternion* tolua_ret = (irr::core::quaternion*)  new irr::core::quaternion(*mat);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion__eq00
static int tolua_IrrLua_irr_core_quaternion__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::quaternion* other = ((irr::core::quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion__add00
static int tolua_IrrLua_irr_core_quaternion__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::quaternion* other = ((irr::core::quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::quaternion tolua_ret = (irr::core::quaternion)  self->operator+(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::quaternion(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::quaternion));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion__mul00
static int tolua_IrrLua_irr_core_quaternion__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::quaternion* other = ((irr::core::quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::quaternion tolua_ret = (irr::core::quaternion)  self->operator*(*other);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::quaternion(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::quaternion));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion__mul01
static int tolua_IrrLua_irr_core_quaternion__mul01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
   float s = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'",NULL);
#endif
  {
   irr::core::quaternion tolua_ret = (irr::core::quaternion)  self->operator*(s);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::quaternion(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::quaternion));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion__mul00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDotProduct of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_getDotProduct00
static int tolua_IrrLua_irr_core_quaternion_getDotProduct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::quaternion* other = ((irr::core::quaternion*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDotProduct'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getDotProduct(*other);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDotProduct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_set00
static int tolua_IrrLua_irr_core_quaternion_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
   float w = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(x,y,z,w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_set01
static int tolua_IrrLua_irr_core_quaternion_set01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
   float z = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(x,y,z);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_quaternion_set00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: normalize of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_normalize00
static int tolua_IrrLua_irr_core_quaternion_normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'normalize'",NULL);
#endif
  {
   irr::core::quaternion& tolua_ret = (irr::core::quaternion&)  self->normalize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::quaternion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMatrix of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_getMatrix00
static int tolua_IrrLua_irr_core_quaternion_getMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMatrix'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getMatrix();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeInverse of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_makeInverse00
static int tolua_IrrLua_irr_core_quaternion_makeInverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeInverse'",NULL);
#endif
  {
   self->makeInverse();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makeInverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: slerp of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_slerp00
static int tolua_IrrLua_irr_core_quaternion_slerp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::quaternion q1 = *((irr::core::quaternion*)  tolua_tousertype(tolua_S,2,0));
  irr::core::quaternion q2 = *((irr::core::quaternion*)  tolua_tousertype(tolua_S,3,0));
   float time = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'slerp'",NULL);
#endif
  {
   irr::core::quaternion tolua_ret = (irr::core::quaternion)  self->slerp(q1,q2,time);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::quaternion(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::quaternion));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::quaternion");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'slerp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fromAngleAxis of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_fromAngleAxis00
static int tolua_IrrLua_irr_core_quaternion_fromAngleAxis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
   float angle = ((  float)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32>* axis = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fromAngleAxis'",NULL);
#endif
  {
   self->fromAngleAxis(angle,*axis);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fromAngleAxis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toEuler of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_quaternion_toEuler00
static int tolua_IrrLua_irr_core_quaternion_toEuler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::quaternion",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* euler = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toEuler'",NULL);
#endif
  {
   self->toEuler(*euler);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toEuler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__quaternion_X
static int tolua_get_irr__core__quaternion_X(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__quaternion_X
static int tolua_set_irr__core__quaternion_X(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__quaternion_Y
static int tolua_get_irr__core__quaternion_Y(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__quaternion_Y
static int tolua_set_irr__core__quaternion_Y(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Z of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__quaternion_Z
static int tolua_get_irr__core__quaternion_Z(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Z of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__quaternion_Z
static int tolua_set_irr__core__quaternion_Z(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Z = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: W of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_get_irr__core__quaternion_W
static int tolua_get_irr__core__quaternion_W(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'W'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->W);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: W of class  irr::core::quaternion */
#ifndef TOLUA_DISABLE_tolua_set_irr__core__quaternion_W
static int tolua_set_irr__core__quaternion_W(lua_State* tolua_S)
{
  irr::core::quaternion* self = (irr::core::quaternion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'W'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->W = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_f32__Iterator_new00
static int tolua_IrrLua_irr_core_list_f32__Iterator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<f32>::Iterator* tolua_ret = (irr::core::list<f32>::Iterator*)  new irr::core::list<f32>::Iterator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::list<f32>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_f32__Iterator_new00_local
static int tolua_IrrLua_irr_core_list_f32__Iterator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<f32>::Iterator* tolua_ret = (irr::core::list<f32>::Iterator*)  new irr::core::list<f32>::Iterator();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::list<f32>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_f32__Iterator__add00
static int tolua_IrrLua_irr_core_list_f32__Iterator__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<f32>::Iterator* self = (irr::core::list<f32>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::list<f32>::Iterator tolua_ret = (irr::core::list<f32>::Iterator)  self->operator+(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<f32>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<f32>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<f32>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<f32>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_f32__Iterator__sub00
static int tolua_IrrLua_irr_core_list_f32__Iterator__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<f32>::Iterator* self = (irr::core::list<f32>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::list<f32>::Iterator tolua_ret = (irr::core::list<f32>::Iterator)  self->operator-(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<f32>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<f32>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<f32>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<f32>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_f32__Iterator__eq00
static int tolua_IrrLua_irr_core_list_f32__Iterator__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<f32>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<f32>::Iterator* self = (irr::core::list<f32>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<f32>::Iterator* other = ((irr::core::list<f32>::Iterator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<irr::scene::ISceneNode*>::Iterator* tolua_ret = (irr::core::list<irr::scene::ISceneNode*>::Iterator*)  new irr::core::list<irr::scene::ISceneNode*>::Iterator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00_local
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<irr::scene::ISceneNode*>::Iterator* tolua_ret = (irr::core::list<irr::scene::ISceneNode*>::Iterator*)  new irr::core::list<irr::scene::ISceneNode*>::Iterator();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__add00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNode*>::Iterator* self = (irr::core::list<irr::scene::ISceneNode*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNode*>::Iterator tolua_ret = (irr::core::list<irr::scene::ISceneNode*>::Iterator)  self->operator+(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNode*>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNode*>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__sub00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNode*>::Iterator* self = (irr::core::list<irr::scene::ISceneNode*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNode*>::Iterator tolua_ret = (irr::core::list<irr::scene::ISceneNode*>::Iterator)  self->operator-(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNode*>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNode*>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__eq00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNode*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNode*>::Iterator* self = (irr::core::list<irr::scene::ISceneNode*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNode*>::Iterator* other = ((irr::core::list<irr::scene::ISceneNode*>::Iterator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  new irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00_local
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  new irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__add00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* self = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator)  self->operator+(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__sub00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* self = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  signed int num = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator)  self->operator-(num);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Iterator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__eq00
static int tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* self = (irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator* other = ((irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::RGB16 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_RGB1600
static int tolua_IrrLua_irr_video_RGB1600(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int r = (( signed int)  tolua_tonumber(tolua_S,1,0));
  signed int g = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int b = (( signed int)  tolua_tonumber(tolua_S,3,0));
  {
   signed short tolua_ret = ( signed short)  irr::video::RGB16(r,g,b);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RGB16'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::RGBA16 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_RGBA1600
static int tolua_IrrLua_irr_video_RGBA1600(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int r = (( signed int)  tolua_tonumber(tolua_S,1,0));
  signed int g = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int b = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int a = (( signed int)  tolua_tonumber(tolua_S,4,0));
  {
   signed short tolua_ret = ( signed short)  irr::video::RGBA16(r,g,b,a);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RGBA16'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::X8R8G8B8toA1R5G5B5 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_X8R8G8B8toA1R5G5B500
static int tolua_IrrLua_irr_video_X8R8G8B8toA1R5G5B500(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int color = (( signed int)  tolua_tonumber(tolua_S,1,0));
  {
   signed short tolua_ret = ( signed short)  irr::video::X8R8G8B8toA1R5G5B5(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X8R8G8B8toA1R5G5B5'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getAlpha */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getAlpha00
static int tolua_IrrLua_irr_video_getAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::getAlpha(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getRed */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getRed00
static int tolua_IrrLua_irr_video_getRed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::getRed(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getGreen */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getGreen00
static int tolua_IrrLua_irr_video_getGreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::getGreen(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getBlue */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getBlue00
static int tolua_IrrLua_irr_video_getBlue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::getBlue(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::getLuminance */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_getLuminance00
static int tolua_IrrLua_irr_video_getLuminance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::getLuminance(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuminance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::A1R5G5B5toA8R8G8B8 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_A1R5G5B5toA8R8G8B800
static int tolua_IrrLua_irr_video_A1R5G5B5toA8R8G8B800(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::A1R5G5B5toA8R8G8B8(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'A1R5G5B5toA8R8G8B8'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::R5G6B5toA8R8G8B8 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_R5G6B5toA8R8G8B800
static int tolua_IrrLua_irr_video_R5G6B5toA8R8G8B800(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed int tolua_ret = ( signed int)  irr::video::R5G6B5toA8R8G8B8(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'R5G6B5toA8R8G8B8'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::R5G6B5toA1R5G5B5 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_R5G6B5toA1R5G5B500
static int tolua_IrrLua_irr_video_R5G6B5toA1R5G5B500(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed short tolua_ret = ( signed short)  irr::video::R5G6B5toA1R5G5B5(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'R5G6B5toA1R5G5B5'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::A1R5G5B5toR5G6B5 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_A1R5G5B5toR5G6B500
static int tolua_IrrLua_irr_video_A1R5G5B5toR5G6B500(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed short color = (( signed short)  tolua_tonumber(tolua_S,1,0));
  {
   signed short tolua_ret = ( signed short)  irr::video::A1R5G5B5toR5G6B5(color);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'A1R5G5B5toR5G6B5'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_new00
static int tolua_IrrLua_irr_video_SColor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int a = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int r = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int g = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int b = (( signed int)  tolua_tonumber(tolua_S,5,0));
  {
   irr::video::SColor* tolua_ret = (irr::video::SColor*)  new irr::video::SColor(a,r,g,b);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::SColor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_new00_local
static int tolua_IrrLua_irr_video_SColor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int a = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int r = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int g = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int b = (( signed int)  tolua_tonumber(tolua_S,5,0));
  {
   irr::video::SColor* tolua_ret = (irr::video::SColor*)  new irr::video::SColor(a,r,g,b);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::SColor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAlpha of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_getAlpha00
static int tolua_IrrLua_irr_video_SColor_getAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAlpha'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRed of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_getRed00
static int tolua_IrrLua_irr_video_SColor_getRed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRed'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getRed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGreen of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_getGreen00
static int tolua_IrrLua_irr_video_SColor_getGreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGreen'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getGreen();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlue of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_getBlue00
static int tolua_IrrLua_irr_video_SColor_getBlue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlue'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getBlue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAlpha of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_setAlpha00
static int tolua_IrrLua_irr_video_SColor_setAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  signed int a = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAlpha'",NULL);
#endif
  {
   self->setAlpha(a);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRed of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_setRed00
static int tolua_IrrLua_irr_video_SColor_setRed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  signed int r = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRed'",NULL);
#endif
  {
   self->setRed(r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGreen of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_setGreen00
static int tolua_IrrLua_irr_video_SColor_setGreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  signed int g = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGreen'",NULL);
#endif
  {
   self->setGreen(g);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlue of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_setBlue00
static int tolua_IrrLua_irr_video_SColor_setBlue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  signed int b = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlue'",NULL);
#endif
  {
   self->setBlue(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toA1R5G5B5 of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_toA1R5G5B500
static int tolua_IrrLua_irr_video_SColor_toA1R5G5B500(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toA1R5G5B5'",NULL);
#endif
  {
   signed short tolua_ret = ( signed short)  self->toA1R5G5B5();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toA1R5G5B5'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toOpenGLColor of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_toOpenGLColor00
static int tolua_IrrLua_irr_video_SColor_toOpenGLColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toOpenGLColor'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->toOpenGLColor();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toOpenGLColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_set00
static int tolua_IrrLua_irr_video_SColor_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  signed int a = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int r = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int g = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int b = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(a,r,g,b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor__eq00
static int tolua_IrrLua_irr_video_SColor__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor* other = ((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*other);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterpolated of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColor_getInterpolated00
static int tolua_IrrLua_irr_video_SColor_getInterpolated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor other = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterpolated'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getInterpolated(other,d);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterpolated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: color of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SColor_color
static int tolua_get_irr__video__SColor_color(lua_State* tolua_S)
{
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->color);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: color of class  irr::video::SColor */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SColor_color
static int tolua_set_irr__video__SColor_color(lua_State* tolua_S)
{
  irr::video::SColor* self = (irr::video::SColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->color = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_new00
static int tolua_IrrLua_irr_video_SColorf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float r = ((  float)  tolua_tonumber(tolua_S,2,0));
   float g = ((  float)  tolua_tonumber(tolua_S,3,0));
   float b = ((  float)  tolua_tonumber(tolua_S,4,0));
   float a = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::video::SColorf* tolua_ret = (irr::video::SColorf*)  new irr::video::SColorf(r,g,b,a);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::SColorf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_new00_local
static int tolua_IrrLua_irr_video_SColorf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float r = ((  float)  tolua_tonumber(tolua_S,2,0));
   float g = ((  float)  tolua_tonumber(tolua_S,3,0));
   float b = ((  float)  tolua_tonumber(tolua_S,4,0));
   float a = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   irr::video::SColorf* tolua_ret = (irr::video::SColorf*)  new irr::video::SColorf(r,g,b,a);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::SColorf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toSColor of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_toSColor00
static int tolua_IrrLua_irr_video_SColorf_toSColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toSColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->toSColor();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toSColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SColorf_r
static int tolua_get_irr__video__SColorf_r(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SColorf_r
static int tolua_set_irr__video__SColorf_r(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SColorf_g
static int tolua_get_irr__video__SColorf_g(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SColorf_g
static int tolua_set_irr__video__SColorf_g(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SColorf_b
static int tolua_get_irr__video__SColorf_b(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SColorf_b
static int tolua_set_irr__video__SColorf_b(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SColorf_a
static int tolua_get_irr__video__SColorf_a(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SColorf_a
static int tolua_set_irr__video__SColorf_a(lua_State* tolua_S)
{
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: set of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_set00
static int tolua_IrrLua_irr_video_SColorf_set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
   float aa = ((  float)  tolua_tonumber(tolua_S,2,0));
   float rr = ((  float)  tolua_tonumber(tolua_S,3,0));
   float gg = ((  float)  tolua_tonumber(tolua_S,4,0));
   float bb = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set'",NULL);
#endif
  {
   self->set(aa,rr,gg,bb);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterpolated of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_getInterpolated00
static int tolua_IrrLua_irr_video_SColorf_getInterpolated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColorf other = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterpolated'",NULL);
#endif
  {
   irr::video::SColorf tolua_ret = (irr::video::SColorf)  self->getInterpolated(other,d);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColorf(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColorf));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColorf");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterpolated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColorComponentValue of class  irr::video::SColorf */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SColorf_setColorComponentValue00
static int tolua_IrrLua_irr_video_SColorf_setColorComponentValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SColorf* self = (irr::video::SColorf*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
   float value = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColorComponentValue'",NULL);
#endif
  {
   self->setColorComponentValue(index,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColorComponentValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SLight_new00
static int tolua_IrrLua_irr_video_SLight_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SLight",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::SLight* tolua_ret = (irr::video::SLight*)  new irr::video::SLight();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::SLight");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SLight_new00_local
static int tolua_IrrLua_irr_video_SLight_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SLight",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::SLight* tolua_ret = (irr::video::SLight*)  new irr::video::SLight();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::SLight");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmbientColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_AmbientColor
static int tolua_get_irr__video__SLight_AmbientColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmbientColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->AmbientColor,"irr::video::SColorf");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmbientColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_AmbientColor
static int tolua_set_irr__video__SLight_AmbientColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmbientColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColorf",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmbientColor = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiffuseColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_DiffuseColor
static int tolua_get_irr__video__SLight_DiffuseColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiffuseColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->DiffuseColor,"irr::video::SColorf");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiffuseColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_DiffuseColor
static int tolua_set_irr__video__SLight_DiffuseColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiffuseColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColorf",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiffuseColor = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpecularColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_SpecularColor
static int tolua_get_irr__video__SLight_SpecularColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpecularColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->SpecularColor,"irr::video::SColorf");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpecularColor of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_SpecularColor
static int tolua_set_irr__video__SLight_SpecularColor(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpecularColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColorf",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpecularColor = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Position of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_Position
static int tolua_get_irr__video__SLight_Position(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Position'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Position,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Position of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_Position
static int tolua_set_irr__video__SLight_Position(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Position'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Position = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Radius of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_Radius
static int tolua_get_irr__video__SLight_Radius(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Radius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Radius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Radius of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_Radius
static int tolua_set_irr__video__SLight_Radius(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Radius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Radius = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: CastShadows of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_CastShadows
static int tolua_get_irr__video__SLight_CastShadows(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CastShadows'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->CastShadows);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: CastShadows of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_CastShadows
static int tolua_set_irr__video__SLight_CastShadows(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'CastShadows'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->CastShadows = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SLight_Type
static int tolua_get_irr__video__SLight_Type(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  irr::video::SLight */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SLight_Type
static int tolua_set_irr__video__SLight_Type(lua_State* tolua_S)
{
  irr::video::SLight* self = (irr::video::SLight*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((irr::video::E_LIGHT_TYPE) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SMaterial_new00
static int tolua_IrrLua_irr_video_SMaterial_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::SMaterial* tolua_ret = (irr::video::SMaterial*)  new irr::video::SMaterial();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SMaterial_new00_local
static int tolua_IrrLua_irr_video_SMaterial_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::SMaterial* tolua_ret = (irr::video::SMaterial*)  new irr::video::SMaterial();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_SMaterial_delete00
static int tolua_IrrLua_irr_video_SMaterial_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaterialType of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_MaterialType
static int tolua_get_irr__video__SMaterial_MaterialType(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaterialType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaterialType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaterialType of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_MaterialType
static int tolua_set_irr__video__SMaterial_MaterialType(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaterialType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaterialType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AmbientColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_AmbientColor
static int tolua_get_irr__video__SMaterial_AmbientColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmbientColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->AmbientColor,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AmbientColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_AmbientColor
static int tolua_set_irr__video__SMaterial_AmbientColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AmbientColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AmbientColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DiffuseColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_DiffuseColor
static int tolua_get_irr__video__SMaterial_DiffuseColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiffuseColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->DiffuseColor,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DiffuseColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_DiffuseColor
static int tolua_set_irr__video__SMaterial_DiffuseColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DiffuseColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DiffuseColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EmissiveColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_EmissiveColor
static int tolua_get_irr__video__SMaterial_EmissiveColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EmissiveColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->EmissiveColor,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EmissiveColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_EmissiveColor
static int tolua_set_irr__video__SMaterial_EmissiveColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EmissiveColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EmissiveColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpecularColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_SpecularColor
static int tolua_get_irr__video__SMaterial_SpecularColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpecularColor'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->SpecularColor,"irr::video::SColor");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpecularColor of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_SpecularColor
static int tolua_set_irr__video__SMaterial_SpecularColor(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpecularColor'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpecularColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Shininess of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Shininess
static int tolua_get_irr__video__SMaterial_Shininess(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shininess'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Shininess);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Shininess of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Shininess
static int tolua_set_irr__video__SMaterial_Shininess(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Shininess'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Shininess = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaterialTypeParam of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_MaterialTypeParam
static int tolua_get_irr__video__SMaterial_MaterialTypeParam(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaterialTypeParam'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaterialTypeParam);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaterialTypeParam of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_MaterialTypeParam
static int tolua_set_irr__video__SMaterial_MaterialTypeParam(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaterialTypeParam'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaterialTypeParam = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Texture1 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Texture1_ptr
static int tolua_get_irr__video__SMaterial_Texture1_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture1'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->Texture1,"irr::video::ITexture");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Texture1 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Texture1_ptr
static int tolua_set_irr__video__SMaterial_Texture1_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture1'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Texture1 = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Texture2 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Texture2_ptr
static int tolua_get_irr__video__SMaterial_Texture2_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture2'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->Texture2,"irr::video::ITexture");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Texture2 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Texture2_ptr
static int tolua_set_irr__video__SMaterial_Texture2_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture2'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Texture2 = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Texture3 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Texture3_ptr
static int tolua_get_irr__video__SMaterial_Texture3_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture3'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->Texture3,"irr::video::ITexture");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Texture3 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Texture3_ptr
static int tolua_set_irr__video__SMaterial_Texture3_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture3'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Texture3 = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Texture4 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Texture4_ptr
static int tolua_get_irr__video__SMaterial_Texture4_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture4'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->Texture4,"irr::video::ITexture");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Texture4 of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Texture4_ptr
static int tolua_set_irr__video__SMaterial_Texture4_ptr(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Texture4'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Texture4 = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Wireframe of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Wireframe
static int tolua_get_irr__video__SMaterial_Wireframe(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Wireframe'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Wireframe);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Wireframe of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Wireframe
static int tolua_set_irr__video__SMaterial_Wireframe(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Wireframe'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Wireframe = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: PointCloud of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_PointCloud
static int tolua_get_irr__video__SMaterial_PointCloud(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PointCloud'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->PointCloud);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: PointCloud of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_PointCloud
static int tolua_set_irr__video__SMaterial_PointCloud(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'PointCloud'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->PointCloud = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GouraudShading of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_GouraudShading
static int tolua_get_irr__video__SMaterial_GouraudShading(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GouraudShading'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->GouraudShading);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: GouraudShading of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_GouraudShading
static int tolua_set_irr__video__SMaterial_GouraudShading(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'GouraudShading'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->GouraudShading = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Lighting of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_Lighting
static int tolua_get_irr__video__SMaterial_Lighting(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lighting'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Lighting);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Lighting of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_Lighting
static int tolua_set_irr__video__SMaterial_Lighting(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Lighting'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Lighting = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZBuffer of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_ZBuffer
static int tolua_get_irr__video__SMaterial_ZBuffer(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZBuffer'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->ZBuffer);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ZBuffer of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_ZBuffer
static int tolua_set_irr__video__SMaterial_ZBuffer(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZBuffer'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ZBuffer = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZWriteEnable of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_ZWriteEnable
static int tolua_get_irr__video__SMaterial_ZWriteEnable(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZWriteEnable'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->ZWriteEnable);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ZWriteEnable of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_ZWriteEnable
static int tolua_set_irr__video__SMaterial_ZWriteEnable(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ZWriteEnable'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ZWriteEnable = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BackfaceCulling of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_BackfaceCulling
static int tolua_get_irr__video__SMaterial_BackfaceCulling(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BackfaceCulling'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->BackfaceCulling);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BackfaceCulling of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_BackfaceCulling
static int tolua_set_irr__video__SMaterial_BackfaceCulling(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BackfaceCulling'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BackfaceCulling = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BilinearFilter of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_BilinearFilter
static int tolua_get_irr__video__SMaterial_BilinearFilter(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BilinearFilter'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->BilinearFilter);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BilinearFilter of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_BilinearFilter
static int tolua_set_irr__video__SMaterial_BilinearFilter(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BilinearFilter'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BilinearFilter = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TrilinearFilter of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_TrilinearFilter
static int tolua_get_irr__video__SMaterial_TrilinearFilter(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrilinearFilter'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->TrilinearFilter);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TrilinearFilter of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_TrilinearFilter
static int tolua_set_irr__video__SMaterial_TrilinearFilter(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TrilinearFilter'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TrilinearFilter = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FogEnable of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_FogEnable
static int tolua_get_irr__video__SMaterial_FogEnable(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FogEnable'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->FogEnable);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FogEnable of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_FogEnable
static int tolua_set_irr__video__SMaterial_FogEnable(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'FogEnable'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->FogEnable = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: NormalizeNormals of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_get_irr__video__SMaterial_NormalizeNormals
static int tolua_get_irr__video__SMaterial_NormalizeNormals(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormalizeNormals'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->NormalizeNormals);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: NormalizeNormals of class  irr::video::SMaterial */
#ifndef TOLUA_DISABLE_tolua_set_irr__video__SMaterial_NormalizeNormals
static int tolua_set_irr__video__SMaterial_NormalizeNormals(lua_State* tolua_S)
{
  irr::video::SMaterial* self = (irr::video::SMaterial*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'NormalizeNormals'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->NormalizeNormals = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new00
static int tolua_IrrLua_irr_core_array_f32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new00_local
static int tolua_IrrLua_irr_core_array_f32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new01
static int tolua_IrrLua_irr_core_array_f32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>(start_count);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_f32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new01_local
static int tolua_IrrLua_irr_core_array_f32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>(start_count);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_f32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new02
static int tolua_IrrLua_irr_core_array_f32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<f32>* other = ((irr::core::array<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_f32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__new02_local
static int tolua_IrrLua_irr_core_array_f32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<f32>* other = ((irr::core::array<f32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<f32>* tolua_ret = (irr::core::array<f32>*)  new irr::core::array<f32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_f32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__delete00
static int tolua_IrrLua_irr_core_array_f32__delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reallocate of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__reallocate00
static int tolua_IrrLua_irr_core_array_f32__reallocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int new_size = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reallocate'",NULL);
#endif
  {
   self->reallocate(new_size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reallocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_back of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__push_back00
static int tolua_IrrLua_irr_core_array_f32__push_back00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
   float element = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_back'",NULL);
#endif
  {
   self->push_back(element);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_back'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_front of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__push_front00
static int tolua_IrrLua_irr_core_array_f32__push_front00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
   float element = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_front'",NULL);
#endif
  {
   self->push_front(element);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_front'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__insert00
static int tolua_IrrLua_irr_core_array_f32__insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
   float element = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'",NULL);
#endif
  {
   self->insert(element,index);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__clear00
static int tolua_IrrLua_irr_core_array_f32__clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_pointer of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__set_pointer00
static int tolua_IrrLua_irr_core_array_f32__set_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
   float newPointer = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned int size = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_pointer'",NULL);
#endif
  {
   self->set_pointer(&newPointer,size);
   tolua_pushnumber(tolua_S,(lua_Number)newPointer);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_free_when_destroyed of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__set_free_when_destroyed00
static int tolua_IrrLua_irr_core_array_f32__set_free_when_destroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  bool f = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_free_when_destroyed'",NULL);
#endif
  {
   self->set_free_when_destroyed(f);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_free_when_destroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_used of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__set_used00
static int tolua_IrrLua_irr_core_array_f32__set_used00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int usedNow = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_used'",NULL);
#endif
  {
   self->set_used(usedNow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_used'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32___seti00
static int tolua_IrrLua_irr_core_array_f32___seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
   float tolua_value = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'",NULL);
#endif
  self->operator[](index-1) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32___geti00
static int tolua_IrrLua_irr_core_array_f32___geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->operator[](index-1);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLast of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__getLast00
static int tolua_IrrLua_irr_core_array_f32__getLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLast'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getLast();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pointer of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__pointer00
static int tolua_IrrLua_irr_core_array_f32__pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pointer'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->pointer();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: const_pointer of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__const_pointer00
static int tolua_IrrLua_irr_core_array_f32__const_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'const_pointer'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->const_pointer();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'const_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__size00
static int tolua_IrrLua_irr_core_array_f32__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allocated_size of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__allocated_size00
static int tolua_IrrLua_irr_core_array_f32__allocated_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allocated_size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->allocated_size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocated_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: empty of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__empty00
static int tolua_IrrLua_irr_core_array_f32__empty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'empty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->empty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'empty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__erase00
static int tolua_IrrLua_irr_core_array_f32__erase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'erase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__erase01
static int tolua_IrrLua_irr_core_array_f32__erase01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index,count);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_f32__erase00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_sorted of class  irr::core::array<f32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_f32__set_sorted00
static int tolua_IrrLua_irr_core_array_f32__set_sorted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<f32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<f32>* self = (irr::core::array<f32>*)  tolua_tousertype(tolua_S,1,0);
  bool _is_sorted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_sorted'",NULL);
#endif
  {
   self->set_sorted(_is_sorted);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_sorted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new00
static int tolua_IrrLua_irr_core_array_s32__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new00_local
static int tolua_IrrLua_irr_core_array_s32__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new01
static int tolua_IrrLua_irr_core_array_s32__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>(start_count);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_s32__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new01_local
static int tolua_IrrLua_irr_core_array_s32__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>(start_count);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_s32__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new02
static int tolua_IrrLua_irr_core_array_s32__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<s32>* other = ((irr::core::array<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_s32__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__new02_local
static int tolua_IrrLua_irr_core_array_s32__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<s32>* other = ((irr::core::array<s32>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<s32>* tolua_ret = (irr::core::array<s32>*)  new irr::core::array<s32>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<s32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_s32__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__delete00
static int tolua_IrrLua_irr_core_array_s32__delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reallocate of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__reallocate00
static int tolua_IrrLua_irr_core_array_s32__reallocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int new_size = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reallocate'",NULL);
#endif
  {
   self->reallocate(new_size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reallocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_back of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__push_back00
static int tolua_IrrLua_irr_core_array_s32__push_back00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  signed int element = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_back'",NULL);
#endif
  {
   self->push_back(element);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_back'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_front of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__push_front00
static int tolua_IrrLua_irr_core_array_s32__push_front00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  signed int element = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_front'",NULL);
#endif
  {
   self->push_front(element);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_front'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__insert00
static int tolua_IrrLua_irr_core_array_s32__insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  signed int element = (( signed int)  tolua_tonumber(tolua_S,2,0));
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'",NULL);
#endif
  {
   self->insert(element,index);
   tolua_pushnumber(tolua_S,(lua_Number)element);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__clear00
static int tolua_IrrLua_irr_core_array_s32__clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_pointer of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__set_pointer00
static int tolua_IrrLua_irr_core_array_s32__set_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  signed int newPointer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  unsigned int size = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_pointer'",NULL);
#endif
  {
   self->set_pointer(&newPointer,size);
   tolua_pushnumber(tolua_S,(lua_Number)newPointer);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_free_when_destroyed of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__set_free_when_destroyed00
static int tolua_IrrLua_irr_core_array_s32__set_free_when_destroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  bool f = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_free_when_destroyed'",NULL);
#endif
  {
   self->set_free_when_destroyed(f);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_free_when_destroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_used of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__set_used00
static int tolua_IrrLua_irr_core_array_s32__set_used00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int usedNow = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_used'",NULL);
#endif
  {
   self->set_used(usedNow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_used'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32___seti00
static int tolua_IrrLua_irr_core_array_s32___seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  signed int tolua_value = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'",NULL);
#endif
  self->operator[](index-1) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32___geti00
static int tolua_IrrLua_irr_core_array_s32___geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->operator[](index-1);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLast of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__getLast00
static int tolua_IrrLua_irr_core_array_s32__getLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLast'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getLast();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pointer of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__pointer00
static int tolua_IrrLua_irr_core_array_s32__pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pointer'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->pointer();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: const_pointer of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__const_pointer00
static int tolua_IrrLua_irr_core_array_s32__const_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'const_pointer'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->const_pointer();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'const_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__size00
static int tolua_IrrLua_irr_core_array_s32__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allocated_size of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__allocated_size00
static int tolua_IrrLua_irr_core_array_s32__allocated_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allocated_size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->allocated_size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocated_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: empty of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__empty00
static int tolua_IrrLua_irr_core_array_s32__empty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'empty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->empty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'empty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__erase00
static int tolua_IrrLua_irr_core_array_s32__erase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'erase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__erase01
static int tolua_IrrLua_irr_core_array_s32__erase01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index,count);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_s32__erase00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_sorted of class  irr::core::array<s32> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_s32__set_sorted00
static int tolua_IrrLua_irr_core_array_s32__set_sorted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<s32>* self = (irr::core::array<s32>*)  tolua_tousertype(tolua_S,1,0);
  bool _is_sorted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_sorted'",NULL);
#endif
  {
   self->set_sorted(_is_sorted);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_sorted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00_local
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >(start_count);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01_local
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >(start_count);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::core::vector3d<f32> >* other = ((irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02_local
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::core::vector3d<f32> >* other = ((irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  new irr::core::array<irr::core::vector3d<f32> >(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____delete00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reallocate of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____reallocate00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____reallocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int new_size = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reallocate'",NULL);
#endif
  {
   self->reallocate(new_size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reallocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_back of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_back00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_back00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* element = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_back'",NULL);
#endif
  {
   self->push_back(*element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_back'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_front of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_front00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_front00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* element = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_front'",NULL);
#endif
  {
   self->push_front(*element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_front'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____insert00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* element = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'",NULL);
#endif
  {
   self->insert(*element,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____clear00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_pointer of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_pointer00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newPointer = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  unsigned int size = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_pointer'",NULL);
#endif
  {
   self->set_pointer(newPointer,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_free_when_destroyed of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_free_when_destroyed00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_free_when_destroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  bool f = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_free_when_destroyed'",NULL);
#endif
  {
   self->set_free_when_destroyed(f);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_free_when_destroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_used of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_used00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_used00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int usedNow = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_used'",NULL);
#endif
  {
   self->set_used(usedNow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_used'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____seti00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  irr::core::vector3d<f32> tolua_value = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'",NULL);
#endif
  self->operator[](index-1) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____geti00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->operator[](index-1);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLast of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____getLast00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____getLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLast'",NULL);
#endif
  {
   irr::core::vector3d<f32>& tolua_ret = (irr::core::vector3d<f32>&)  self->getLast();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pointer of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____pointer00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pointer'",NULL);
#endif
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  self->pointer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: const_pointer of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____const_pointer00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____const_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'const_pointer'",NULL);
#endif
  {
   irr::core::vector3d<f32>* tolua_ret = (irr::core::vector3d<f32>*)  self->const_pointer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::vector3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'const_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____size00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allocated_size of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____allocated_size00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____allocated_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allocated_size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->allocated_size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocated_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: empty of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____empty00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____empty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'empty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->empty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'empty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'erase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase01
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index,count);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_sorted of class  irr::core::array<irr::core::vector3d<f32> > */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_sorted00
static int tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_sorted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::core::vector3d<f32> >* self = (irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,1,0);
  bool _is_sorted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_sorted'",NULL);
#endif
  {
   self->set_sorted(_is_sorted);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_sorted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new00_local
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new01
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>(start_count);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__video__PITexture__new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new01_local
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  unsigned int start_count = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>(start_count);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__video__PITexture__new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new02
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::video::PITexture>* other = ((irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>(*other);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__video__PITexture__new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__new02_local
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::video::PITexture>* other = ((irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::core::array<irr::video::PITexture>* tolua_ret = (irr::core::array<irr::video::PITexture>*)  new irr::core::array<irr::video::PITexture>(*other);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::core::array<irr::video::PITexture>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__video__PITexture__new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__delete00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reallocate of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__reallocate00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__reallocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int new_size = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reallocate'",NULL);
#endif
  {
   self->reallocate(new_size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reallocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_back of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__push_back00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__push_back00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::PITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  irr::video::PITexture* element = ((irr::video::PITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_back'",NULL);
#endif
  {
   self->push_back(*element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_back'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push_front of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__push_front00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__push_front00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::PITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  irr::video::PITexture* element = ((irr::video::PITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push_front'",NULL);
#endif
  {
   self->push_front(*element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push_front'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insert of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__insert00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__insert00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::PITexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  irr::video::PITexture* element = ((irr::video::PITexture*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insert'",NULL);
#endif
  {
   self->insert(*element,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insert'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__clear00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_pointer of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__set_pointer00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__set_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::PITexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  irr::video::PITexture* newPointer = ((irr::video::PITexture*)  tolua_tousertype(tolua_S,2,0));
  unsigned int size = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_pointer'",NULL);
#endif
  {
   self->set_pointer(newPointer,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_free_when_destroyed of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__set_free_when_destroyed00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__set_free_when_destroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  bool f = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_free_when_destroyed'",NULL);
#endif
  {
   self->set_free_when_destroyed(f);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_free_when_destroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_used of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__set_used00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__set_used00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int usedNow = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_used'",NULL);
#endif
  {
   self->set_used(usedNow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_used'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture___seti00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture___seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::PITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  irr::video::PITexture tolua_value = *((irr::video::PITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'",NULL);
#endif
  self->operator[](index-1) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture___geti00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture___geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'",NULL);
#endif
  {
   irr::video::PITexture tolua_ret = (irr::video::PITexture)  self->operator[](index-1);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::PITexture(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::PITexture");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::PITexture));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::PITexture");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLast of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__getLast00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__getLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLast'",NULL);
#endif
  {
   irr::video::PITexture& tolua_ret = (irr::video::PITexture&)  self->getLast();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::PITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pointer of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__pointer00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pointer'",NULL);
#endif
  {
   irr::video::PITexture* tolua_ret = (irr::video::PITexture*)  self->pointer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::PITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: const_pointer of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__const_pointer00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__const_pointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'const_pointer'",NULL);
#endif
  {
   irr::video::PITexture* tolua_ret = (irr::video::PITexture*)  self->const_pointer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::PITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'const_pointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__size00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allocated_size of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__allocated_size00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__allocated_size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allocated_size'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->allocated_size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allocated_size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: empty of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__empty00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__empty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'empty'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->empty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'empty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__erase00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__erase00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'erase'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: erase of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__erase01
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__erase01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'erase'",NULL);
#endif
  {
   self->erase(index,count);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_core_array_irr__video__PITexture__erase00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_sorted of class  irr::core::array<irr::video::PITexture> */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_core_array_irr__video__PITexture__set_sorted00
static int tolua_IrrLua_irr_core_array_irr__video__PITexture__set_sorted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::core::array<irr::video::PITexture>* self = (irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,1,0);
  bool _is_sorted = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_sorted'",NULL);
#endif
  {
   self->set_sorted(_is_sorted);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_sorted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_new00
static int tolua_IrrLua_irr_scene_SViewFrustrum_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SViewFrustrum* tolua_ret = (irr::scene::SViewFrustrum*)  new irr::scene::SViewFrustrum();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SViewFrustrum");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_new00_local
static int tolua_IrrLua_irr_scene_SViewFrustrum_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SViewFrustrum* tolua_ret = (irr::scene::SViewFrustrum*)  new irr::scene::SViewFrustrum();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SViewFrustrum");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_delete00
static int tolua_IrrLua_irr_scene_SViewFrustrum_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_new01
static int tolua_IrrLua_irr_scene_SViewFrustrum_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::scene::SViewFrustrum* tolua_ret = (irr::scene::SViewFrustrum*)  new irr::scene::SViewFrustrum(*mat);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SViewFrustrum");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SViewFrustrum_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_new01_local
static int tolua_IrrLua_irr_scene_SViewFrustrum_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
  {
   irr::scene::SViewFrustrum* tolua_ret = (irr::scene::SViewFrustrum*)  new irr::scene::SViewFrustrum(*mat);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SViewFrustrum");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SViewFrustrum_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: cameraPosition of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SViewFrustrum_cameraPosition
static int tolua_get_irr__scene__SViewFrustrum_cameraPosition(lua_State* tolua_S)
{
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cameraPosition'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->cameraPosition,"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: cameraPosition of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SViewFrustrum_cameraPosition
static int tolua_set_irr__scene__SViewFrustrum_cameraPosition(lua_State* tolua_S)
{
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cameraPosition'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->cameraPosition = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: boundingBox of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SViewFrustrum_boundingBox
static int tolua_get_irr__scene__SViewFrustrum_boundingBox(lua_State* tolua_S)
{
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boundingBox'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->boundingBox,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: boundingBox of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SViewFrustrum_boundingBox
static int tolua_set_irr__scene__SViewFrustrum_boundingBox(lua_State* tolua_S)
{
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'boundingBox'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->boundingBox = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: transform of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_transform00
static int tolua_IrrLua_irr_scene_SViewFrustrum_transform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transform'",NULL);
#endif
  {
   self->transform(*mat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFarLeftUp of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftUp00
static int tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFarLeftUp'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getFarLeftUp();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFarLeftUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFarLeftDown of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftDown00
static int tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFarLeftDown'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getFarLeftDown();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFarLeftDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFarRightUp of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightUp00
static int tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFarRightUp'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getFarRightUp();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFarRightUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFarRightDown of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightDown00
static int tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFarRightDown'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getFarRightDown();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFarRightDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_getBoundingBox00
static int tolua_IrrLua_irr_scene_SViewFrustrum_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SViewFrustrum */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SViewFrustrum_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SViewFrustrum_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SViewFrustrum",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SViewFrustrum* self = (irr::scene::SViewFrustrum*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_delete00
static int tolua_IrrLua_irr_scene_ITriangleSelector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleCount of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_getTriangleCount00
static int tolua_IrrLua_irr_scene_ITriangleSelector_getTriangleCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTriangleCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles00
static int tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles01
static int tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*box,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles02
static int tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*line,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_grab00
static int tolua_IrrLua_irr_scene_ITriangleSelector_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_drop00
static int tolua_IrrLua_irr_scene_ITriangleSelector_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITriangleSelector_getDebugName00
static int tolua_IrrLua_irr_scene_ITriangleSelector_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITriangleSelector* self = (irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaITriangleSelector* tolua_ret = (irr::scene::IrrLuaITriangleSelector*)  new irr::scene::IrrLuaITriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaITriangleSelector* tolua_ret = (irr::scene::IrrLuaITriangleSelector*)  new irr::scene::IrrLuaITriangleSelector();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_delete00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleCount of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangleCount00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangleCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTriangleCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles01
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*box,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles02
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*line,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_grab00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_drop00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getDebugName00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaITriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaITriangleSelector* self = (irr::scene::IrrLuaITriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTriangleSelector of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_addTriangleSelector00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_addTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* toAdd = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTriangleSelector'",NULL);
#endif
  {
   self->addTriangleSelector(toAdd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTriangleSelector of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeTriangleSelector00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* toRemove = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTriangleSelector'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeTriangleSelector(toRemove);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllTriangleSelectors of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeAllTriangleSelectors00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeAllTriangleSelectors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllTriangleSelectors'",NULL);
#endif
  {
   self->removeAllTriangleSelectors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllTriangleSelectors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleCount of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangleCount00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangleCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTriangleCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles01
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::aabbox3d<f32>* box = ((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*box,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangles of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles02
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangles = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int arraySize = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outTriangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::line3d<f32>* line = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::matrix4* transform = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangles'",NULL);
#endif
  {
   self->getTriangles(triangles,arraySize,outTriangleCount,*line,transform);
   tolua_pushnumber(tolua_S,(lua_Number)outTriangleCount);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_grab00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_drop00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IMetaTriangleSelector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMetaTriangleSelector_getDebugName00
static int tolua_IrrLua_irr_scene_IMetaTriangleSelector_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMetaTriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMetaTriangleSelector* self = (irr::scene::IMetaTriangleSelector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_setVisible00
static int tolua_IrrLua_irr_gui_ICursorControl_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_isVisible00
static int tolua_IrrLua_irr_gui_ICursorControl_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_setPosition00
static int tolua_IrrLua_irr_gui_ICursorControl_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<f32>* pos = ((irr::core::position2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_setPosition01
static int tolua_IrrLua_irr_gui_ICursorControl_setPosition01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
   float x = ((  float)  tolua_tonumber(tolua_S,2,0));
   float y = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(x,y);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_gui_ICursorControl_setPosition00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_setPosition02
static int tolua_IrrLua_irr_gui_ICursorControl_setPosition02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* pos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*pos);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_gui_ICursorControl_setPosition01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_setPosition03
static int tolua_IrrLua_irr_gui_ICursorControl_setPosition03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(x,y);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_gui_ICursorControl_setPosition02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_getPosition00
static int tolua_IrrLua_irr_gui_ICursorControl_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::position2d<s32> tolua_ret = (irr::core::position2d<s32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::ICursorControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_ICursorControl_getRelativePosition00
static int tolua_IrrLua_irr_gui_ICursorControl_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::ICursorControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::ICursorControl* self = (irr::gui::ICursorControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::position2d<f32> tolua_ret = (irr::core::position2d<f32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_delete00
static int tolua_IrrLua_irr_video_IVideoModeList_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoModeCount of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getVideoModeCount00
static int tolua_IrrLua_irr_video_IVideoModeList_getVideoModeCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoModeCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVideoModeCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoModeCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoModeResolution of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getVideoModeResolution00
static int tolua_IrrLua_irr_video_IVideoModeList_getVideoModeResolution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
  signed int modeNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoModeResolution'",NULL);
#endif
  {
   irr::core::dimension2d<s32> tolua_ret = (irr::core::dimension2d<s32>)  self->getVideoModeResolution(modeNumber);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::dimension2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::dimension2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoModeResolution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoModeDepth of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getVideoModeDepth00
static int tolua_IrrLua_irr_video_IVideoModeList_getVideoModeDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
  signed int modeNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoModeDepth'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVideoModeDepth(modeNumber);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoModeDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDesktopResolution of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getDesktopResolution00
static int tolua_IrrLua_irr_video_IVideoModeList_getDesktopResolution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDesktopResolution'",NULL);
#endif
  {
   irr::core::dimension2d<s32> tolua_ret = (irr::core::dimension2d<s32>)  self->getDesktopResolution();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::dimension2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::dimension2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDesktopResolution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDesktopDepth of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getDesktopDepth00
static int tolua_IrrLua_irr_video_IVideoModeList_getDesktopDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDesktopDepth'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getDesktopDepth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDesktopDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_grab00
static int tolua_IrrLua_irr_video_IVideoModeList_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_drop00
static int tolua_IrrLua_irr_video_IVideoModeList_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::IVideoModeList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoModeList_getDebugName00
static int tolua_IrrLua_irr_video_IVideoModeList_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoModeList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoModeList* self = (irr::video::IVideoModeList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_delete00
static int tolua_IrrLua_irr_io_IReadFile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: read of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_read00
static int tolua_IrrLua_irr_io_IReadFile_read00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
  void* buffer = ((void*)  tolua_touserdata(tolua_S,2,0));
  signed int sizeToRead = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'read'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->read(buffer,sizeToRead);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'read'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seek of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_seek00
static int tolua_IrrLua_irr_io_IReadFile_seek00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
  signed int finalPos = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool relativeMovement = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'seek'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->seek(finalPos,relativeMovement);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seek'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_getSize00
static int tolua_IrrLua_irr_io_IReadFile_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPos of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_getPos00
static int tolua_IrrLua_irr_io_IReadFile_getPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPos'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileName of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_getFileName00
static int tolua_IrrLua_irr_io_IReadFile_getFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getFileName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_grab00
static int tolua_IrrLua_irr_io_IReadFile_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_drop00
static int tolua_IrrLua_irr_io_IReadFile_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IReadFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IReadFile_getDebugName00
static int tolua_IrrLua_irr_io_IReadFile_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* self = (irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_delete00
static int tolua_IrrLua_irr_io_IWriteFile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: write of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_write00
static int tolua_IrrLua_irr_io_IWriteFile_write00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
  void* buffer = ((void*)  tolua_touserdata(tolua_S,2,0));
  signed int sizeToWrite = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'write'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->write(buffer,sizeToWrite);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'write'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: seek of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_seek00
static int tolua_IrrLua_irr_io_IWriteFile_seek00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
  signed int finalPos = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool relativeMovement = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'seek'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->seek(finalPos,relativeMovement);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seek'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPos of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_getPos00
static int tolua_IrrLua_irr_io_IWriteFile_getPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPos'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileName of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_getFileName00
static int tolua_IrrLua_irr_io_IWriteFile_getFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getFileName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_grab00
static int tolua_IrrLua_irr_io_IWriteFile_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_drop00
static int tolua_IrrLua_irr_io_IWriteFile_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IWriteFile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IWriteFile_getDebugName00
static int tolua_IrrLua_irr_io_IWriteFile_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IWriteFile* self = (irr::io::IWriteFile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_delete00
static int tolua_IrrLua_irr_io_IFileList_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileCount of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_getFileCount00
static int tolua_IrrLua_irr_io_IFileList_getFileCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFileCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileName of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_getFileName00
static int tolua_IrrLua_irr_io_IFileList_getFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getFileName(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFullFileName of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_getFullFileName00
static int tolua_IrrLua_irr_io_IFileList_getFullFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFullFileName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getFullFileName(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFullFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDirectory of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_isDirectory00
static int tolua_IrrLua_irr_io_IFileList_isDirectory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDirectory'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDirectory(index);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDirectory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_grab00
static int tolua_IrrLua_irr_io_IFileList_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_drop00
static int tolua_IrrLua_irr_io_IFileList_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IFileList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileList_getDebugName00
static int tolua_IrrLua_irr_io_IFileList_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileList* self = (irr::io::IFileList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_delete00
static int tolua_IrrLua_irr_io_IXMLReader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: read of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_read00
static int tolua_IrrLua_irr_io_IXMLReader_read00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'read'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->read();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'read'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodeType of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getNodeType00
static int tolua_IrrLua_irr_io_IXMLReader_getNodeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodeType'",NULL);
#endif
  {
   irr::io::EXML_NODE tolua_ret = (irr::io::EXML_NODE)  self->getNodeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeCount of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeCount00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeName of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeName00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeName'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getAttributeName(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeValue of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeValue00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeValue'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getAttributeValue(name);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeValueSafe of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeValueSafe00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeValueSafe00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeValueSafe'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getAttributeValueSafe(name);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeValueSafe'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeValueAsInt of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsInt00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeValueAsInt'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAttributeValueAsInt(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeValueAsInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttributeValueAsFloat of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsFloat00
static int tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttributeValueAsFloat'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getAttributeValueAsFloat(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttributeValueAsFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodeName of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getNodeName00
static int tolua_IrrLua_irr_io_IXMLReader_getNodeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodeName'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getNodeName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNodeData of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getNodeData00
static int tolua_IrrLua_irr_io_IXMLReader_getNodeData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNodeData'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getNodeData();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNodeData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEmptyElement of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_isEmptyElement00
static int tolua_IrrLua_irr_io_IXMLReader_isEmptyElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEmptyElement'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEmptyElement();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEmptyElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_grab00
static int tolua_IrrLua_irr_io_IXMLReader_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_drop00
static int tolua_IrrLua_irr_io_IXMLReader_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IXMLReader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLReader_getDebugName00
static int tolua_IrrLua_irr_io_IXMLReader_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLReader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLReader* self = (irr::io::IXMLReader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_delete00
static int tolua_IrrLua_irr_io_IXMLWriter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeXMLHeader of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeXMLHeader00
static int tolua_IrrLua_irr_io_IXMLWriter_writeXMLHeader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeXMLHeader'",NULL);
#endif
  {
   self->writeXMLHeader();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeXMLHeader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeElement of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeElement00
static int tolua_IrrLua_irr_io_IXMLWriter_writeElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,9,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,10,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,11,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,12,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,13,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,14,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  bool empty = ((bool)  tolua_toboolean(tolua_S,3,0));
  wchar_t* attr1Name = ((wchar_t*)  tolua_tousertype(tolua_S,4,0));
  wchar_t* attr1Value = ((wchar_t*)  tolua_tousertype(tolua_S,5,0));
  wchar_t* attr2Name = ((wchar_t*)  tolua_tousertype(tolua_S,6,0));
  wchar_t* attr2Value = ((wchar_t*)  tolua_tousertype(tolua_S,7,0));
  wchar_t* attr3Name = ((wchar_t*)  tolua_tousertype(tolua_S,8,0));
  wchar_t* attr3Value = ((wchar_t*)  tolua_tousertype(tolua_S,9,0));
  wchar_t* attr4Name = ((wchar_t*)  tolua_tousertype(tolua_S,10,0));
  wchar_t* attr4Value = ((wchar_t*)  tolua_tousertype(tolua_S,11,0));
  wchar_t* attr5Name = ((wchar_t*)  tolua_tousertype(tolua_S,12,0));
  wchar_t* attr5Value = ((wchar_t*)  tolua_tousertype(tolua_S,13,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeElement'",NULL);
#endif
  {
   self->writeElement(name,empty,attr1Name,attr1Value,attr2Name,attr2Value,attr3Name,attr3Value,attr4Name,attr4Value,attr5Name,attr5Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeComment of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeComment00
static int tolua_IrrLua_irr_io_IXMLWriter_writeComment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* comment = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeComment'",NULL);
#endif
  {
   self->writeComment(comment);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeComment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeClosingTag of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeClosingTag00
static int tolua_IrrLua_irr_io_IXMLWriter_writeClosingTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* name = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeClosingTag'",NULL);
#endif
  {
   self->writeClosingTag(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeClosingTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeText of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeText00
static int tolua_IrrLua_irr_io_IXMLWriter_writeText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeText'",NULL);
#endif
  {
   self->writeText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeLineBreak of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_writeLineBreak00
static int tolua_IrrLua_irr_io_IXMLWriter_writeLineBreak00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeLineBreak'",NULL);
#endif
  {
   self->writeLineBreak();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeLineBreak'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_grab00
static int tolua_IrrLua_irr_io_IXMLWriter_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_drop00
static int tolua_IrrLua_irr_io_IXMLWriter_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IXMLWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IXMLWriter_getDebugName00
static int tolua_IrrLua_irr_io_IXMLWriter_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IXMLWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IXMLWriter* self = (irr::io::IXMLWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_delete00
static int tolua_IrrLua_irr_io_IFileSystem_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createAndOpenFile of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createAndOpenFile00
static int tolua_IrrLua_irr_io_IFileSystem_createAndOpenFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createAndOpenFile'",NULL);
#endif
  {
   irr::io::IReadFile* tolua_ret = (irr::io::IReadFile*)  self->createAndOpenFile(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IReadFile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createAndOpenFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createAndWriteFile of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createAndWriteFile00
static int tolua_IrrLua_irr_io_IFileSystem_createAndWriteFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
  bool append = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createAndWriteFile'",NULL);
#endif
  {
   irr::io::IWriteFile* tolua_ret = (irr::io::IWriteFile*)  self->createAndWriteFile(filename,append);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IWriteFile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createAndWriteFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addZipFileArchive of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_addZipFileArchive00
static int tolua_IrrLua_irr_io_IFileSystem_addZipFileArchive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
  bool ignoreCase = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool ignorePaths = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addZipFileArchive'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->addZipFileArchive(filename,ignoreCase,ignorePaths);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addZipFileArchive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addPakFileArchive of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_addPakFileArchive00
static int tolua_IrrLua_irr_io_IFileSystem_addPakFileArchive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
  bool ignoreCase = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool ignorePaths = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addPakFileArchive'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->addPakFileArchive(filename,ignoreCase,ignorePaths);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPakFileArchive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorkingDirectory of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_getWorkingDirectory00
static int tolua_IrrLua_irr_io_IFileSystem_getWorkingDirectory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorkingDirectory'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getWorkingDirectory();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorkingDirectory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeWorkingDirectoryTo of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_changeWorkingDirectoryTo00
static int tolua_IrrLua_irr_io_IFileSystem_changeWorkingDirectoryTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* newDirectory = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeWorkingDirectoryTo'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->changeWorkingDirectoryTo(newDirectory);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeWorkingDirectoryTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFileList of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createFileList00
static int tolua_IrrLua_irr_io_IFileSystem_createFileList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFileList'",NULL);
#endif
  {
   irr::io::IFileList* tolua_ret = (irr::io::IFileList*)  self->createFileList();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IFileList");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFileList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: existFile of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_existFile00
static int tolua_IrrLua_irr_io_IFileSystem_existFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'existFile'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->existFile(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'existFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createXMLReader of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createXMLReader00
static int tolua_IrrLua_irr_io_IFileSystem_createXMLReader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createXMLReader'",NULL);
#endif
  {
   irr::io::IXMLReader* tolua_ret = (irr::io::IXMLReader*)  self->createXMLReader(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IXMLReader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createXMLReader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createXMLReader of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createXMLReader01
static int tolua_IrrLua_irr_io_IFileSystem_createXMLReader01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IReadFile* file = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createXMLReader'",NULL);
#endif
  {
   irr::io::IXMLReader* tolua_ret = (irr::io::IXMLReader*)  self->createXMLReader(file);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IXMLReader");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IFileSystem_createXMLReader00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createXMLWriter of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createXMLWriter00
static int tolua_IrrLua_irr_io_IFileSystem_createXMLWriter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createXMLWriter'",NULL);
#endif
  {
   irr::io::IXMLWriter* tolua_ret = (irr::io::IXMLWriter*)  self->createXMLWriter(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IXMLWriter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createXMLWriter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createXMLWriter of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_createXMLWriter01
static int tolua_IrrLua_irr_io_IFileSystem_createXMLWriter01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IWriteFile* file = ((irr::io::IWriteFile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createXMLWriter'",NULL);
#endif
  {
   irr::io::IXMLWriter* tolua_ret = (irr::io::IXMLWriter*)  self->createXMLWriter(file);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IXMLWriter");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_io_IFileSystem_createXMLWriter00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_grab00
static int tolua_IrrLua_irr_io_IFileSystem_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_drop00
static int tolua_IrrLua_irr_io_IFileSystem_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::io::IFileSystem */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_IFileSystem_getDebugName00
static int tolua_IrrLua_irr_io_IFileSystem_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IFileSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IFileSystem* self = (irr::io::IFileSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_delete00
static int tolua_IrrLua_irr_ILogger_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLogLevel of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_getLogLevel00
static int tolua_IrrLua_irr_ILogger_getLogLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLogLevel'",NULL);
#endif
  {
   irr::ELOG_LEVEL tolua_ret = (irr::ELOG_LEVEL)  self->getLogLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLogLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLogLevel of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_setLogLevel00
static int tolua_IrrLua_irr_ILogger_setLogLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
  irr::ELOG_LEVEL ll = ((irr::ELOG_LEVEL) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLogLevel'",NULL);
#endif
  {
   self->setLogLevel(ll);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLogLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: log of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_log00
static int tolua_IrrLua_irr_ILogger_log00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
  c8* text = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::ELOG_LEVEL ll = ((irr::ELOG_LEVEL) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'log'",NULL);
#endif
  {
   self->log(text,ll);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'log'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_grab00
static int tolua_IrrLua_irr_ILogger_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_drop00
static int tolua_IrrLua_irr_ILogger_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::ILogger */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ILogger_getDebugName00
static int tolua_IrrLua_irr_ILogger_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ILogger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ILogger* self = (irr::ILogger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_delete00
static int tolua_IrrLua_irr_ITimer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRealTime of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_getRealTime00
static int tolua_IrrLua_irr_ITimer_getRealTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRealTime'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getRealTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRealTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTime of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_getTime00
static int tolua_IrrLua_irr_ITimer_getTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTime'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTime of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_setTime00
static int tolua_IrrLua_irr_ITimer_setTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
  unsigned int time = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTime'",NULL);
#endif
  {
   self->setTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_stop00
static int tolua_IrrLua_irr_ITimer_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'",NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: start of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_start00
static int tolua_IrrLua_irr_ITimer_start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'start'",NULL);
#endif
  {
   self->start();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpeed of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_setSpeed00
static int tolua_IrrLua_irr_ITimer_setSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
   float speed = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpeed'",NULL);
#endif
  {
   self->setSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeed of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_getSpeed00
static int tolua_IrrLua_irr_ITimer_getSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeed'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isStopped of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_isStopped00
static int tolua_IrrLua_irr_ITimer_isStopped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isStopped'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isStopped();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isStopped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tick of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_tick00
static int tolua_IrrLua_irr_ITimer_tick00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tick'",NULL);
#endif
  {
   self->tick();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tick'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_grab00
static int tolua_IrrLua_irr_ITimer_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_drop00
static int tolua_IrrLua_irr_ITimer_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::ITimer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_ITimer_getDebugName00
static int tolua_IrrLua_irr_ITimer_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::ITimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::ITimer* self = (irr::ITimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_delete00
static int tolua_IrrLua_irr_video_IImage_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lock of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_lock00
static int tolua_IrrLua_irr_video_IImage_lock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lock'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->lock();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unlock of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_unlock00
static int tolua_IrrLua_irr_video_IImage_unlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unlock'",NULL);
#endif
  {
   self->unlock();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDimension of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getDimension00
static int tolua_IrrLua_irr_video_IImage_getDimension00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDimension'",NULL);
#endif
  {
   irr::core::dimension2d<s32>& tolua_ret = (irr::core::dimension2d<s32>&)  self->getDimension();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::dimension2d<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDimension'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBitsPerPixel of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getBitsPerPixel00
static int tolua_IrrLua_irr_video_IImage_getBitsPerPixel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBitsPerPixel'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getBitsPerPixel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBitsPerPixel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBytesPerPixel of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getBytesPerPixel00
static int tolua_IrrLua_irr_video_IImage_getBytesPerPixel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBytesPerPixel'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getBytesPerPixel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBytesPerPixel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getImageDataSizeInBytes of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getImageDataSizeInBytes00
static int tolua_IrrLua_irr_video_IImage_getImageDataSizeInBytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getImageDataSizeInBytes'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getImageDataSizeInBytes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getImageDataSizeInBytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getImageDataSizeInPixels of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getImageDataSizeInPixels00
static int tolua_IrrLua_irr_video_IImage_getImageDataSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getImageDataSizeInPixels'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getImageDataSizeInPixels();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getImageDataSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPixel of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getPixel00
static int tolua_IrrLua_irr_video_IImage_getPixel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
  signed int x = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int y = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPixel'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getPixel(x,y);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPixel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColorFormat of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getColorFormat00
static int tolua_IrrLua_irr_video_IImage_getColorFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColorFormat'",NULL);
#endif
  {
   irr::video::ECOLOR_FORMAT tolua_ret = (irr::video::ECOLOR_FORMAT)  self->getColorFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColorFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRedMask of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getRedMask00
static int tolua_IrrLua_irr_video_IImage_getRedMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRedMask'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getRedMask();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRedMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGreenMask of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getGreenMask00
static int tolua_IrrLua_irr_video_IImage_getGreenMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGreenMask'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getGreenMask();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGreenMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlueMask of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getBlueMask00
static int tolua_IrrLua_irr_video_IImage_getBlueMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlueMask'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getBlueMask();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlueMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAlphaMask of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getAlphaMask00
static int tolua_IrrLua_irr_video_IImage_getAlphaMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAlphaMask'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getAlphaMask();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAlphaMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPitch of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getPitch00
static int tolua_IrrLua_irr_video_IImage_getPitch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPitch'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getPitch();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPitch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_grab00
static int tolua_IrrLua_irr_video_IImage_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_drop00
static int tolua_IrrLua_irr_video_IImage_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::IImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImage_getDebugName00
static int tolua_IrrLua_irr_video_IImage_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImage* self = (irr::video::IImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_delete00
static int tolua_IrrLua_irr_video_IImageLoader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isALoadableFileExtension of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_isALoadableFileExtension00
static int tolua_IrrLua_irr_video_IImageLoader_isALoadableFileExtension00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
  c8* fileName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isALoadableFileExtension'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isALoadableFileExtension(fileName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isALoadableFileExtension'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isALoadableFileFormat of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_isALoadableFileFormat00
static int tolua_IrrLua_irr_video_IImageLoader_isALoadableFileFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IReadFile* file = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isALoadableFileFormat'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isALoadableFileFormat(file);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isALoadableFileFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadImage of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_loadImage00
static int tolua_IrrLua_irr_video_IImageLoader_loadImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IReadFile* file = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadImage'",NULL);
#endif
  {
   irr::video::IImage* tolua_ret = (irr::video::IImage*)  self->loadImage(file);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_grab00
static int tolua_IrrLua_irr_video_IImageLoader_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_drop00
static int tolua_IrrLua_irr_video_IImageLoader_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::IImageLoader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageLoader_getDebugName00
static int tolua_IrrLua_irr_video_IImageLoader_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageLoader* self = (irr::video::IImageLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IImageWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageWriter_delete00
static int tolua_IrrLua_irr_video_IImageWriter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageWriter* self = (irr::video::IImageWriter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAWriteableFileExtension of class  irr::video::IImageWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageWriter_isAWriteableFileExtension00
static int tolua_IrrLua_irr_video_IImageWriter_isAWriteableFileExtension00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageWriter* self = (irr::video::IImageWriter*)  tolua_tousertype(tolua_S,1,0);
  c8* fileName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAWriteableFileExtension'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAWriteableFileExtension(fileName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAWriteableFileExtension'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeImage of class  irr::video::IImageWriter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IImageWriter_writeImage00
static int tolua_IrrLua_irr_video_IImageWriter_writeImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IImageWriter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IImageWriter* self = (irr::video::IImageWriter*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IWriteFile* file = ((irr::io::IWriteFile*)  tolua_tousertype(tolua_S,2,0));
  irr::video::IImage* image = ((irr::video::IImage*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeImage'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->writeImage(file,image);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_delete00
static int tolua_IrrLua_irr_scene_IMeshBuffer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial01
static int tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getVertexType00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getVertexType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getVertices00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getVertices01
static int tolua_IrrLua_irr_scene_IMeshBuffer_getVertices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshBuffer_getVertices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getVertexCount00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getIndices00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getIndices01
static int tolua_IrrLua_irr_scene_IMeshBuffer_getIndices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshBuffer_getIndices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getIndexCount00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getIndexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox01
static int tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_grab00
static int tolua_IrrLua_irr_scene_IMeshBuffer_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_drop00
static int tolua_IrrLua_irr_scene_IMeshBuffer_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshBuffer_getDebugName00
static int tolua_IrrLua_irr_scene_IMeshBuffer_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshBuffer* self = (irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_new00
static int tolua_IrrLua_irr_scene_SMeshBuffer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBuffer* tolua_ret = (irr::scene::SMeshBuffer*)  new irr::scene::SMeshBuffer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SMeshBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_new00_local
static int tolua_IrrLua_irr_scene_SMeshBuffer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBuffer* tolua_ret = (irr::scene::SMeshBuffer*)  new irr::scene::SMeshBuffer();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SMeshBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_delete00
static int tolua_IrrLua_irr_scene_SMeshBuffer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertices00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertices01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getVertices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndices00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndices01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getIndices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBuffer_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Material of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBuffer_Material
static int tolua_get_irr__scene__SMeshBuffer_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Material,"irr::video::SMaterial");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Material of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBuffer_Material
static int tolua_set_irr__scene__SMeshBuffer_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Material = *((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Vertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBuffer_Vertices
static int tolua_get_irr__scene__SMeshBuffer_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Vertices,"irr::core::array<irr::video::S3DVertex>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Vertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBuffer_Vertices
static int tolua_set_irr__scene__SMeshBuffer_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::array<irr::video::S3DVertex>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Vertices = *((irr::core::array<irr::video::S3DVertex>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Indices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBuffer_Indices
static int tolua_get_irr__scene__SMeshBuffer_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Indices,"irr::core::array<u16>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Indices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBuffer_Indices
static int tolua_set_irr__scene__SMeshBuffer_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::array<u16>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Indices = *((irr::core::array<u16>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBuffer_BoundingBox
static int tolua_get_irr__scene__SMeshBuffer_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->BoundingBox,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBuffer_BoundingBox
static int tolua_set_irr__scene__SMeshBuffer_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BoundingBox = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial02
static int tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial03
static int tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertices02
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getVertices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertices03
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getVertices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndices02
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getIndices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndices03
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getIndices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox01
static int tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox02
static int tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_grab00
static int tolua_IrrLua_irr_scene_SMeshBuffer_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_drop00
static int tolua_IrrLua_irr_scene_SMeshBuffer_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::SMeshBuffer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBuffer_getDebugName00
static int tolua_IrrLua_irr_scene_SMeshBuffer_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBuffer* self = (irr::scene::SMeshBuffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_delete00
static int tolua_IrrLua_irr_scene_IMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBufferCount of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_getMeshBufferCount00
static int tolua_IrrLua_irr_scene_IMesh_getMeshBufferCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBufferCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshBufferCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBufferCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBuffer of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_getMeshBuffer00
static int tolua_IrrLua_irr_scene_IMesh_getMeshBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int nr = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBuffer'",NULL);
#endif
  {
   irr::scene::IMeshBuffer* tolua_ret = (irr::scene::IMeshBuffer*)  self->getMeshBuffer(nr);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_IMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_getBoundingBox01
static int tolua_IrrLua_irr_scene_IMesh_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMesh_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IMesh_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_grab00
static int tolua_IrrLua_irr_scene_IMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_drop00
static int tolua_IrrLua_irr_scene_IMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMesh_getDebugName00
static int tolua_IrrLua_irr_scene_IMesh_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMesh* self = (irr::scene::IMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_new00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIMesh* tolua_ret = (irr::scene::IrrLuaIMesh*)  new irr::scene::IrrLuaIMesh();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaIMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIMesh* tolua_ret = (irr::scene::IrrLuaIMesh*)  new irr::scene::IrrLuaIMesh();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaIMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_delete00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBufferCount of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBufferCount00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBufferCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBufferCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshBufferCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBufferCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBuffer of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBuffer00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int nr = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBuffer'",NULL);
#endif
  {
   irr::scene::IMeshBuffer* tolua_ret = (irr::scene::IMeshBuffer*)  self->getMeshBuffer(nr);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_grab00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_drop00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaIMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIMesh_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaIMesh_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIMesh* self = (irr::scene::IrrLuaIMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_delete00
static int tolua_IrrLua_irr_scene_IMeshCache_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMesh of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_addMesh00
static int tolua_IrrLua_irr_scene_IMeshCache_addMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  const c8* filename = ((const c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMesh'",NULL);
#endif
  {
   self->addMesh(filename,mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeMesh of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_removeMesh00
static int tolua_IrrLua_irr_scene_IMeshCache_removeMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeMesh'",NULL);
#endif
  {
   self->removeMesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshCount of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshCount00
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshIndex of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshIndex00
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshIndex'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshIndex(mesh);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshByIndex of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshByIndex00
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshByIndex'",NULL);
#endif
  {
   irr::scene::IAnimatedMesh* tolua_ret = (irr::scene::IAnimatedMesh*)  self->getMeshByIndex(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshFilename of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename00
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshFilename'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getMeshFilename(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshFilename of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename01
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshFilename'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getMeshFilename(mesh);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshFilename of class  irr::scene::IMeshCache */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename02
static int tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshCache* self = (irr::scene::IMeshCache*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshFilename'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getMeshFilename(mesh);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMesh of class  irr::scene::IMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshSceneNode_setMesh00
static int tolua_IrrLua_irr_scene_IMeshSceneNode_setMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshSceneNode* self = (irr::scene::IMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMesh'",NULL);
#endif
  {
   self->setMesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setReadOnlyMaterials of class  irr::scene::IMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshSceneNode_setReadOnlyMaterials00
static int tolua_IrrLua_irr_scene_IMeshSceneNode_setReadOnlyMaterials00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshSceneNode* self = (irr::scene::IMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool readonly = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setReadOnlyMaterials'",NULL);
#endif
  {
   self->setReadOnlyMaterials(readonly);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setReadOnlyMaterials'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isReadOnlyMaterials of class  irr::scene::IMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshSceneNode_isReadOnlyMaterials00
static int tolua_IrrLua_irr_scene_IMeshSceneNode_isReadOnlyMaterials00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshSceneNode* self = (irr::scene::IMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isReadOnlyMaterials'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isReadOnlyMaterials();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isReadOnlyMaterials'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_new00
static int tolua_IrrLua_irr_scene_SMesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMesh* tolua_ret = (irr::scene::SMesh*)  new irr::scene::SMesh();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_new00_local
static int tolua_IrrLua_irr_scene_SMesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMesh* tolua_ret = (irr::scene::SMesh*)  new irr::scene::SMesh();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_delete00
static int tolua_IrrLua_irr_scene_SMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBufferCount of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount00
static int tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBufferCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshBufferCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBufferCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBuffer of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getMeshBuffer00
static int tolua_IrrLua_irr_scene_SMesh_getMeshBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int nr = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBuffer'",NULL);
#endif
  {
   irr::scene::IMeshBuffer* tolua_ret = (irr::scene::IMeshBuffer*)  self->getMeshBuffer(nr);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_SMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getBoundingBox01
static int tolua_IrrLua_irr_scene_SMesh_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SMesh_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMeshBuffer of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_addMeshBuffer00
static int tolua_IrrLua_irr_scene_SMesh_addMeshBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshBuffer* buf = ((irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMeshBuffer'",NULL);
#endif
  {
   self->addMeshBuffer(buf);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMeshBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_setMaterialFlag00
static int tolua_IrrLua_irr_scene_SMesh_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MeshBuffers of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMesh_MeshBuffers
static int tolua_get_irr__scene__SMesh_MeshBuffers(lua_State* tolua_S)
{
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MeshBuffers'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->MeshBuffers,"irr::core::array<irr::scene::IMeshBuffer*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MeshBuffers of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMesh_MeshBuffers
static int tolua_set_irr__scene__SMesh_MeshBuffers(lua_State* tolua_S)
{
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MeshBuffers'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::array<irr::scene::IMeshBuffer*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MeshBuffers = *((irr::core::array<irr::scene::IMeshBuffer*>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMesh_BoundingBox
static int tolua_get_irr__scene__SMesh_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->BoundingBox,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMesh_BoundingBox
static int tolua_set_irr__scene__SMesh_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BoundingBox = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBufferCount of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount01
static int tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBufferCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMeshBufferCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBuffer of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getMeshBuffer01
static int tolua_IrrLua_irr_scene_SMesh_getMeshBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int nr = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBuffer'",NULL);
#endif
  {
   irr::scene::IMeshBuffer* tolua_ret = (irr::scene::IMeshBuffer*)  self->getMeshBuffer(nr);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshBuffer");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_getMeshBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getBoundingBox02
static int tolua_IrrLua_irr_scene_SMesh_getBoundingBox02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_getBoundingBox01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getBoundingBox03
static int tolua_IrrLua_irr_scene_SMesh_getBoundingBox03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_getBoundingBox02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_setMaterialFlag01
static int tolua_IrrLua_irr_scene_SMesh_setMaterialFlag01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMesh_setMaterialFlag00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_grab00
static int tolua_IrrLua_irr_scene_SMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_drop00
static int tolua_IrrLua_irr_scene_SMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::SMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMesh_getDebugName00
static int tolua_IrrLua_irr_scene_SMesh_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMesh* self = (irr::scene::SMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_delete00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_getFrameCount00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_getMesh00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_getMeshType00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_grab00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_drop00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMesh_getDebugName00
static int tolua_IrrLua_irr_scene_IAnimatedMesh_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMesh* self = (irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIAnimatedMesh* tolua_ret = (irr::scene::IrrLuaIAnimatedMesh*)  new irr::scene::IrrLuaIAnimatedMesh();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaIAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIAnimatedMesh* tolua_ret = (irr::scene::IrrLuaIAnimatedMesh*)  new irr::scene::IrrLuaIAnimatedMesh();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaIAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_delete00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getFrameCount00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMesh00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMeshType00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_grab00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_drop00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaIAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMesh* self = (irr::scene::IrrLuaIAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameLoop of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::EMD2_ANIMATION_TYPE l = ((irr::scene::EMD2_ANIMATION_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  signed int outBegin = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outEnd = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int outFPS = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameLoop'",NULL);
#endif
  {
   self->getFrameLoop(l,outBegin,outEnd,outFPS);
   tolua_pushnumber(tolua_S,(lua_Number)outBegin);
   tolua_pushnumber(tolua_S,(lua_Number)outEnd);
   tolua_pushnumber(tolua_S,(lua_Number)outFPS);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameLoop of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop01
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
  signed int outBegin = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int outEnd = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int outFps = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameLoop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getFrameLoop(name,outBegin,outEnd,outFps);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)outBegin);
   tolua_pushnumber(tolua_S,(lua_Number)outEnd);
   tolua_pushnumber(tolua_S,(lua_Number)outFps);
  }
 }
 return 4;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationCount of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAnimationCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationName of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
  signed int nr = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getAnimationName(nr);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMesh00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMeshType00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_grab00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_drop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IAnimatedMeshMD2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getDebugName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMD2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMD2* self = (irr::scene::IAnimatedMeshMD2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMatrixOfJoint of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMatrixOfJoint00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMatrixOfJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
  signed int jointNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMatrixOfJoint'",NULL);
#endif
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  self->getMatrixOfJoint(jointNumber,frame);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMatrixOfJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointCount of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointName of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
  signed int number = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getJointName(number);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointNumber of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointNumber00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointNumber'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointNumber(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getFrameCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMesh00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMeshType00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_grab00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_drop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IAnimatedMeshMS3D */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getDebugName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshMS3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshMS3D* self = (irr::scene::IAnimatedMeshMS3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMatrixOfJoint of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getMatrixOfJoint00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getMatrixOfJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int jointNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMatrixOfJoint'",NULL);
#endif
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  self->getMatrixOfJoint(jointNumber,frame);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMatrixOfJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointCount of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointName of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int number = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getJointName(number);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointNumber of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointNumber00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointNumber'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointNumber(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDrawableSkeleton of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getDrawableSkeleton00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getDrawableSkeleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDrawableSkeleton'",NULL);
#endif
  {
   irr::core::array<irr::core::vector3d<f32> >* tolua_ret = (irr::core::array<irr::core::vector3d<f32> >*)  self->getDrawableSkeleton(frame);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::array<irr::core::vector3d<f32> >");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDrawableSkeleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationCount of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getAnimationCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationName of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getAnimationName(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentAnimation of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentAnimation'",NULL);
#endif
  {
   self->setCurrentAnimation(idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentAnimation of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation01
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentAnimation'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setCurrentAnimation(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getFrameCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getMesh00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getMeshType00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_grab00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_drop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IAnimatedMeshX */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshX_getDebugName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshX_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshX* self = (irr::scene::IAnimatedMeshX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMatrixOfJoint of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJoint00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
  signed int jointNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMatrixOfJoint'",NULL);
#endif
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  self->getMatrixOfJoint(jointNumber,frame);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMatrixOfJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMatrixOfJointUnanimated of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJointUnanimated00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJointUnanimated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
  signed int jointNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMatrixOfJointUnanimated'",NULL);
#endif
  {
   irr::core::matrix4* tolua_ret = (irr::core::matrix4*)  self->getMatrixOfJointUnanimated(jointNumber);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMatrixOfJointUnanimated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddMatrixToJoint of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_AddMatrixToJoint00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_AddMatrixToJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
  signed int jointNumber = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::core::matrix4* matrix = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddMatrixToJoint'",NULL);
#endif
  {
   self->AddMatrixToJoint(jointNumber,matrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddMatrixToJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointCount of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointName of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
  signed int number = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getJointName(number);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getJointNumber of class  irr::scene::IAnimatedMeshB3d */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointNumber00
static int tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshB3d",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshB3d* self = (irr::scene::IAnimatedMeshB3d*)  tolua_tousertype(tolua_S,1,0);
  const c8* name = ((const c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getJointNumber'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getJointNumber(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getJointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_delete00
static int tolua_IrrLua_irr_scene_IMeshManipulator_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: flipSurfaces of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_flipSurfaces00
static int tolua_IrrLua_irr_scene_IMeshManipulator_flipSurfaces00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'flipSurfaces'",NULL);
#endif
  {
   self->flipSurfaces(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'flipSurfaces'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexColorAlpha of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColorAlpha00
static int tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColorAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  signed int alpha = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexColorAlpha'",NULL);
#endif
  {
   self->setVertexColorAlpha(mesh,alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVertexColorAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexColors of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColors00
static int tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexColors'",NULL);
#endif
  {
   self->setVertexColors(mesh,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVertexColors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateNormals of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals00
static int tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateNormals'",NULL);
#endif
  {
   self->recalculateNormals(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateNormals'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateNormals of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals01
static int tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  bool smooth = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateNormals'",NULL);
#endif
  {
   self->recalculateNormals(mesh,smooth);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateNormals of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals02
static int tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshBuffer* buffer = ((irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateNormals'",NULL);
#endif
  {
   self->recalculateNormals(buffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateNormals of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals03
static int tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshBuffer* buffer = ((irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,2,0));
  bool smooth = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateNormals'",NULL);
#endif
  {
   self->recalculateNormals(buffer,smooth);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: scaleMesh of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_scaleMesh00
static int tolua_IrrLua_irr_scene_IMeshManipulator_scaleMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scaleMesh'",NULL);
#endif
  {
   self->scaleMesh(mesh,*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scaleMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createMeshCopy of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_createMeshCopy00
static int tolua_IrrLua_irr_scene_IMeshManipulator_createMeshCopy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createMeshCopy'",NULL);
#endif
  {
   irr::scene::SMesh* tolua_ret = (irr::scene::SMesh*)  self->createMeshCopy(mesh);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMeshCopy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makePlanarTextureMapping of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_makePlanarTextureMapping00
static int tolua_IrrLua_irr_scene_IMeshManipulator_makePlanarTextureMapping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
   float resolution = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makePlanarTextureMapping'",NULL);
#endif
  {
   self->makePlanarTextureMapping(mesh,resolution);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makePlanarTextureMapping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createMeshWithTangents of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_createMeshWithTangents00
static int tolua_IrrLua_irr_scene_IMeshManipulator_createMeshWithTangents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createMeshWithTangents'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->createMeshWithTangents(mesh);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMeshWithTangents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_IMeshManipulator_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshBuffer* buffer = ((irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox(buffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createMeshUniquePrimitives of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_createMeshUniquePrimitives00
static int tolua_IrrLua_irr_scene_IMeshManipulator_createMeshUniquePrimitives00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createMeshUniquePrimitives'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->createMeshUniquePrimitives(mesh);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMeshUniquePrimitives'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPolyCount of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount00
static int tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPolyCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPolyCount(mesh);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPolyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPolyCount of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount01
static int tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPolyCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPolyCount(mesh);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_grab00
static int tolua_IrrLua_irr_scene_IMeshManipulator_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_drop00
static int tolua_IrrLua_irr_scene_IMeshManipulator_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IMeshManipulator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IMeshManipulator_getDebugName00
static int tolua_IrrLua_irr_scene_IMeshManipulator_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IMeshManipulator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IMeshManipulator* self = (irr::scene::IMeshManipulator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_new00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SAnimatedMesh* tolua_ret = (irr::scene::SAnimatedMesh*)  new irr::scene::SAnimatedMesh();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_new00_local
static int tolua_IrrLua_irr_scene_SAnimatedMesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SAnimatedMesh* tolua_ret = (irr::scene::SAnimatedMesh*)  new irr::scene::SAnimatedMesh();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_delete00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMesh of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_addMesh00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_addMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMesh'",NULL);
#endif
  {
   self->addMesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Box of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SAnimatedMesh_Box
static int tolua_get_irr__scene__SAnimatedMesh_Box(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Box'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Box,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Box of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SAnimatedMesh_Box
static int tolua_set_irr__scene__SAnimatedMesh_Box(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Box'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Box = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Meshes of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SAnimatedMesh_Meshes
static int tolua_get_irr__scene__SAnimatedMesh_Meshes(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Meshes'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Meshes,"core::array<irr::scene::IMesh*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Meshes of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SAnimatedMesh_Meshes
static int tolua_set_irr__scene__SAnimatedMesh_Meshes(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Meshes'",NULL);
  if (!tolua_isusertype(tolua_S,2,"core::array<irr::scene::IMesh*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Meshes = *((core::array<irr::scene::IMesh*>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SAnimatedMesh_Type
static int tolua_get_irr__scene__SAnimatedMesh_Type(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SAnimatedMesh_Type
static int tolua_set_irr__scene__SAnimatedMesh_Type(lua_State* tolua_S)
{
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((irr::scene::E_ANIMATED_MESH_TYPE) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameCount of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount01
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh01
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int detailLevel = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int startFrameLoop = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int endFrameLoop = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh(frame,detailLevel,startFrameLoop,endFrameLoop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox01
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshType of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType01
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshType'",NULL);
#endif
  {
   irr::scene::E_ANIMATED_MESH_TYPE tolua_ret = (irr::scene::E_ANIMATED_MESH_TYPE)  self->getMeshType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_grab00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_drop00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::SAnimatedMesh */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SAnimatedMesh_getDebugName00
static int tolua_IrrLua_irr_scene_SAnimatedMesh_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SAnimatedMesh* self = (irr::scene::SAnimatedMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBufferLightMap* tolua_ret = (irr::scene::SMeshBufferLightMap*)  new irr::scene::SMeshBufferLightMap();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SMeshBufferLightMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00_local
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBufferLightMap* tolua_ret = (irr::scene::SMeshBufferLightMap*)  new irr::scene::SMeshBufferLightMap();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SMeshBufferLightMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_delete00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Material of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferLightMap_Material
static int tolua_get_irr__scene__SMeshBufferLightMap_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Material,"irr::video::SMaterial");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Material of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferLightMap_Material
static int tolua_set_irr__scene__SMeshBufferLightMap_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Material = *((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Vertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferLightMap_Vertices
static int tolua_get_irr__scene__SMeshBufferLightMap_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Vertices,"core::array<irr::video::S3DVertex2TCoords>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Vertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferLightMap_Vertices
static int tolua_set_irr__scene__SMeshBufferLightMap_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"core::array<irr::video::S3DVertex2TCoords>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Vertices = *((core::array<irr::video::S3DVertex2TCoords>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Indices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferLightMap_Indices
static int tolua_get_irr__scene__SMeshBufferLightMap_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Indices,"core::array<u16>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Indices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferLightMap_Indices
static int tolua_set_irr__scene__SMeshBufferLightMap_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"core::array<u16>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Indices = *((core::array<u16>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferLightMap_BoundingBox
static int tolua_get_irr__scene__SMeshBufferLightMap_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->BoundingBox,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferLightMap_BoundingBox
static int tolua_set_irr__scene__SMeshBufferLightMap_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BoundingBox = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial02
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial03
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices02
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices03
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices02
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices03
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount01
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox02
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox03
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_grab00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_drop00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::SMeshBufferLightMap */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferLightMap_getDebugName00
static int tolua_IrrLua_irr_scene_SMeshBufferLightMap_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferLightMap* self = (irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_new00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBufferTangents* tolua_ret = (irr::scene::SMeshBufferTangents*)  new irr::scene::SMeshBufferTangents();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SMeshBufferTangents");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_new00_local
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::SMeshBufferTangents* tolua_ret = (irr::scene::SMeshBufferTangents*)  new irr::scene::SMeshBufferTangents();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::SMeshBufferTangents");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_delete00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: recalculateBoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_recalculateBoundingBox00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_recalculateBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'recalculateBoundingBox'",NULL);
#endif
  {
   self->recalculateBoundingBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'recalculateBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Material of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferTangents_Material
static int tolua_get_irr__scene__SMeshBufferTangents_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Material,"irr::video::SMaterial");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Material of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferTangents_Material
static int tolua_set_irr__scene__SMeshBufferTangents_Material(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Material'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Material = *((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Vertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferTangents_Vertices
static int tolua_get_irr__scene__SMeshBufferTangents_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Vertices,"irr::core::array<irr::video::S3DVertexTangents>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Vertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferTangents_Vertices
static int tolua_set_irr__scene__SMeshBufferTangents_Vertices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vertices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::array<irr::video::S3DVertexTangents>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Vertices = *((irr::core::array<irr::video::S3DVertexTangents>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Indices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferTangents_Indices
static int tolua_get_irr__scene__SMeshBufferTangents_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->Indices,"irr::core::array<u16>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Indices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferTangents_Indices
static int tolua_set_irr__scene__SMeshBufferTangents_Indices(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Indices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::array<u16>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Indices = *((irr::core::array<u16>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__SMeshBufferTangents_BoundingBox
static int tolua_get_irr__scene__SMeshBufferTangents_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->BoundingBox,"irr::core::aabbox3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__SMeshBufferTangents_BoundingBox
static int tolua_set_irr__scene__SMeshBufferTangents_BoundingBox(lua_State* tolua_S)
{
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundingBox'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BoundingBox = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial02
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial03
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexType of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexType'",NULL);
#endif
  {
   irr::video::E_VERTEX_TYPE tolua_ret = (irr::video::E_VERTEX_TYPE)  self->getVertexType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices02
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices03
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getVertices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexCount of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices02
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndices of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices03
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndices'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getIndices();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount01
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox02
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox03
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_grab00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_drop00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::SMeshBufferTangents */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_SMeshBufferTangents_getDebugName00
static int tolua_IrrLua_irr_scene_SMeshBufferTangents_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::SMeshBufferTangents",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::SMeshBufferTangents* self = (irr::scene::SMeshBufferTangents*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_delete00
static int tolua_IrrLua_irr_scene_ISceneManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getMesh00
static int tolua_IrrLua_irr_scene_ISceneManager_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IAnimatedMesh* tolua_ret = (irr::scene::IAnimatedMesh*)  self->getMesh(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshCache of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getMeshCache00
static int tolua_IrrLua_irr_scene_ISceneManager_getMeshCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshCache'",NULL);
#endif
  {
   irr::scene::IMeshCache* tolua_ret = (irr::scene::IMeshCache*)  self->getMeshCache();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoDriver of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getVideoDriver00
static int tolua_IrrLua_irr_scene_ISceneManager_getVideoDriver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoDriver'",NULL);
#endif
  {
   irr::video::IVideoDriver* tolua_ret = (irr::video::IVideoDriver*)  self->getVideoDriver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IVideoDriver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoDriver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addCubeSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addCubeSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addCubeSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
   float size = ((  float)  tolua_tonumber(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addCubeSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addCubeSceneNode(size,parent,id,*position,*rotation,*scale);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addCubeSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSphereSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addSphereSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addSphereSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
   float radius = ((  float)  tolua_tonumber(tolua_S,2,0));
  signed int polyCount = (( signed int)  tolua_tonumber(tolua_S,3,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSphereSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addSphereSceneNode(radius,polyCount,parent,id,*position,*rotation,*scale);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSphereSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimatedMeshSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addAnimatedMeshSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addAnimatedMeshSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
  bool alsoAddIfMeshPointerZero = ((bool)  tolua_toboolean(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimatedMeshSceneNode'",NULL);
#endif
  {
   irr::scene::IAnimatedMeshSceneNode* tolua_ret = (irr::scene::IAnimatedMeshSceneNode*)  self->addAnimatedMeshSceneNode(mesh,parent,id,*position,*rotation,*scale,alsoAddIfMeshPointerZero);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IAnimatedMeshSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimatedMeshSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMeshSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addMeshSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addMeshSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
  bool alsoAddIfMeshPointerZero = ((bool)  tolua_toboolean(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMeshSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addMeshSceneNode(mesh,parent,id,*position,*rotation,*scale,alsoAddIfMeshPointerZero);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMeshSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWaterSurfaceSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addWaterSurfaceSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addWaterSurfaceSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,9,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,10,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
   float waveHeight = ((  float)  tolua_tonumber(tolua_S,3,0));
   float waveSpeed = ((  float)  tolua_tonumber(tolua_S,4,0));
   float waveLenght = ((  float)  tolua_tonumber(tolua_S,5,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,6,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,7,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,8,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,9,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,10,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWaterSurfaceSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addWaterSurfaceSceneNode(mesh,waveHeight,waveSpeed,waveLenght,parent,id,*position,*rotation,*scale);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWaterSurfaceSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addOctTreeSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int minimalPolysPerNode = (( signed int)  tolua_tonumber(tolua_S,5,0));
  bool AddFlags = ((bool)  tolua_toboolean(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addOctTreeSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addOctTreeSceneNode(mesh,parent,id,minimalPolysPerNode,AddFlags);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addOctTreeSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addOctTreeSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode01
static int tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int minimalPolysPerNode = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addOctTreeSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addOctTreeSceneNode(mesh,parent,id,minimalPolysPerNode);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addCameraSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* lookat = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addCameraSceneNode'",NULL);
#endif
  {
   irr::scene::ICameraSceneNode* tolua_ret = (irr::scene::ICameraSceneNode*)  self->addCameraSceneNode(parent,*position,*lookat,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ICameraSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addCameraSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addCameraSceneNodeMaya of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeMaya00
static int tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeMaya00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
   float rotateSpeed = ((  float)  tolua_tonumber(tolua_S,3,0));
   float zoomSpeed = ((  float)  tolua_tonumber(tolua_S,4,0));
   float translationSpeed = ((  float)  tolua_tonumber(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addCameraSceneNodeMaya'",NULL);
#endif
  {
   irr::scene::ICameraSceneNode* tolua_ret = (irr::scene::ICameraSceneNode*)  self->addCameraSceneNodeMaya(parent,rotateSpeed,zoomSpeed,translationSpeed,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ICameraSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addCameraSceneNodeMaya'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addCameraSceneNodeFPS of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeFPS00
static int tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeFPS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::SKeyMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
   float rotateSpeed = ((  float)  tolua_tonumber(tolua_S,3,0));
   float moveSpeed = ((  float)  tolua_tonumber(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::SKeyMap* keyMapArray = ((irr::SKeyMap*)  tolua_tousertype(tolua_S,6,0));
  signed int keyMapSize = (( signed int)  tolua_tonumber(tolua_S,7,0));
  bool noVerticalMovement = ((bool)  tolua_toboolean(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addCameraSceneNodeFPS'",NULL);
#endif
  {
   irr::scene::ICameraSceneNode* tolua_ret = (irr::scene::ICameraSceneNode*)  self->addCameraSceneNodeFPS(parent,rotateSpeed,moveSpeed,id,keyMapArray,keyMapSize,noVerticalMovement);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ICameraSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addCameraSceneNodeFPS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addLightSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addLightSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addLightSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColorf color = *((irr::video::SColorf*)  tolua_tousertype(tolua_S,4,0));
   float radius = ((  float)  tolua_tonumber(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addLightSceneNode'",NULL);
#endif
  {
   irr::scene::ILightSceneNode* tolua_ret = (irr::scene::ILightSceneNode*)  self->addLightSceneNode(parent,*position,color,radius,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ILightSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addLightSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addBillboardSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addBillboardSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addBillboardSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::core::dimension2d<f32>* size = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addBillboardSceneNode'",NULL);
#endif
  {
   irr::scene::IBillboardSceneNode* tolua_ret = (irr::scene::IBillboardSceneNode*)  self->addBillboardSceneNode(parent,*size,*position,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IBillboardSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addBillboardSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSkyBoxSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addSkyBoxSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addSkyBoxSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* top = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::video::ITexture* bottom = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
  irr::video::ITexture* left = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,4,0));
  irr::video::ITexture* right = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,5,0));
  irr::video::ITexture* front = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,6,0));
  irr::video::ITexture* back = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,7,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,8,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,9,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSkyBoxSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addSkyBoxSceneNode(top,bottom,left,right,front,back,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSkyBoxSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSkyDomeSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addSkyDomeSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addSkyDomeSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  unsigned int horiRes = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int vertRes = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
   double texturePercentage = ((  double)  tolua_tonumber(tolua_S,5,0));
   double spherePercentage = ((  double)  tolua_tonumber(tolua_S,6,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,7,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSkyDomeSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addSkyDomeSceneNode(texture,horiRes,vertRes,texturePercentage,spherePercentage,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSkyDomeSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addParticleSystemSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addParticleSystemSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addParticleSystemSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  bool withDefaultEmitter = ((bool)  tolua_toboolean(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addParticleSystemSceneNode'",NULL);
#endif
  {
   irr::scene::IParticleSystemSceneNode* tolua_ret = (irr::scene::IParticleSystemSceneNode*)  self->addParticleSystemSceneNode(withDefaultEmitter,parent,id,*position,*rotation,*scale);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IParticleSystemSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addParticleSystemSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTerrainSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addTerrainSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addTerrainSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* heightMapFileName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,7,0));
  irr::video::SColor vertexColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,8,0));
  signed int maxLOD = (( signed int)  tolua_tonumber(tolua_S,9,0));
  irr::scene::E_TERRAIN_PATCH_SIZE patchSize = ((irr::scene::E_TERRAIN_PATCH_SIZE) (int)  tolua_tonumber(tolua_S,10,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTerrainSceneNode'",NULL);
#endif
  {
   irr::scene::ITerrainSceneNode* tolua_ret = (irr::scene::ITerrainSceneNode*)  self->addTerrainSceneNode(heightMapFileName,parent,id,*position,*rotation,*scale,vertexColor,maxLOD,patchSize);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITerrainSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTerrainSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEmptySceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addEmptySceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addEmptySceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEmptySceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addEmptySceneNode(parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEmptySceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDummyTransformationSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addDummyTransformationSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addDummyTransformationSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDummyTransformationSceneNode'",NULL);
#endif
  {
   irr::scene::IDummyTransformationSceneNode* tolua_ret = (irr::scene::IDummyTransformationSceneNode*)  self->addDummyTransformationSceneNode(parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IDummyTransformationSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDummyTransformationSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTextSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addTextSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_addTextSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* position = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTextSceneNode'",NULL);
#endif
  {
   irr::scene::ITextSceneNode* tolua_ret = (irr::scene::ITextSceneNode*)  self->addTextSceneNode(font,text,color,parent,*position,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITextSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTextSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addHillPlaneMesh of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addHillPlaneMesh00
static int tolua_IrrLua_irr_scene_ISceneManager_addHillPlaneMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::core::dimension2d<f32>* tileSize = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::dimension2d<s32>* tileCount = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,4,0));
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,5,0));
   float hillHeight = ((  float)  tolua_tonumber(tolua_S,6,0));
  irr::core::dimension2d<f32>* countHills = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,7,0));
  irr::core::dimension2d<f32>* textureRepeatCount = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addHillPlaneMesh'",NULL);
#endif
  {
   irr::scene::IAnimatedMesh* tolua_ret = (irr::scene::IAnimatedMesh*)  self->addHillPlaneMesh(name,*tileSize,*tileCount,material,hillHeight,*countHills,*textureRepeatCount);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addHillPlaneMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTerrainMesh of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addTerrainMesh00
static int tolua_IrrLua_irr_scene_ISceneManager_addTerrainMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* meshname = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::IImage* texture = ((irr::video::IImage*)  tolua_tousertype(tolua_S,3,0));
  irr::video::IImage* heightmap = ((irr::video::IImage*)  tolua_tousertype(tolua_S,4,0));
  irr::core::dimension2d<f32>* stretchSize = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,5,0));
   float maxHeight = ((  float)  tolua_tonumber(tolua_S,6,0));
  irr::core::dimension2d<s32>* defaultVertexBlockSize = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTerrainMesh'",NULL);
#endif
  {
   irr::scene::IAnimatedMesh* tolua_ret = (irr::scene::IAnimatedMesh*)  self->addTerrainMesh(meshname,texture,heightmap,*stretchSize,maxHeight,*defaultVertexBlockSize);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IAnimatedMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTerrainMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRootSceneNode of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getRootSceneNode00
static int tolua_IrrLua_irr_scene_ISceneManager_getRootSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRootSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getRootSceneNode();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRootSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromId of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromId00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::scene::ISceneNode* start = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromId'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromId(id,start);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromName of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromName00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* start = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromName'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromName(name,start);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFromName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActiveCamera of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getActiveCamera00
static int tolua_IrrLua_irr_scene_ISceneManager_getActiveCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActiveCamera'",NULL);
#endif
  {
   irr::scene::ICameraSceneNode* tolua_ret = (irr::scene::ICameraSceneNode*)  self->getActiveCamera();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ICameraSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActiveCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActiveCamera of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_setActiveCamera00
static int tolua_IrrLua_irr_scene_ISceneManager_setActiveCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ICameraSceneNode* camera = ((irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActiveCamera'",NULL);
#endif
  {
   self->setActiveCamera(camera);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActiveCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShadowColor of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_setShadowColor00
static int tolua_IrrLua_irr_scene_ISceneManager_setShadowColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShadowColor'",NULL);
#endif
  {
   self->setShadowColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShadowColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShadowColor of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getShadowColor00
static int tolua_IrrLua_irr_scene_ISceneManager_getShadowColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShadowColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getShadowColor();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShadowColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerNodeForRendering of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_registerNodeForRendering00
static int tolua_IrrLua_irr_scene_ISceneManager_registerNodeForRendering00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::E_SCENE_NODE_RENDER_PASS time = ((irr::scene::E_SCENE_NODE_RENDER_PASS) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerNodeForRendering'",NULL);
#endif
  {
   self->registerNodeForRendering(node,time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerNodeForRendering'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawAll of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_drawAll00
static int tolua_IrrLua_irr_scene_ISceneManager_drawAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawAll'",NULL);
#endif
  {
   self->drawAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createRotationAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createRotationAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createRotationAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotationPerSecond = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createRotationAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createRotationAnimator(*rotationPerSecond);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createRotationAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFlyCircleAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createFlyCircleAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createFlyCircleAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* center = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
   float radius = ((  float)  tolua_tonumber(tolua_S,3,0));
   float speed = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFlyCircleAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createFlyCircleAnimator(*center,radius,speed);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFlyCircleAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFlyStraightAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createFlyStraightAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createFlyStraightAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* startPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* endPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  unsigned int timeForWay = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFlyStraightAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createFlyStraightAnimator(*startPoint,*endPoint,timeForWay,loop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFlyStraightAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createTextureAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createTextureAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createTextureAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<irr::video::PITexture>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::array<irr::video::PITexture>* textures = ((irr::core::array<irr::video::PITexture>*)  tolua_tousertype(tolua_S,2,0));
  signed int timePerFrame = (( signed int)  tolua_tonumber(tolua_S,3,0));
  bool loop = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createTextureAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createTextureAnimator(*textures,timePerFrame,loop);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createTextureAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createDeleteAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createDeleteAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createDeleteAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createDeleteAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createDeleteAnimator(timeMs);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDeleteAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createCollisionResponseAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createCollisionResponseAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createCollisionResponseAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* world = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* sceneNode = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* ellipsoidRadius = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::vector3d<f32>* gravityPerSecond = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::vector3d<f32>* ellipsoidTranslation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,6,0));
   float slidingValue = ((  float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createCollisionResponseAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimatorCollisionResponse* tolua_ret = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  self->createCollisionResponseAnimator(world,sceneNode,*ellipsoidRadius,*gravityPerSecond,*ellipsoidTranslation,slidingValue);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimatorCollisionResponse");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createCollisionResponseAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFollowSplineAnimator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createFollowSplineAnimator00
static int tolua_IrrLua_irr_scene_ISceneManager_createFollowSplineAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::array<irr::core::vector3d<f32> >",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  signed int startTime = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::core::array<irr::core::vector3d<f32> >* points = ((irr::core::array<irr::core::vector3d<f32> >*)  tolua_tousertype(tolua_S,3,0));
   float speed = ((  float)  tolua_tonumber(tolua_S,4,0));
   float tightness = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFollowSplineAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createFollowSplineAnimator(startTime,*points,speed,tightness);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFollowSplineAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createTriangleSelector of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->createTriangleSelector(mesh,node);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createTriangleSelectorFromBoundingBox of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelectorFromBoundingBox00
static int tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelectorFromBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createTriangleSelectorFromBoundingBox'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->createTriangleSelectorFromBoundingBox(node);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createTriangleSelectorFromBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createOctTreeTriangleSelector of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createOctTreeTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneManager_createOctTreeTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMesh* mesh = ((irr::scene::IMesh*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
  signed int minimalPolysPerNode = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createOctTreeTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->createOctTreeTriangleSelector(mesh,node,minimalPolysPerNode);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createOctTreeTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createMetaTriangleSelector of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createMetaTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneManager_createMetaTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createMetaTriangleSelector'",NULL);
#endif
  {
   irr::scene::IMetaTriangleSelector* tolua_ret = (irr::scene::IMetaTriangleSelector*)  self->createMetaTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMetaTriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createMetaTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createTerrainTriangleSelector of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createTerrainTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneManager_createTerrainTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITerrainSceneNode* node = ((irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,2,0));
  signed int LOD = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createTerrainTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->createTerrainTriangleSelector(node,LOD);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createTerrainTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addExternalMeshLoader of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addExternalMeshLoader00
static int tolua_IrrLua_irr_scene_ISceneManager_addExternalMeshLoader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshLoader* externalLoader = ((irr::scene::IMeshLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addExternalMeshLoader'",NULL);
#endif
  {
   self->addExternalMeshLoader(externalLoader);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExternalMeshLoader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneCollisionManager of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneCollisionManager00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneCollisionManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneCollisionManager'",NULL);
#endif
  {
   irr::scene::ISceneCollisionManager* tolua_ret = (irr::scene::ISceneCollisionManager*)  self->getSceneCollisionManager();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneCollisionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneCollisionManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshManipulator of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getMeshManipulator00
static int tolua_IrrLua_irr_scene_ISceneManager_getMeshManipulator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshManipulator'",NULL);
#endif
  {
   irr::scene::IMeshManipulator* tolua_ret = (irr::scene::IMeshManipulator*)  self->getMeshManipulator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMeshManipulator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshManipulator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addToDeletionQueue of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_addToDeletionQueue00
static int tolua_IrrLua_irr_scene_ISceneManager_addToDeletionQueue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addToDeletionQueue'",NULL);
#endif
  {
   self->addToDeletionQueue(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addToDeletionQueue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: postEventFromUser of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_postEventFromUser00
static int tolua_IrrLua_irr_scene_ISceneManager_postEventFromUser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'postEventFromUser'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->postEventFromUser(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'postEventFromUser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_clear00
static int tolua_IrrLua_irr_scene_ISceneManager_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParameters of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getParameters00
static int tolua_IrrLua_irr_scene_ISceneManager_getParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParameters'",NULL);
#endif
  {
   irr::io::IAttributes* tolua_ret = (irr::io::IAttributes*)  self->getParameters();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IAttributes");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeRenderPass of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeRenderPass00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeRenderPass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeRenderPass'",NULL);
#endif
  {
   irr::scene::E_SCENE_NODE_RENDER_PASS tolua_ret = (irr::scene::E_SCENE_NODE_RENDER_PASS)  self->getSceneNodeRenderPass();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeRenderPass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultSceneNodeFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultSceneNodeFactory'",NULL);
#endif
  {
   irr::scene::ISceneNodeFactory* tolua_ret = (irr::scene::ISceneNodeFactory*)  self->getDefaultSceneNodeFactory();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultSceneNodeFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerSceneNodeFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeFactory* factoryToAdd = ((irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerSceneNodeFactory'",NULL);
#endif
  {
   self->registerSceneNodeFactory(factoryToAdd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerSceneNodeFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRegisteredSceneNodeFactoryCount of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeFactoryCount00
static int tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeFactoryCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRegisteredSceneNodeFactoryCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getRegisteredSceneNodeFactoryCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRegisteredSceneNodeFactoryCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFactory'",NULL);
#endif
  {
   irr::scene::ISceneNodeFactory* tolua_ret = (irr::scene::ISceneNodeFactory*)  self->getSceneNodeFactory(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultSceneNodeAnimatorFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeAnimatorFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeAnimatorFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultSceneNodeAnimatorFactory'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimatorFactory* tolua_ret = (irr::scene::ISceneNodeAnimatorFactory*)  self->getDefaultSceneNodeAnimatorFactory();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimatorFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultSceneNodeAnimatorFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerSceneNodeAnimatorFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeAnimatorFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeAnimatorFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimatorFactory* factoryToAdd = ((irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerSceneNodeAnimatorFactory'",NULL);
#endif
  {
   self->registerSceneNodeAnimatorFactory(factoryToAdd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerSceneNodeAnimatorFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRegisteredSceneNodeAnimatorFactoryCount of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeAnimatorFactoryCount00
static int tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeAnimatorFactoryCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRegisteredSceneNodeAnimatorFactoryCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getRegisteredSceneNodeAnimatorFactoryCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRegisteredSceneNodeAnimatorFactoryCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeAnimatorFactory of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeAnimatorFactory00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeAnimatorFactory00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeAnimatorFactory'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimatorFactory* tolua_ret = (irr::scene::ISceneNodeAnimatorFactory*)  self->getSceneNodeAnimatorFactory(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimatorFactory");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeAnimatorFactory'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeTypeName of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeTypeName00
static int tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeTypeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ESCENE_NODE_TYPE type = ((irr::scene::ESCENE_NODE_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeTypeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getSceneNodeTypeName(type);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeTypeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createNewSceneManager of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_createNewSceneManager00
static int tolua_IrrLua_irr_scene_ISceneManager_createNewSceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createNewSceneManager'",NULL);
#endif
  {
   irr::scene::ISceneManager* tolua_ret = (irr::scene::ISceneManager*)  self->createNewSceneManager();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createNewSceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: saveScene of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_saveScene00
static int tolua_IrrLua_irr_scene_ISceneManager_saveScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneUserDataSerializer* userDataSerializer = ((irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'saveScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->saveScene(filename,userDataSerializer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saveScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: saveScene of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_saveScene01
static int tolua_IrrLua_irr_scene_ISceneManager_saveScene01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IWriteFile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IWriteFile* file = ((irr::io::IWriteFile*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneUserDataSerializer* userDataSerializer = ((irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'saveScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->saveScene(file,userDataSerializer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneManager_saveScene00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadScene of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_loadScene00
static int tolua_IrrLua_irr_scene_ISceneManager_loadScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneUserDataSerializer* userDataSerializer = ((irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->loadScene(filename,userDataSerializer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadScene of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_loadScene01
static int tolua_IrrLua_irr_scene_ISceneManager_loadScene01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IReadFile* file = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneUserDataSerializer* userDataSerializer = ((irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->loadScene(file,userDataSerializer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneManager_loadScene00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_grab00
static int tolua_IrrLua_irr_scene_ISceneManager_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_drop00
static int tolua_IrrLua_irr_scene_ISceneManager_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ISceneManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneManager_getDebugName00
static int tolua_IrrLua_irr_scene_ISceneManager_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* self = (irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneManager* mgr = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  {
   irr::scene::IrrLuaISceneNode* tolua_ret = (irr::scene::IrrLuaISceneNode*)  new irr::scene::IrrLuaISceneNode(parent,mgr,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneManager* mgr = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  {
   irr::scene::IrrLuaISceneNode* tolua_ret = (irr::scene::IrrLuaISceneNode*)  new irr::scene::IrrLuaISceneNode(parent,mgr,id);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_delete00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_render00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getName00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setName00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getID00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setID00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_addChild00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_remove00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getScale00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setScale00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setParent00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_getParent00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_grab00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_drop00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Name of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Name00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Name'",NULL);
#endif
  {
   irr::core::stringc tolua_ret = (irr::core::stringc)  self->get_Name();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::stringc(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::stringc));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Name of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Name00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::stringc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::stringc n = *((irr::core::stringc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Name'",NULL);
#endif
  {
   self->set_Name(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AbsoluteTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->get_AbsoluteTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AbsoluteTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4 m = *((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AbsoluteTransformation'",NULL);
#endif
  {
   self->set_AbsoluteTransformation(m);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeTranslation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeTranslation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeTranslation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeTranslation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeTranslation'",NULL);
#endif
  {
   self->set_RelativeTranslation(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeRotation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeRotation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeRotation'",NULL);
#endif
  {
   self->set_RelativeRotation(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeScale00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeScale00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeScale'",NULL);
#endif
  {
   self->set_RelativeScale(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Parent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Parent00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Parent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->get_Parent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Parent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Parent00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* p = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Parent'",NULL);
#endif
  {
   self->set_Parent(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Children of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Children00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Children'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNode*> tolua_ret = (irr::core::list<irr::scene::ISceneNode*>)  self->get_Children();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNode*>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNode*>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Children of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Children00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNode*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNode*> c = *((irr::core::list<irr::scene::ISceneNode*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Children'",NULL);
#endif
  {
   self->set_Children(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Animators of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Animators00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Animators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Animators'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*> tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>)  self->get_Animators();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNodeAnimator*>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNodeAnimator*>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Animators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Animators of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Animators00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Animators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNodeAnimator*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNodeAnimator*> a = *((irr::core::list<irr::scene::ISceneNodeAnimator*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Animators'",NULL);
#endif
  {
   self->set_Animators(a);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Animators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_ID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_ID00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_ID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->get_ID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_ID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_ID00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_ID'",NULL);
#endif
  {
   self->set_ID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_SceneManager of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_SceneManager00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_SceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_SceneManager'",NULL);
#endif
  {
   irr::scene::ISceneManager* tolua_ret = (irr::scene::ISceneManager*)  self->get_SceneManager();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_SceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_SceneManager of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_SceneManager00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_SceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneManager* m = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_SceneManager'",NULL);
#endif
  {
   self->set_SceneManager(m);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_SceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_TriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_TriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_TriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_TriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->get_TriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_TriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_TriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_TriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_TriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* t = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_TriangleSelector'",NULL);
#endif
  {
   self->set_TriangleSelector(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_TriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AutomaticCullingEnabled of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AutomaticCullingEnabled00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AutomaticCullingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AutomaticCullingEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_AutomaticCullingEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AutomaticCullingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AutomaticCullingEnabled of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AutomaticCullingEnabled00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AutomaticCullingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AutomaticCullingEnabled'",NULL);
#endif
  {
   self->set_AutomaticCullingEnabled(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AutomaticCullingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_DebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_DebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_DebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_DebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_DebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_DebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_DebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_DebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_DebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_DebugDataVisible'",NULL);
#endif
  {
   self->set_DebugDataVisible(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_DebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_IsVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_IsVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_IsVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_IsVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_IsVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_IsVisible00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_IsVisible'",NULL);
#endif
  {
   self->set_IsVisible(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_Name
static int tolua_get_irr__scene__IrrLuaISceneNode_Name(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Name(),"irr::core::stringc");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_Name
static int tolua_set_irr__scene__IrrLuaISceneNode_Name(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::stringc",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Name(*((irr::core::stringc*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AbsoluteTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_AbsoluteTransformation
static int tolua_get_irr__scene__IrrLuaISceneNode_AbsoluteTransformation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteTransformation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_AbsoluteTransformation(),"irr::core::matrix4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AbsoluteTransformation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_AbsoluteTransformation
static int tolua_set_irr__scene__IrrLuaISceneNode_AbsoluteTransformation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteTransformation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AbsoluteTransformation(*((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeTranslation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_RelativeTranslation
static int tolua_get_irr__scene__IrrLuaISceneNode_RelativeTranslation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeTranslation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeTranslation(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeTranslation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_RelativeTranslation
static int tolua_set_irr__scene__IrrLuaISceneNode_RelativeTranslation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeTranslation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeTranslation(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_RelativeRotation
static int tolua_get_irr__scene__IrrLuaISceneNode_RelativeRotation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRotation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeRotation(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeRotation of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_RelativeRotation
static int tolua_set_irr__scene__IrrLuaISceneNode_RelativeRotation(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRotation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeRotation(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_RelativeScale
static int tolua_get_irr__scene__IrrLuaISceneNode_RelativeScale(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeScale'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeScale(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeScale of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_RelativeScale
static int tolua_set_irr__scene__IrrLuaISceneNode_RelativeScale(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeScale'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeScale(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Parent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_Parent_ptr
static int tolua_get_irr__scene__IrrLuaISceneNode_Parent_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_Parent(),"irr::scene::ISceneNode");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Parent of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_Parent_ptr
static int tolua_set_irr__scene__IrrLuaISceneNode_Parent_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Parent(((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Children of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_Children
static int tolua_get_irr__scene__IrrLuaISceneNode_Children(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Children(),"irr::core::list<irr::scene::ISceneNode*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Children of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_Children
static int tolua_set_irr__scene__IrrLuaISceneNode_Children(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNode*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Children(*((irr::core::list<irr::scene::ISceneNode*>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Animators of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_Animators
static int tolua_get_irr__scene__IrrLuaISceneNode_Animators(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Animators'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Animators(),"irr::core::list<irr::scene::ISceneNodeAnimator*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Animators of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_Animators
static int tolua_set_irr__scene__IrrLuaISceneNode_Animators(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Animators'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNodeAnimator*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Animators(*((irr::core::list<irr::scene::ISceneNodeAnimator*>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_ID
static int tolua_get_irr__scene__IrrLuaISceneNode_ID(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->get_ID());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_ID
static int tolua_set_irr__scene__IrrLuaISceneNode_ID(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_ID((( signed int)  tolua_tonumber(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SceneManager of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_SceneManager_ptr
static int tolua_get_irr__scene__IrrLuaISceneNode_SceneManager_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SceneManager'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_SceneManager(),"irr::scene::ISceneManager");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SceneManager of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_SceneManager_ptr
static int tolua_set_irr__scene__IrrLuaISceneNode_SceneManager_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SceneManager'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ISceneManager",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_SceneManager(((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr
static int tolua_get_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TriangleSelector'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_TriangleSelector(),"irr::scene::ITriangleSelector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TriangleSelector of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr
static int tolua_set_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TriangleSelector'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_TriangleSelector(((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AutomaticCullingEnabled of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled
static int tolua_get_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AutomaticCullingEnabled'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_AutomaticCullingEnabled());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AutomaticCullingEnabled of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled
static int tolua_set_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AutomaticCullingEnabled'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AutomaticCullingEnabled(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_DebugDataVisible
static int tolua_get_irr__scene__IrrLuaISceneNode_DebugDataVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DebugDataVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_DebugDataVisible());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DebugDataVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_DebugDataVisible
static int tolua_set_irr__scene__IrrLuaISceneNode_DebugDataVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DebugDataVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_DebugDataVisible(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaISceneNode_IsVisible
static int tolua_get_irr__scene__IrrLuaISceneNode_IsVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_IsVisible());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsVisible of class  irr::scene::IrrLuaISceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaISceneNode_IsVisible
static int tolua_set_irr__scene__IrrLuaISceneNode_IsVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaISceneNode* self = (irr::scene::IrrLuaISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_IsVisible(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::scene::IrrLuaAddCameraSceneNodeFPS */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaAddCameraSceneNodeFPS00
static int tolua_IrrLua_irr_scene_IrrLuaAddCameraSceneNodeFPS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_istable(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneManager* mgr = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,1,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
   float rotateSpeed = ((  float)  tolua_tonumber(tolua_S,3,0));
   float moveSpeed = ((  float)  tolua_tonumber(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  signed int keyMapSize = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifdef __cplusplus
  irr::SKeyMap* keyMapArray = new irr::SKeyMap[keyMapSize];
#else
  irr::SKeyMap* keyMapArray = (irr::SKeyMap*) malloc((keyMapSize)*sizeof(irr::SKeyMap));
#endif
  bool noVerticalMovement = ((bool)  tolua_toboolean(tolua_S,8,0));
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isusertypearray(tolua_S,7,"irr::SKeyMap",keyMapSize,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<keyMapSize;i++)
    keyMapArray[i] = *((irr::SKeyMap*)  tolua_tofieldusertype(tolua_S,7,i+1,0));
   }
  }
  {
   irr::scene::ICameraSceneNode* tolua_ret = (irr::scene::ICameraSceneNode*)  irr::scene::IrrLuaAddCameraSceneNodeFPS(mgr,parent,rotateSpeed,moveSpeed,id,keyMapSize,keyMapArray,noVerticalMovement);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ICameraSceneNode");
  }
  {
   int i;
   for(i=0; i<keyMapSize;i++)
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::SKeyMap(keyMapArray[i]);
    tolua_pushfieldusertype_and_takeownership(tolua_S,7,i+1,tolua_obj,"irr::SKeyMap");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)& keyMapArray[i],sizeof(irr::SKeyMap));
    tolua_pushfieldusertype(tolua_S,7,i+1,tolua_obj,"irr::SKeyMap");
#endif
   }
  }
#ifdef __cplusplus
  delete [] keyMapArray;
#else
  free(keyMapArray);
#endif
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IrrLuaAddCameraSceneNodeFPS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_delete00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollisionPoint of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionPoint00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32>* ray = ((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* outCollisionPoint = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::triangle3d<f32>* outTriangle = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollisionPoint'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getCollisionPoint(*ray,selector,*outCollisionPoint,*outTriangle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollisionPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollisionResultPosition of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionResultPosition00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionResultPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,9,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* ellipsoidPosition = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::vector3d<f32>* ellipsoidRadius = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::vector3d<f32>* ellipsoidDirectionAndSpeed = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::triangle3d<f32>* triout = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,6,0));
  bool outFalling = ((bool)  tolua_toboolean(tolua_S,7,0));
   float slidingSpeed = ((  float)  tolua_tonumber(tolua_S,8,0));
  irr::core::vector3d<f32>* gravityDirectionAndSpeed = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,9,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollisionResultPosition'",NULL);
#endif
  {
   core::vector3df tolua_ret = (core::vector3df)  self->getCollisionResultPosition(selector,*ellipsoidPosition,*ellipsoidRadius,*ellipsoidDirectionAndSpeed,*triout,outFalling,slidingSpeed,*gravityDirectionAndSpeed);
   {
#ifdef __cplusplus
    void* tolua_obj = new core::vector3df(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"core::vector3df");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(core::vector3df));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"core::vector3df");
#endif
   }
   tolua_pushboolean(tolua_S,(bool)outFalling);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollisionResultPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRayFromScreenCoordinates of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getRayFromScreenCoordinates00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getRayFromScreenCoordinates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> pos = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ICameraSceneNode* camera = ((irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRayFromScreenCoordinates'",NULL);
#endif
  {
   irr::core::line3d<f32> tolua_ret = (irr::core::line3d<f32>)  self->getRayFromScreenCoordinates(pos,camera);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::line3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::line3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::line3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRayFromScreenCoordinates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScreenCoordinatesFrom3DPosition of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getScreenCoordinatesFrom3DPosition00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getScreenCoordinatesFrom3DPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> pos = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ICameraSceneNode* camera = ((irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScreenCoordinatesFrom3DPosition'",NULL);
#endif
  {
   irr::core::position2d<s32> tolua_ret = (irr::core::position2d<s32>)  self->getScreenCoordinatesFrom3DPosition(pos,camera);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::position2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::position2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::position2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScreenCoordinatesFrom3DPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromScreenCoordinatesBB of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> pos = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  signed int idBitMask = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromScreenCoordinatesBB'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromScreenCoordinatesBB(pos,idBitMask);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFromScreenCoordinatesBB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromRayBB of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32> ray = *((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int idBitMask = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromRayBB'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromRayBB(ray,idBitMask);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFromRayBB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromRayBB of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB01
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::line3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::core::line3d<f32> ray = *((irr::core::line3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int idBitMask = (( signed int)  tolua_tonumber(tolua_S,3,0));
  bool bNoDebugObjects = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromRayBB'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromRayBB(ray,idBitMask,bNoDebugObjects);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromCameraBB of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ICameraSceneNode* camera = ((irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,2,0));
  signed int idBitMask = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromCameraBB'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromCameraBB(camera,idBitMask);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneNodeFromCameraBB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneNodeFromCameraBB of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB01
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ICameraSceneNode* camera = ((irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,2,0));
  signed int idBitMask = (( signed int)  tolua_tonumber(tolua_S,3,0));
  bool bNoDebugObjects = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneNodeFromCameraBB'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getSceneNodeFromCameraBB(camera,idBitMask,bNoDebugObjects);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_grab00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_drop00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ISceneCollisionManager */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneCollisionManager_getDebugName00
static int tolua_IrrLua_irr_scene_ISceneCollisionManager_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneCollisionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneCollisionManager* self = (irr::scene::ISceneCollisionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_delete00
static int tolua_IrrLua_irr_scene_ISceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_ISceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_ISceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_render00
static int tolua_IrrLua_irr_scene_ISceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getName00
static int tolua_IrrLua_irr_scene_ISceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setName00
static int tolua_IrrLua_irr_scene_ISceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_ISceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_ISceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_ISceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_ISceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_isVisible00
static int tolua_IrrLua_irr_scene_ISceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setVisible00
static int tolua_IrrLua_irr_scene_ISceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getID00
static int tolua_IrrLua_irr_scene_ISceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setID00
static int tolua_IrrLua_irr_scene_ISceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_addChild00
static int tolua_IrrLua_irr_scene_ISceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_removeChild00
static int tolua_IrrLua_irr_scene_ISceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_removeAll00
static int tolua_IrrLua_irr_scene_ISceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_remove00
static int tolua_IrrLua_irr_scene_ISceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_ISceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimators of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getAnimators00
static int tolua_IrrLua_irr_scene_ISceneNode_getAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimators'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*>& tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>&)  self->getAnimators();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_ISceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_ISceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_ISceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_ISceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_ISceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_ISceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_ISceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getScale00
static int tolua_IrrLua_irr_scene_ISceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setScale00
static int tolua_IrrLua_irr_scene_ISceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getRotation00
static int tolua_IrrLua_irr_scene_ISceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setRotation00
static int tolua_IrrLua_irr_scene_ISceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getPosition00
static int tolua_IrrLua_irr_scene_ISceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setPosition00
static int tolua_IrrLua_irr_scene_ISceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_ISceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_ISceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_ISceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_ISceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_ISceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setParent00
static int tolua_IrrLua_irr_scene_ISceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_ISceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_ISceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getParent00
static int tolua_IrrLua_irr_scene_ISceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getType00
static int tolua_IrrLua_irr_scene_ISceneNode_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::scene::ESCENE_NODE_TYPE tolua_ret = (irr::scene::ESCENE_NODE_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes00
static int tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes00
static int tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   self->deserializeAttributes(in,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deserializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsDebugObject of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_setIsDebugObject00
static int tolua_IrrLua_irr_scene_ISceneNode_setIsDebugObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool debugObject = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsDebugObject'",NULL);
#endif
  {
   self->setIsDebugObject(debugObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsDebugObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugObject of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_isDebugObject00
static int tolua_IrrLua_irr_scene_ISceneNode_isDebugObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugObject'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugObject();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes01
static int tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes01
static int tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   self->deserializeAttributes(in,options);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_grab00
static int tolua_IrrLua_irr_scene_ISceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_drop00
static int tolua_IrrLua_irr_scene_ISceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ISceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_ISceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* self = (irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnReadUserData of class  irr::scene::ISceneUserDataSerializer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneUserDataSerializer_OnReadUserData00
static int tolua_IrrLua_irr_scene_ISceneUserDataSerializer_OnReadUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneUserDataSerializer* self = (irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* forSceneNode = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::io::IAttributes* userData = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnReadUserData'",NULL);
#endif
  {
   self->OnReadUserData(forSceneNode,userData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnReadUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createUserData of class  irr::scene::ISceneUserDataSerializer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneUserDataSerializer_createUserData00
static int tolua_IrrLua_irr_scene_ISceneUserDataSerializer_createUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneUserDataSerializer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneUserDataSerializer* self = (irr::scene::ISceneUserDataSerializer*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* forSceneNode = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createUserData'",NULL);
#endif
  {
   irr::io::IAttributes* tolua_ret = (irr::io::IAttributes*)  self->createUserData(forSceneNode);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IAttributes");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_delete00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentFrame of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setCurrentFrame00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setCurrentFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentFrame'",NULL);
#endif
  {
   self->setCurrentFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameLoop of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setFrameLoop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setFrameLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int begin = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int end = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameLoop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setFrameLoop(begin,end);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationSpeed of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationSpeed00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int framesPerSecond = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationSpeed'",NULL);
#endif
  {
   self->setAnimationSpeed(framesPerSecond);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addShadowVolumeSceneNode of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addShadowVolumeSceneNode00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addShadowVolumeSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool zfailmethod = ((bool)  tolua_toboolean(tolua_S,3,0));
   float infinity = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addShadowVolumeSceneNode'",NULL);
#endif
  {
   irr::scene::IShadowVolumeSceneNode* tolua_ret = (irr::scene::IShadowVolumeSceneNode*)  self->addShadowVolumeSceneNode(id,zfailmethod,infinity);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IShadowVolumeSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addShadowVolumeSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMS3DJointNode of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMS3DJointNode00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMS3DJointNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* jointName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMS3DJointNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getMS3DJointNode(jointName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMS3DJointNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getXJointNode of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getXJointNode00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getXJointNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* jointName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getXJointNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getXJointNode(jointName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getXJointNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMD2Animation of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMD2Animation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMD2Animation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::EMD2_ANIMATION_TYPE anim = ((irr::scene::EMD2_ANIMATION_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMD2Animation'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setMD2Animation(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMD2Animation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameNr of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getFrameNr00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getFrameNr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameNr'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameNr();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameNr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLoopMode of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setLoopMode00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setLoopMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool playAnimationLooped = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLoopMode'",NULL);
#endif
  {
   self->setLoopMode(playAnimationLooped);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLoopMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationEndCallback of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationEndCallback00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationEndCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimationEndCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimationEndCallBack* callback = ((irr::scene::IAnimationEndCallBack*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationEndCallback'",NULL);
#endif
  {
   self->setAnimationEndCallback(callback);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationEndCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setReadOnlyMaterials of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setReadOnlyMaterials00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setReadOnlyMaterials00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool readonly = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setReadOnlyMaterials'",NULL);
#endif
  {
   self->setReadOnlyMaterials(readonly);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setReadOnlyMaterials'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isReadOnlyMaterials of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isReadOnlyMaterials00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isReadOnlyMaterials00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isReadOnlyMaterials'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isReadOnlyMaterials();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isReadOnlyMaterials'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMesh of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMesh00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMesh'",NULL);
#endif
  {
   self->setMesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_render00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getID00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setID00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addChild00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_remove00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getScale00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setScale00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setParent00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getParent00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_grab00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_drop00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimatedMeshSceneNode* self = (irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAnimationEnd of class  irr::scene::IAnimationEndCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IAnimationEndCallBack_OnAnimationEnd00
static int tolua_IrrLua_irr_scene_IAnimationEndCallBack_OnAnimationEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IAnimationEndCallBack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IAnimationEndCallBack* self = (irr::scene::IAnimationEndCallBack*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMeshSceneNode* node = ((irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAnimationEnd'",NULL);
#endif
  {
   self->OnAnimationEnd(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAnimationEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAnimationEnd of class  irr::scene::IrrLuaIAnimationEndCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimationEndCallBack_OnAnimationEnd00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimationEndCallBack_OnAnimationEnd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimationEndCallBack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimationEndCallBack* self = (irr::scene::IrrLuaIAnimationEndCallBack*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMeshSceneNode* node = ((irr::scene::IAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAnimationEnd'",NULL);
#endif
  {
   self->OnAnimationEnd(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAnimationEnd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneManager* mgr = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  {
   irr::scene::IrrLuaIAnimatedMeshSceneNode* tolua_ret = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  new irr::scene::IrrLuaIAnimatedMeshSceneNode(parent,mgr,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaIAnimatedMeshSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneManager* mgr = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  {
   irr::scene::IrrLuaIAnimatedMeshSceneNode* tolua_ret = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  new irr::scene::IrrLuaIAnimatedMeshSceneNode(parent,mgr,id);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaIAnimatedMeshSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_delete00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentFrame of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setCurrentFrame00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setCurrentFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int frame = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentFrame'",NULL);
#endif
  {
   self->setCurrentFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrameLoop of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setFrameLoop00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setFrameLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int begin = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int end = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrameLoop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setFrameLoop(begin,end);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrameLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationSpeed of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationSpeed00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int framesPerSecond = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationSpeed'",NULL);
#endif
  {
   self->setAnimationSpeed(framesPerSecond);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addShadowVolumeSceneNode of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addShadowVolumeSceneNode00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addShadowVolumeSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool zfailmethod = ((bool)  tolua_toboolean(tolua_S,3,0));
   float infinity = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addShadowVolumeSceneNode'",NULL);
#endif
  {
   irr::scene::IShadowVolumeSceneNode* tolua_ret = (irr::scene::IShadowVolumeSceneNode*)  self->addShadowVolumeSceneNode(id,zfailmethod,infinity);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IShadowVolumeSceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addShadowVolumeSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMS3DJointNode of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMS3DJointNode00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMS3DJointNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* jointName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMS3DJointNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getMS3DJointNode(jointName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMS3DJointNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getXJointNode of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getXJointNode00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getXJointNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* jointName = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getXJointNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getXJointNode(jointName);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getXJointNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMD2Animation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMD2Animation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMD2Animation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::EMD2_ANIMATION_TYPE anim = ((irr::scene::EMD2_ANIMATION_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMD2Animation'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setMD2Animation(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMD2Animation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrameNr of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getFrameNr00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getFrameNr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrameNr'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFrameNr();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrameNr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLoopMode of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setLoopMode00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setLoopMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool playAnimationLooped = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLoopMode'",NULL);
#endif
  {
   self->setLoopMode(playAnimationLooped);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLoopMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationEndCallback of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationEndCallback00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationEndCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimationEndCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimationEndCallBack* callback = ((irr::scene::IAnimationEndCallBack*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationEndCallback'",NULL);
#endif
  {
   self->setAnimationEndCallback(callback);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationEndCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_render00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getName00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setName00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getID00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setID00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addChild00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_remove00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getScale00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setScale00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setParent00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getParent00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_grab00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_drop00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Name of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Name00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Name'",NULL);
#endif
  {
   irr::core::stringc tolua_ret = (irr::core::stringc)  self->get_Name();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::stringc(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::stringc));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::stringc");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Name of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Name00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Name00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::stringc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::stringc n = *((irr::core::stringc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Name'",NULL);
#endif
  {
   self->set_Name(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Name'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AbsoluteTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->get_AbsoluteTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AbsoluteTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4 m = *((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AbsoluteTransformation'",NULL);
#endif
  {
   self->set_AbsoluteTransformation(m);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeTranslation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeTranslation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeTranslation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeTranslation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeTranslation'",NULL);
#endif
  {
   self->set_RelativeTranslation(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeRotation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeRotation00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeRotation'",NULL);
#endif
  {
   self->set_RelativeRotation(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeScale00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->get_RelativeScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeScale00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> v = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeScale'",NULL);
#endif
  {
   self->set_RelativeScale(v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Parent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Parent00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Parent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->get_Parent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Parent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Parent00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* p = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Parent'",NULL);
#endif
  {
   self->set_Parent(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Children of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Children00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Children'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNode*> tolua_ret = (irr::core::list<irr::scene::ISceneNode*>)  self->get_Children();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNode*>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNode*>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNode*>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Children of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Children00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNode*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNode*> c = *((irr::core::list<irr::scene::ISceneNode*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Children'",NULL);
#endif
  {
   self->set_Children(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Animators of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Animators00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Animators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Animators'",NULL);
#endif
  {
   irr::core::list<irr::scene::ISceneNodeAnimator*> tolua_ret = (irr::core::list<irr::scene::ISceneNodeAnimator*>)  self->get_Animators();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::scene::ISceneNodeAnimator*>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::scene::ISceneNodeAnimator*>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::scene::ISceneNodeAnimator*>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Animators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Animators of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Animators00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Animators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNodeAnimator*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::scene::ISceneNodeAnimator*> a = *((irr::core::list<irr::scene::ISceneNodeAnimator*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Animators'",NULL);
#endif
  {
   self->set_Animators(a);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Animators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_ID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_ID00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_ID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->get_ID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_ID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_ID00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_ID'",NULL);
#endif
  {
   self->set_ID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_SceneManager of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_SceneManager00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_SceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_SceneManager'",NULL);
#endif
  {
   irr::scene::ISceneManager* tolua_ret = (irr::scene::ISceneManager*)  self->get_SceneManager();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_SceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_SceneManager of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_SceneManager00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_SceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneManager* m = ((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_SceneManager'",NULL);
#endif
  {
   self->set_SceneManager(m);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_SceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_TriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_TriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_TriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_TriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->get_TriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_TriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_TriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_TriangleSelector00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_TriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* t = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_TriangleSelector'",NULL);
#endif
  {
   self->set_TriangleSelector(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_TriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AutomaticCullingEnabled of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AutomaticCullingEnabled00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AutomaticCullingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AutomaticCullingEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_AutomaticCullingEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AutomaticCullingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AutomaticCullingEnabled of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AutomaticCullingEnabled00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AutomaticCullingEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AutomaticCullingEnabled'",NULL);
#endif
  {
   self->set_AutomaticCullingEnabled(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AutomaticCullingEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_DebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_DebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_DebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_DebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_DebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_DebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_DebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_DebugDataVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_DebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_DebugDataVisible'",NULL);
#endif
  {
   self->set_DebugDataVisible(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_DebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_IsVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_IsVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_IsVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_IsVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_IsVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_IsVisible00
static int tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIAnimatedMeshSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_IsVisible'",NULL);
#endif
  {
   self->set_IsVisible(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Name(),"irr::core::stringc");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::stringc",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Name(*((irr::core::stringc*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AbsoluteTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteTransformation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_AbsoluteTransformation(),"irr::core::matrix4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AbsoluteTransformation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteTransformation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AbsoluteTransformation(*((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeTranslation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeTranslation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeTranslation(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeTranslation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeTranslation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeTranslation(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRotation'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeRotation(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeRotation of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRotation'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeRotation(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeScale'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeScale(),"irr::core::vector3d<f32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeScale of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeScale'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeScale(*((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Parent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_Parent(),"irr::scene::ISceneNode");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Parent of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Parent(((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Children of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Children(),"irr::core::list<irr::scene::ISceneNode*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Children of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNode*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Children(*((irr::core::list<irr::scene::ISceneNode*>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Animators of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Animators'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Animators(),"irr::core::list<irr::scene::ISceneNodeAnimator*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Animators of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Animators'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::list<irr::scene::ISceneNodeAnimator*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Animators(*((irr::core::list<irr::scene::ISceneNodeAnimator*>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->get_ID());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_ID((( signed int)  tolua_tonumber(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SceneManager of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SceneManager'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_SceneManager(),"irr::scene::ISceneManager");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SceneManager of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SceneManager'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ISceneManager",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_SceneManager(((irr::scene::ISceneManager*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TriangleSelector'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_TriangleSelector(),"irr::scene::ITriangleSelector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TriangleSelector of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TriangleSelector'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_TriangleSelector(((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AutomaticCullingEnabled of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AutomaticCullingEnabled'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_AutomaticCullingEnabled());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AutomaticCullingEnabled of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AutomaticCullingEnabled'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AutomaticCullingEnabled(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DebugDataVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_DebugDataVisible());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DebugDataVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DebugDataVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_DebugDataVisible(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible
static int tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_IsVisible());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsVisible of class  irr::scene::IrrLuaIAnimatedMeshSceneNode */
#ifndef TOLUA_DISABLE_tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible
static int tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible(lua_State* tolua_S)
{
  irr::scene::IrrLuaIAnimatedMeshSceneNode* self = (irr::scene::IrrLuaIAnimatedMeshSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_IsVisible(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformationMatrix of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformationMatrix00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformationMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformationMatrix'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getRelativeTransformationMatrix();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformationMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_render00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getName00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setName00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getID00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setID00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addChild00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_remove00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getScale00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setScale00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setParent00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getParent00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_grab00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_drop00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IDummyTransformationSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IDummyTransformationSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IDummyTransformationSceneNode* self = (irr::scene::IDummyTransformationSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_delete00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProjectionMatrix of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setProjectionMatrix00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::matrix4* projection = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProjectionMatrix'",NULL);
#endif
  {
   self->setProjectionMatrix(*projection);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProjectionMatrix of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getProjectionMatrix00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProjectionMatrix'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getProjectionMatrix();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getViewMatrix of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getViewMatrix00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getViewMatrix'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getViewMatrix();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTarget of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setTarget00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* pos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTarget'",NULL);
#endif
  {
   self->setTarget(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getTarget00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getTarget();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUpVector of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setUpVector00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setUpVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* pos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUpVector'",NULL);
#endif
  {
   self->setUpVector(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUpVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUpVector of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getUpVector00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getUpVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUpVector'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getUpVector();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUpVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNearValue of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getNearValue00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getNearValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNearValue'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getNearValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNearValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFarValue of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getFarValue00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getFarValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFarValue'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getFarValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFarValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAspectRatio of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getAspectRatio00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getAspectRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAspectRatio'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getAspectRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAspectRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFOV of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getFOV00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getFOV00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFOV'",NULL);
#endif
  {
    float tolua_ret = (  float)  self->getFOV();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFOV'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNearValue of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setNearValue00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setNearValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float zn = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNearValue'",NULL);
#endif
  {
   self->setNearValue(zn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNearValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFarValue of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setFarValue00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setFarValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float zf = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFarValue'",NULL);
#endif
  {
   self->setFarValue(zf);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFarValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAspectRatio of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setAspectRatio00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setAspectRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float aspect = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAspectRatio'",NULL);
#endif
  {
   self->setAspectRatio(aspect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAspectRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFOV of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setFOV00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setFOV00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float fovy = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFOV'",NULL);
#endif
  {
   self->setFOV(fovy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFOV'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getViewFrustrum of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getViewFrustrum00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getViewFrustrum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getViewFrustrum'",NULL);
#endif
  {
   irr::scene::SViewFrustrum* tolua_ret = (irr::scene::SViewFrustrum*)  self->getViewFrustrum();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::SViewFrustrum");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getViewFrustrum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInputReceiverEnabled of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setInputReceiverEnabled00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setInputReceiverEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInputReceiverEnabled'",NULL);
#endif
  {
   self->setInputReceiverEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInputReceiverEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isInputReceiverEnabled of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_isInputReceiverEnabled00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_isInputReceiverEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isInputReceiverEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isInputReceiverEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isInputReceiverEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOrthogonal of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_isOrthogonal00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_isOrthogonal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOrthogonal'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOrthogonal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOrthogonal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsOrthogonal of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setIsOrthogonal00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setIsOrthogonal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool orthogonal = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsOrthogonal'",NULL);
#endif
  {
   self->setIsOrthogonal(orthogonal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsOrthogonal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_render00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getName00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setName00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getID00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setID00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_addChild00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_remove00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getScale00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setScale00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setParent00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getParent00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent01
static int tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_grab00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_drop00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ICameraSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_ICameraSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ICameraSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __irr of class  irr::scene::ICameraSceneNode */
#ifndef TOLUA_DISABLE_tolua_get_irr__scene__ICameraSceneNode___irr__IEventReceiver__
static int tolua_get_irr__scene__ICameraSceneNode___irr__IEventReceiver__(lua_State* tolua_S)
{
  irr::scene::ICameraSceneNode* self = (irr::scene::ICameraSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__irr'",NULL);
#endif
#ifdef __cplusplus
  tolua_pushusertype(tolua_S,(void*)static_cast<irr::IEventReceiver*>(self), "irr::IEventReceiver");
#else
  tolua_pushusertype(tolua_S,(void*)((irr::IEventReceiver*)self), "irr::IEventReceiver");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLightData of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getLightData00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getLightData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLightData'",NULL);
#endif
  {
   irr::video::SLight& tolua_ret = (irr::video::SLight&)  self->getLightData();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SLight");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLightData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_ILightSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_ILightSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_render00
static int tolua_IrrLua_irr_scene_ILightSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getName00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setName00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_ILightSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getID00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setID00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_addChild00
static int tolua_IrrLua_irr_scene_ILightSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_ILightSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_ILightSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_remove00
static int tolua_IrrLua_irr_scene_ILightSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_ILightSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getScale00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setScale00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_ILightSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setParent00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_ILightSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_ILightSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getParent00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_grab00
static int tolua_IrrLua_irr_scene_ILightSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_drop00
static int tolua_IrrLua_irr_scene_ILightSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ILightSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ILightSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_ILightSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ILightSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ILightSceneNode* self = (irr::scene::ILightSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_delete00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animateNode of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_animateNode00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_animateNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'animateNode'",NULL);
#endif
  {
   self->animateNode(node,timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animateNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_serializeAttributes00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_serializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_deserializeAttributes00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_deserializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   self->deserializeAttributes(in,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deserializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_grab00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_drop00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimator_getDebugName00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimator_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimator* self = (irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaISceneNodeAnimator* tolua_ret = (irr::scene::IrrLuaISceneNodeAnimator*)  new irr::scene::IrrLuaISceneNodeAnimator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaISceneNodeAnimator* tolua_ret = (irr::scene::IrrLuaISceneNodeAnimator*)  new irr::scene::IrrLuaISceneNodeAnimator();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_delete00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animateNode of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_animateNode00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_animateNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'animateNode'",NULL);
#endif
  {
   self->animateNode(node,timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animateNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_grab00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_drop00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaISceneNodeAnimator */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimator* self = (irr::scene::IrrLuaISceneNodeAnimator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_delete00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFalling of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_isFalling00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_isFalling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFalling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFalling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFalling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEllipsoidRadius of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* radius = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEllipsoidRadius'",NULL);
#endif
  {
   self->setEllipsoidRadius(*radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEllipsoidRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEllipsoidRadius of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEllipsoidRadius'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getEllipsoidRadius();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEllipsoidRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setGravity00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* gravity = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'",NULL);
#endif
  {
   self->setGravity(*gravity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGravity of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getGravity00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGravity'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getGravity();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEllipsoidTranslation of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> translation = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEllipsoidTranslation'",NULL);
#endif
  {
   self->setEllipsoidTranslation(translation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEllipsoidTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEllipsoidTranslation of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEllipsoidTranslation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getEllipsoidTranslation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEllipsoidTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWorld of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setWorld00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* newWorld = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWorld'",NULL);
#endif
  {
   self->setWorld(newWorld);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorld of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getWorld00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorld'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getWorld();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animateNode of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_animateNode00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_animateNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* node = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'animateNode'",NULL);
#endif
  {
   self->animateNode(node,timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animateNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_grab00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_drop00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getDebugName00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorCollisionResponse* self = (irr::scene::ISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* tolua_ret = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  new irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* tolua_ret = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  new irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_delete00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFalling of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_isFalling00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_isFalling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFalling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFalling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFalling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEllipsoidRadius of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* radius = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEllipsoidRadius'",NULL);
#endif
  {
   self->setEllipsoidRadius(*radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEllipsoidRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEllipsoidRadius of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEllipsoidRadius'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getEllipsoidRadius();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEllipsoidRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setGravity00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* gravity = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'",NULL);
#endif
  {
   self->setGravity(*gravity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGravity of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getGravity00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGravity'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getGravity();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEllipsoidTranslation of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> translation = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEllipsoidTranslation'",NULL);
#endif
  {
   self->setEllipsoidTranslation(translation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEllipsoidTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEllipsoidTranslation of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEllipsoidTranslation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getEllipsoidTranslation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEllipsoidTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWorld of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setWorld00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* newWorld = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWorld'",NULL);
#endif
  {
   self->setWorld(newWorld);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorld of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getWorld00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (const irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorld'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getWorld();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_grab00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_drop00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse* self = (irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_delete00
static int tolua_IrrLua_irr_scene_IParticleEmitter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: emitt of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_emitt00
static int tolua_IrrLua_irr_scene_IParticleEmitter_emitt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::scene::SParticle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  unsigned int now = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int timeSinceLastCall = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
  irr::scene::SParticle* outArray = ((irr::scene::SParticle*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'emitt'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->emitt(now,timeSinceLastCall,outArray);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushusertype(tolua_S,(void*)outArray,"irr::scene::SParticle");
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'emitt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_serializeAttributes00
static int tolua_IrrLua_irr_scene_IParticleEmitter_serializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_deserializeAttributes00
static int tolua_IrrLua_irr_scene_IParticleEmitter_deserializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  signed int startIndex = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,3,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->deserializeAttributes(startIndex,in,options);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deserializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_getType00
static int tolua_IrrLua_irr_scene_IParticleEmitter_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::scene::E_PARTICLE_EMITTER_TYPE tolua_ret = (irr::scene::E_PARTICLE_EMITTER_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_grab00
static int tolua_IrrLua_irr_scene_IParticleEmitter_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_drop00
static int tolua_IrrLua_irr_scene_IParticleEmitter_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleEmitter_getDebugName00
static int tolua_IrrLua_irr_scene_IParticleEmitter_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleEmitter* self = (irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: affect of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_affect00
static int tolua_IrrLua_irr_scene_IParticleAffector_affect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::SParticle",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
  unsigned int now = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  irr::scene::SParticle* particlearray = ((irr::scene::SParticle*)  tolua_tousertype(tolua_S,3,0));
  unsigned int count = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'affect'",NULL);
#endif
  {
   self->affect(now,particlearray,count);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'affect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: serializeAttributes of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_serializeAttributes00
static int tolua_IrrLua_irr_scene_IParticleAffector_serializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IAttributes* out = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,2,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'serializeAttributes'",NULL);
#endif
  {
   self->serializeAttributes(out,options);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'serializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deserializeAttributes of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_deserializeAttributes00
static int tolua_IrrLua_irr_scene_IParticleAffector_deserializeAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::io::SAttributeReadWriteOptions",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
  signed int startIndex = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::io::IAttributes* in = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,3,0));
  irr::io::SAttributeReadWriteOptions* options = ((irr::io::SAttributeReadWriteOptions*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deserializeAttributes'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->deserializeAttributes(startIndex,in,options);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deserializeAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_getType00
static int tolua_IrrLua_irr_scene_IParticleAffector_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::scene::E_PARTICLE_AFFECTOR_TYPE tolua_ret = (irr::scene::E_PARTICLE_AFFECTOR_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_grab00
static int tolua_IrrLua_irr_scene_IParticleAffector_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_drop00
static int tolua_IrrLua_irr_scene_IParticleAffector_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleAffector_getDebugName00
static int tolua_IrrLua_irr_scene_IParticleAffector_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleAffector* self = (irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIParticleAffector* tolua_ret = (irr::scene::IrrLuaIParticleAffector*)  new irr::scene::IrrLuaIParticleAffector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IrrLuaIParticleAffector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00_local
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::scene::IrrLuaIParticleAffector* tolua_ret = (irr::scene::IrrLuaIParticleAffector*)  new irr::scene::IrrLuaIParticleAffector();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::scene::IrrLuaIParticleAffector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_delete00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: affect of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_affect00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_affect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::SParticle",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
  unsigned int now = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
  irr::scene::SParticle* particlearray = ((irr::scene::SParticle*)  tolua_tousertype(tolua_S,3,0));
  unsigned int count = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'affect'",NULL);
#endif
  {
   self->affect(now,particlearray,count);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'affect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_getType00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::scene::E_PARTICLE_AFFECTOR_TYPE tolua_ret = (irr::scene::E_PARTICLE_AFFECTOR_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_grab00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_drop00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::scene::IrrLuaIParticleAffector */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_GetProxy00
static int tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IrrLuaIParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IrrLuaIParticleAffector* self = (irr::scene::IrrLuaIParticleAffector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParticleSize of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticleSize00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticleSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<f32>* size = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParticleSize'",NULL);
#endif
  {
   self->setParticleSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParticleSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParticlesAreGlobal of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticlesAreGlobal00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticlesAreGlobal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool global = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParticlesAreGlobal'",NULL);
#endif
  {
   self->setParticlesAreGlobal(global);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParticlesAreGlobal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEmitter of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setEmitter00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IParticleEmitter* emitter = ((irr::scene::IParticleEmitter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEmitter'",NULL);
#endif
  {
   self->setEmitter(emitter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAffector of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAffector00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAffector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IParticleAffector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IParticleAffector* affector = ((irr::scene::IParticleAffector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAffector'",NULL);
#endif
  {
   self->addAffector(affector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAffector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllAffectors of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAllAffectors00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAllAffectors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllAffectors'",NULL);
#endif
  {
   self->removeAllAffectors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllAffectors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createPointEmitter of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createPointEmitter00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createPointEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,10,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> direction = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  unsigned int minParticlesPerSecond = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int maxParticlePerSecond = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
  irr::video::SColor minStartColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,5,0));
  irr::video::SColor maxStartColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,6,0));
  unsigned int lifeTimeMin = (( unsigned int)  tolua_tonumber(tolua_S,7,0));
  unsigned int lifeTimeMax = (( unsigned int)  tolua_tonumber(tolua_S,8,0));
  signed int maxAngleDegrees = (( signed int)  tolua_tonumber(tolua_S,9,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createPointEmitter'",NULL);
#endif
  {
   irr::scene::IParticleEmitter* tolua_ret = (irr::scene::IParticleEmitter*)  self->createPointEmitter(direction,minParticlesPerSecond,maxParticlePerSecond,minStartColor,maxStartColor,lifeTimeMin,lifeTimeMax,maxAngleDegrees);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createPointEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createBoxEmitter of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createBoxEmitter00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createBoxEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32> box = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32> direction = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  unsigned int minParticlesPerSecond = (( unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int maxParticlePerSecond = (( unsigned int)  tolua_tonumber(tolua_S,5,0));
  irr::video::SColor minStartColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,6,0));
  irr::video::SColor maxStartColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,7,0));
  unsigned int lifeTimeMin = (( unsigned int)  tolua_tonumber(tolua_S,8,0));
  unsigned int lifeTimeMax = (( unsigned int)  tolua_tonumber(tolua_S,9,0));
  signed int maxAngleDegrees = (( signed int)  tolua_tonumber(tolua_S,10,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createBoxEmitter'",NULL);
#endif
  {
   irr::scene::IParticleEmitter* tolua_ret = (irr::scene::IParticleEmitter*)  self->createBoxEmitter(box,direction,minParticlesPerSecond,maxParticlePerSecond,minStartColor,maxStartColor,lifeTimeMin,lifeTimeMax,maxAngleDegrees);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createBoxEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFadeOutParticleAffector of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createFadeOutParticleAffector00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createFadeOutParticleAffector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor targetColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
  unsigned int timeNeededToFadeOut = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFadeOutParticleAffector'",NULL);
#endif
  {
   irr::scene::IParticleAffector* tolua_ret = (irr::scene::IParticleAffector*)  self->createFadeOutParticleAffector(targetColor,timeNeededToFadeOut);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IParticleAffector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFadeOutParticleAffector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createGravityAffector of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createGravityAffector00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createGravityAffector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32> gravity = *((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  unsigned int timeForceLost = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createGravityAffector'",NULL);
#endif
  {
   irr::scene::IParticleAffector* tolua_ret = (irr::scene::IParticleAffector*)  self->createGravityAffector(gravity,timeForceLost);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IParticleAffector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createGravityAffector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_render00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getName00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setName00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getID00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setID00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addChild00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_remove00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getScale00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setScale00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParent00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getParent00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_grab00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_drop00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IParticleSystemSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IParticleSystemSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IParticleSystemSceneNode* self = (irr::scene::IParticleSystemSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_delete00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const irr::scene::ITerrainSceneNode* self = (const irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox01
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int patchX = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int patchZ = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox(patchX,patchZ);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexCount of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndexCount00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMesh of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getMesh00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMesh'",NULL);
#endif
  {
   irr::scene::IMesh* tolua_ret = (irr::scene::IMesh*)  self->getMesh();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::IMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshBufferForLOD of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getMeshBufferForLOD00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getMeshBufferForLOD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::SMeshBufferLightMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::SMeshBufferLightMap* mb = ((irr::scene::SMeshBufferLightMap*)  tolua_tousertype(tolua_S,2,0));
  signed int LOD = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshBufferForLOD'",NULL);
#endif
  {
   self->getMeshBufferForLOD(*mb,LOD);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshBufferForLOD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndicesForPatch of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndicesForPatch00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndicesForPatch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<u32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::array<u32>* indices = ((irr::core::array<u32>*)  tolua_tousertype(tolua_S,2,0));
  signed int patchX = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int patchZ = (( signed int)  tolua_tonumber(tolua_S,4,0));
  signed int LOD = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndicesForPatch'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getIndicesForPatch(*indices,patchX,patchZ,LOD);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndicesForPatch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentLODOfPatches of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getCurrentLODOfPatches00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getCurrentLODOfPatches00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::array<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::array<s32>* LODs = ((irr::core::array<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentLODOfPatches'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getCurrentLODOfPatches(*LODs);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentLODOfPatches'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLODOfPatch of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setLODOfPatch00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setLODOfPatch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int patchX = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int patchZ = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int LOD = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLODOfPatch'",NULL);
#endif
  {
   self->setLODOfPatch(patchX,patchZ,LOD);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLODOfPatch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainCenter of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getTerrainCenter00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getTerrainCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainCenter'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getTerrainCenter();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCameraMovementDelta of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraMovementDelta00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraMovementDelta00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float delta = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCameraMovementDelta'",NULL);
#endif
  {
   self->setCameraMovementDelta(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCameraMovementDelta'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCameraRotationDelta of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraRotationDelta00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraRotationDelta00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float delta = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCameraRotationDelta'",NULL);
#endif
  {
   self->setCameraRotationDelta(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCameraRotationDelta'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDynamicSelectorUpdate of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setDynamicSelectorUpdate00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setDynamicSelectorUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool bVal = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDynamicSelectorUpdate'",NULL);
#endif
  {
   self->setDynamicSelectorUpdate(bVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDynamicSelectorUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: overrideLODDistance of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_overrideLODDistance00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_overrideLODDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int LOD = (( signed int)  tolua_tonumber(tolua_S,2,0));
   double newDistance = ((  double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'overrideLODDistance'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->overrideLODDistance(LOD,newDistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'overrideLODDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scaleTexture of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_scaleTexture00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_scaleTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
   float scale = ((  float)  tolua_tonumber(tolua_S,2,0));
   float scale2 = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scaleTexture'",NULL);
#endif
  {
   self->scaleTexture(scale,scale2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scaleTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_render00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getName00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setName00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox02
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getID00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setID00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_addChild00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_remove00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getScale00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setScale00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setParent00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getParent00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_grab00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_drop00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ITerrainSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITerrainSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_ITerrainSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITerrainSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITerrainSceneNode* self = (irr::scene::ITerrainSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setText00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  const wchar_t* text = ((const wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextColor of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setTextColor00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setTextColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextColor'",NULL);
#endif
  {
   self->setTextColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_ITextSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_ITextSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_render00
static int tolua_IrrLua_irr_scene_ITextSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getName00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setName00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_ITextSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getID00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setID00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_addChild00
static int tolua_IrrLua_irr_scene_ITextSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_ITextSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_ITextSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_remove00
static int tolua_IrrLua_irr_scene_ITextSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_ITextSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getScale00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setScale00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_ITextSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setParent00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_ITextSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_ITextSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getParent00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_grab00
static int tolua_IrrLua_irr_scene_ITextSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_drop00
static int tolua_IrrLua_irr_scene_ITextSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::ITextSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ITextSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_ITextSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ITextSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ITextSceneNode* self = (irr::scene::ITextSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSize of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setSize00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<f32>* size = ((irr::core::dimension2d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSize'",NULL);
#endif
  {
   self->setSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getSize00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   irr::core::dimension2d<f32>& tolua_ret = (irr::core::dimension2d<f32>&)  self->getSize();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::dimension2d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPreRender of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPreRender00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPreRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPreRender'",NULL);
#endif
  {
   self->OnPreRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPreRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPostRender of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPostRender00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPostRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int timeMs = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPostRender'",NULL);
#endif
  {
   self->OnPostRender(timeMs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPostRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: render of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_render00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_render00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'render'",NULL);
#endif
  {
   self->render();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'render'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getName00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setName00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'",NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoundingBox of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getBoundingBox00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32>& tolua_ret = (irr::core::aabbox3d<f32>&)  self->getBoundingBox();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::aabbox3d<f32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransformedBoundingBox of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getTransformedBoundingBox00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getTransformedBoundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransformedBoundingBox'",NULL);
#endif
  {
   irr::core::aabbox3d<f32> tolua_ret = (irr::core::aabbox3d<f32>)  self->getTransformedBoundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::aabbox3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::aabbox3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::aabbox3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransformedBoundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsoluteTransformation of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsoluteTransformation00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsoluteTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsoluteTransformation'",NULL);
#endif
  {
   irr::core::matrix4& tolua_ret = (irr::core::matrix4&)  self->getAbsoluteTransformation();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::matrix4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsoluteTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativeTransformation of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getRelativeTransformation00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getRelativeTransformation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativeTransformation'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getRelativeTransformation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativeTransformation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_isVisible00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setVisible00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool isVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(isVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getID00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setID00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_addChild00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_removeChild00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* child = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->removeChild(child);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAll of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAll00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAll'",NULL);
#endif
  {
   self->removeAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_remove00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimator of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_addAnimator00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_addAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimator'",NULL);
#endif
  {
   self->addAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimator of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimator00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNodeAnimator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNodeAnimator* animator = ((irr::scene::ISceneNodeAnimator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimator'",NULL);
#endif
  {
   self->removeAnimator(animator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimators of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimators00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimators00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimators'",NULL);
#endif
  {
   self->removeAnimators();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimators'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterial00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int i = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial(i);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialCount of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterialCount00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterialCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialFlag of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialFlag00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_FLAG flag = ((irr::video::E_MATERIAL_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool newvalue = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialFlag'",NULL);
#endif
  {
   self->setMaterialFlag(flag,newvalue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialTexture of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialTexture00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  signed int textureLayer = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialTexture'",NULL);
#endif
  {
   self->setMaterialTexture(textureLayer,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialType of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialType00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_MATERIAL_TYPE newType = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialType'",NULL);
#endif
  {
   self->setMaterialType(newType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getScale00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getScale();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setScale00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* scale = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'",NULL);
#endif
  {
   self->setScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getRotation00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getRotation();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setRotation00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* rotation = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'",NULL);
#endif
  {
   self->setRotation(*rotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getPosition00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setPosition00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* newpos = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'",NULL);
#endif
  {
   self->setPosition(*newpos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsolutePosition00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::vector3d<f32> tolua_ret = (irr::core::vector3d<f32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::vector3d<f32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::vector3d<f32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::vector3d<f32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAutomaticCulling of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setAutomaticCulling00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAutomaticCulling'",NULL);
#endif
  {
   self->setAutomaticCulling(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAutomaticCulling of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getAutomaticCulling00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getAutomaticCulling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAutomaticCulling'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getAutomaticCulling();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAutomaticCulling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDebugDataVisible of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setDebugDataVisible00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDebugDataVisible'",NULL);
#endif
  {
   self->setDebugDataVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDebugDataVisible of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_isDebugDataVisible00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_isDebugDataVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDebugDataVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDebugDataVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDebugDataVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setParent00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ISceneNode* newParent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'",NULL);
#endif
  {
   self->setParent(newParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTriangleSelector of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getTriangleSelector00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTriangleSelector'",NULL);
#endif
  {
   irr::scene::ITriangleSelector* tolua_ret = (irr::scene::ITriangleSelector*)  self->getTriangleSelector();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ITriangleSelector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTriangleSelector of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_setTriangleSelector00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_setTriangleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::ITriangleSelector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ITriangleSelector* selector = ((irr::scene::ITriangleSelector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTriangleSelector'",NULL);
#endif
  {
   self->setTriangleSelector(selector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTriangleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_updateAbsolutePosition00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getParent00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_grab00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_drop00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::scene::IBillboardSceneNode */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_IBillboardSceneNode_getDebugName00
static int tolua_IrrLua_irr_scene_IBillboardSceneNode_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::IBillboardSceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::IBillboardSceneNode* self = (irr::scene::IBillboardSceneNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSceneNode of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode00
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ESCENE_NODE_TYPE type = ((irr::scene::ESCENE_NODE_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addSceneNode(type,parent);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSceneNode of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode01
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
  c8* typeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* parent = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSceneNode'",NULL);
#endif
  {
   irr::scene::ISceneNode* tolua_ret = (irr::scene::ISceneNode*)  self->addSceneNode(typeName,parent);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreatableSceneNodeTypeCount of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreatableSceneNodeTypeCount00
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreatableSceneNodeTypeCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreatableSceneNodeTypeCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getCreatableSceneNodeTypeCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreatableSceneNodeTypeCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeType of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeType00
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeType'",NULL);
#endif
  {
   irr::scene::ESCENE_NODE_TYPE tolua_ret = (irr::scene::ESCENE_NODE_TYPE)  self->getCreateableSceneNodeType(idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreateableSceneNodeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeTypeName of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName00
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeTypeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getCreateableSceneNodeTypeName(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreateableSceneNodeTypeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeTypeName of class  irr::scene::ISceneNodeFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName01
static int tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNodeFactory* self = (irr::scene::ISceneNodeFactory*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ESCENE_NODE_TYPE type = ((irr::scene::ESCENE_NODE_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeTypeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getCreateableSceneNodeTypeName(type);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createSceneNodeAnimator of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ESCENE_NODE_ANIMATOR_TYPE type = ((irr::scene::ESCENE_NODE_ANIMATOR_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::scene::ISceneNode* target = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createSceneNodeAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createSceneNodeAnimator(type,target);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createSceneNodeAnimator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createSceneNodeAnimator of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator01
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::scene::ISceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
  c8* typeName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::scene::ISceneNode* target = ((irr::scene::ISceneNode*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createSceneNodeAnimator'",NULL);
#endif
  {
   irr::scene::ISceneNodeAnimator* tolua_ret = (irr::scene::ISceneNodeAnimator*)  self->createSceneNodeAnimator(typeName,target);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneNodeAnimator");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreatableSceneNodeAnimatorTypeCount of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreatableSceneNodeAnimatorTypeCount00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreatableSceneNodeAnimatorTypeCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreatableSceneNodeAnimatorTypeCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getCreatableSceneNodeAnimatorTypeCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreatableSceneNodeAnimatorTypeCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeAnimatorType of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorType00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeAnimatorType'",NULL);
#endif
  {
   irr::scene::ESCENE_NODE_ANIMATOR_TYPE tolua_ret = (irr::scene::ESCENE_NODE_ANIMATOR_TYPE)  self->getCreateableSceneNodeAnimatorType(idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreateableSceneNodeAnimatorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeAnimatorTypeName of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName00
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeAnimatorTypeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getCreateableSceneNodeAnimatorTypeName(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCreateableSceneNodeAnimatorTypeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCreateableSceneNodeAnimatorTypeName of class  irr::scene::ISceneNodeAnimatorFactory */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName01
static int tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::scene::ISceneNodeAnimatorFactory",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::scene::ISceneNodeAnimatorFactory* self = (irr::scene::ISceneNodeAnimatorFactory*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::ESCENE_NODE_ANIMATOR_TYPE type = ((irr::scene::ESCENE_NODE_ANIMATOR_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCreateableSceneNodeAnimatorTypeName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getCreateableSceneNodeAnimatorTypeName(type);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_delete00
static int tolua_IrrLua_irr_video_IVideoDriver_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: beginScene of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_beginScene00
static int tolua_IrrLua_irr_video_IVideoDriver_beginScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  bool backBuffer = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool zBuffer = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'beginScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->beginScene(backBuffer,zBuffer,color);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'beginScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endScene of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_endScene00
static int tolua_IrrLua_irr_video_IVideoDriver_endScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->endScene();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endScene of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_endScene01
static int tolua_IrrLua_irr_video_IVideoDriver_endScene01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int windowId = (( signed int)  tolua_tonumber(tolua_S,2,0));
  irr::core::rect<s32>* sourceRect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endScene'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->endScene(windowId,sourceRect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_IVideoDriver_endScene00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: queryFeature of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_queryFeature00
static int tolua_IrrLua_irr_video_IVideoDriver_queryFeature00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_VIDEO_DRIVER_FEATURE feature = ((irr::video::E_VIDEO_DRIVER_FEATURE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'queryFeature'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->queryFeature(feature);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'queryFeature'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTransform of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setTransform00
static int tolua_IrrLua_irr_video_IVideoDriver_setTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::matrix4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_TRANSFORMATION_STATE state = ((irr::video::E_TRANSFORMATION_STATE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::core::matrix4* mat = ((irr::core::matrix4*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTransform'",NULL);
#endif
  {
   self->setTransform(state,*mat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTransform of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getTransform00
static int tolua_IrrLua_irr_video_IVideoDriver_getTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_TRANSFORMATION_STATE state = ((irr::video::E_TRANSFORMATION_STATE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTransform'",NULL);
#endif
  {
   irr::core::matrix4 tolua_ret = (irr::core::matrix4)  self->getTransform(state);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::matrix4(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::matrix4));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::matrix4");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterial of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setMaterial00
static int tolua_IrrLua_irr_video_IVideoDriver_setMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterial'",NULL);
#endif
  {
   self->setMaterial(*material);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->getTexture(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureByIndex of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getTextureByIndex00
static int tolua_IrrLua_irr_video_IVideoDriver_getTextureByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int index = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureByIndex'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->getTextureByIndex(index);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureCount of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getTextureCount00
static int tolua_IrrLua_irr_video_IVideoDriver_getTextureCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTextureCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_addTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<s32>* size = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  c8* name = ((c8*)  tolua_tousertype(tolua_S,3,0));
  irr::video::ECOLOR_FORMAT format = ((irr::video::ECOLOR_FORMAT) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->addTexture(*size,name,format);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addTexture01
static int tolua_IrrLua_irr_video_IVideoDriver_addTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
  irr::video::IImage* image = ((irr::video::IImage*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->addTexture(name,image);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_IVideoDriver_addTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createRenderTargetTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createRenderTargetTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_createRenderTargetTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<s32> size = *((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createRenderTargetTexture'",NULL);
#endif
  {
   irr::video::ITexture* tolua_ret = (irr::video::ITexture*)  self->createRenderTargetTexture(size);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::ITexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createRenderTargetTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_removeTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_removeTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTexture'",NULL);
#endif
  {
   self->removeTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllTextures of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_removeAllTextures00
static int tolua_IrrLua_irr_video_IVideoDriver_removeAllTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllTextures'",NULL);
#endif
  {
   self->removeAllTextures();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeColorKeyTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeColorKeyTexture'",NULL);
#endif
  {
   self->makeColorKeyTexture(texture,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makeColorKeyTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeColorKeyTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture01
static int tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32> colorKeyPixelPos = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeColorKeyTexture'",NULL);
#endif
  {
   self->makeColorKeyTexture(texture,colorKeyPixelPos);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: makeNormalMapTexture of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_makeNormalMapTexture00
static int tolua_IrrLua_irr_video_IVideoDriver_makeNormalMapTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
   float amplitude = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'makeNormalMapTexture'",NULL);
#endif
  {
   self->makeNormalMapTexture(texture,amplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'makeNormalMapTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRenderTarget of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setRenderTarget00
static int tolua_IrrLua_irr_video_IVideoDriver_setRenderTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  bool clearBackBuffer = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool clearZBuffer = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRenderTarget'",NULL);
#endif
  {
   self->setRenderTarget(texture,clearBackBuffer,clearZBuffer,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRenderTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setViewPort of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setViewPort00
static int tolua_IrrLua_irr_video_IVideoDriver_setViewPort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* area = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setViewPort'",NULL);
#endif
  {
   self->setViewPort(*area);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setViewPort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getViewPort of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getViewPort00
static int tolua_IrrLua_irr_video_IVideoDriver_getViewPort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getViewPort'",NULL);
#endif
  {
   irr::core::rect<s32>& tolua_ret = (irr::core::rect<s32>&)  self->getViewPort();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::core::rect<s32>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getViewPort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawIndexedTriangleList of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_drawIndexedTriangleList00
static int tolua_IrrLua_irr_video_IVideoDriver_drawIndexedTriangleList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::S3DVertex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::S3DVertex* vertices = ((irr::video::S3DVertex*)  tolua_tousertype(tolua_S,2,0));
  signed int vertexCount = (( signed int)  tolua_tonumber(tolua_S,3,0));
  unsigned short indexList = (( unsigned short)  tolua_tonumber(tolua_S,4,0));
  signed int triangleCount = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawIndexedTriangleList'",NULL);
#endif
  {
   self->drawIndexedTriangleList(vertices,vertexCount,&indexList,triangleCount);
   tolua_pushnumber(tolua_S,(lua_Number)indexList);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawIndexedTriangleList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DLine of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw3DLine00
static int tolua_IrrLua_irr_video_IVideoDriver_draw3DLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* start = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::vector3d<f32>* end = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DLine'",NULL);
#endif
  {
   self->draw3DLine(*start,*end,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DTriangle of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw3DTriangle00
static int tolua_IrrLua_irr_video_IVideoDriver_draw3DTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::triangle3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::triangle3d<f32>* triangle = ((irr::core::triangle3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DTriangle'",NULL);
#endif
  {
   self->draw3DTriangle(*triangle,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DBox of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw3DBox00
static int tolua_IrrLua_irr_video_IVideoDriver_draw3DBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::aabbox3d<f32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::aabbox3d<f32> box = *((irr::core::aabbox3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DBox'",NULL);
#endif
  {
   self->draw3DBox(box,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw2DImage of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw2DImage00
static int tolua_IrrLua_irr_video_IVideoDriver_draw2DImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32>* destPos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw2DImage'",NULL);
#endif
  {
   self->draw2DImage(texture,*destPos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw2DImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw2DImage of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw2DImage01
static int tolua_IrrLua_irr_video_IVideoDriver_draw2DImage01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* texture = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32>* destPos = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* sourceRect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::rect<s32>* clipRect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
  irr::video::SColor irr = *((irr::video::SColor*)  tolua_tousertype(tolua_S,6,0));
  bool useAlphaChannelOfTexture = ((bool)  tolua_toboolean(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw2DImage'",NULL);
#endif
  {
   self->draw2DImage(texture,*destPos,*sourceRect,clipRect,irr,useAlphaChannelOfTexture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_video_IVideoDriver_draw2DImage00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw2DRectangle of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw2DRectangle00
static int tolua_IrrLua_irr_video_IVideoDriver_draw2DRectangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* pos = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw2DRectangle'",NULL);
#endif
  {
   self->draw2DRectangle(color,*pos,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw2DRectangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw2DLine of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw2DLine00
static int tolua_IrrLua_irr_video_IVideoDriver_draw2DLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* start = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32>* end = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw2DLine'",NULL);
#endif
  {
   self->draw2DLine(*start,*end,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw2DLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw2DPolygon of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_draw2DPolygon00
static int tolua_IrrLua_irr_video_IVideoDriver_draw2DPolygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> center = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
   float radius = ((  float)  tolua_tonumber(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  signed int vertexCount = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw2DPolygon'",NULL);
#endif
  {
   self->draw2DPolygon(center,radius,color,vertexCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw2DPolygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawStencilShadowVolume of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadowVolume00
static int tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadowVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::vector3d<f32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::vector3d<f32>* triangles = ((irr::core::vector3d<f32>*)  tolua_tousertype(tolua_S,2,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,3,0));
  bool zfail = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawStencilShadowVolume'",NULL);
#endif
  {
   self->drawStencilShadowVolume(triangles,count,zfail);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawStencilShadowVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawStencilShadow of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadow00
static int tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  bool clearStencilBuffer = ((bool)  tolua_toboolean(tolua_S,2,0));
  irr::video::SColor leftUpEdge = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColor rightUpEdge = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  irr::video::SColor leftDownEdge = *((irr::video::SColor*)  tolua_tousertype(tolua_S,5,0));
  irr::video::SColor rightDownEdge = *((irr::video::SColor*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawStencilShadow'",NULL);
#endif
  {
   self->drawStencilShadow(clearStencilBuffer,leftUpEdge,rightUpEdge,leftDownEdge,rightDownEdge);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawStencilShadow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawMeshBuffer of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_drawMeshBuffer00
static int tolua_IrrLua_irr_video_IVideoDriver_drawMeshBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IMeshBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IMeshBuffer* mb = ((irr::scene::IMeshBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawMeshBuffer'",NULL);
#endif
  {
   self->drawMeshBuffer(mb);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawMeshBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFog of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setFog00
static int tolua_IrrLua_irr_video_IVideoDriver_setFog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
  bool linearFog = ((bool)  tolua_toboolean(tolua_S,3,0));
   float start = ((  float)  tolua_tonumber(tolua_S,4,0));
   float end = ((  float)  tolua_tonumber(tolua_S,5,0));
   float density = ((  float)  tolua_tonumber(tolua_S,6,0));
  bool pixelFog = ((bool)  tolua_toboolean(tolua_S,7,0));
  bool rangeFog = ((bool)  tolua_toboolean(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFog'",NULL);
#endif
  {
   self->setFog(color,linearFog,start,end,density,pixelFog,rangeFog);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScreenSize of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getScreenSize00
static int tolua_IrrLua_irr_video_IVideoDriver_getScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScreenSize'",NULL);
#endif
  {
   irr::core::dimension2d<s32> tolua_ret = (irr::core::dimension2d<s32>)  self->getScreenSize();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::dimension2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::dimension2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFPS of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getFPS00
static int tolua_IrrLua_irr_video_IVideoDriver_getFPS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFPS'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getFPS();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFPS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPrimitiveCountDrawn of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getPrimitiveCountDrawn00
static int tolua_IrrLua_irr_video_IVideoDriver_getPrimitiveCountDrawn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPrimitiveCountDrawn'",NULL);
#endif
  {
   unsigned int tolua_ret = ( unsigned int)  self->getPrimitiveCountDrawn();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPrimitiveCountDrawn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: deleteAllDynamicLights of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_deleteAllDynamicLights00
static int tolua_IrrLua_irr_video_IVideoDriver_deleteAllDynamicLights00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'deleteAllDynamicLights'",NULL);
#endif
  {
   self->deleteAllDynamicLights();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'deleteAllDynamicLights'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDynamicLight of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addDynamicLight00
static int tolua_IrrLua_irr_video_IVideoDriver_addDynamicLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SLight",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SLight* light = ((irr::video::SLight*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDynamicLight'",NULL);
#endif
  {
   self->addDynamicLight(*light);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDynamicLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmbientLight of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setAmbientLight00
static int tolua_IrrLua_irr_video_IVideoDriver_setAmbientLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColorf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColorf* color = ((irr::video::SColorf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmbientLight'",NULL);
#endif
  {
   self->setAmbientLight(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmbientLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximalDynamicLightAmount of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getMaximalDynamicLightAmount00
static int tolua_IrrLua_irr_video_IVideoDriver_getMaximalDynamicLightAmount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximalDynamicLightAmount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaximalDynamicLightAmount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximalDynamicLightAmount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDynamicLightCount of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getDynamicLightCount00
static int tolua_IrrLua_irr_video_IVideoDriver_getDynamicLightCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDynamicLightCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getDynamicLightCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDynamicLightCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDynamicLight of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getDynamicLight00
static int tolua_IrrLua_irr_video_IVideoDriver_getDynamicLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDynamicLight'",NULL);
#endif
  {
   irr::video::SLight& tolua_ret = (irr::video::SLight&)  self->getDynamicLight(idx);
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SLight");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDynamicLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getName00
static int tolua_IrrLua_irr_video_IVideoDriver_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addExternalImageLoader of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addExternalImageLoader00
static int tolua_IrrLua_irr_video_IVideoDriver_addExternalImageLoader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IImageLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IImageLoader* loader = ((irr::video::IImageLoader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addExternalImageLoader'",NULL);
#endif
  {
   self->addExternalImageLoader(loader);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExternalImageLoader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addExternalImageWriter of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addExternalImageWriter00
static int tolua_IrrLua_irr_video_IVideoDriver_addExternalImageWriter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IImageWriter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IImageWriter* writer = ((irr::video::IImageWriter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addExternalImageWriter'",NULL);
#endif
  {
   self->addExternalImageWriter(writer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addExternalImageWriter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximalPrimitiveCount of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getMaximalPrimitiveCount00
static int tolua_IrrLua_irr_video_IVideoDriver_getMaximalPrimitiveCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximalPrimitiveCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaximalPrimitiveCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximalPrimitiveCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureCreationFlag of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setTextureCreationFlag00
static int tolua_IrrLua_irr_video_IVideoDriver_setTextureCreationFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_TEXTURE_CREATION_FLAG flag = ((irr::video::E_TEXTURE_CREATION_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
  bool enabled = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureCreationFlag'",NULL);
#endif
  {
   self->setTextureCreationFlag(flag,enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureCreationFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureCreationFlag of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getTextureCreationFlag00
static int tolua_IrrLua_irr_video_IVideoDriver_getTextureCreationFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::E_TEXTURE_CREATION_FLAG flag = ((irr::video::E_TEXTURE_CREATION_FLAG) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureCreationFlag'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getTextureCreationFlag(flag);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureCreationFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createImageFromFile of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile00
static int tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  char* filename = ((char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createImageFromFile'",NULL);
#endif
  {
   irr::video::IImage* tolua_ret = (irr::video::IImage*)  self->createImageFromFile(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createImageFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createImageFromFile of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile01
static int tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::io::IReadFile* file = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createImageFromFile'",NULL);
#endif
  {
   irr::video::IImage* tolua_ret = (irr::video::IImage*)  self->createImageFromFile(file);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IImage");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeImageToFile of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_writeImageToFile00
static int tolua_IrrLua_irr_video_IVideoDriver_writeImageToFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IImage* image = ((irr::video::IImage*)  tolua_tousertype(tolua_S,2,0));
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeImageToFile'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->writeImageToFile(image,filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeImageToFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createImageFromData of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createImageFromData00
static int tolua_IrrLua_irr_video_IVideoDriver_createImageFromData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ECOLOR_FORMAT format = ((irr::video::ECOLOR_FORMAT) (int)  tolua_tonumber(tolua_S,2,0));
  irr::core::dimension2d<s32>* size = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  void* data = ((void*)  tolua_touserdata(tolua_S,4,0));
  bool ownForeignMemory = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createImageFromData'",NULL);
#endif
  {
   irr::video::IImage* tolua_ret = (irr::video::IImage*)  self->createImageFromData(format,*size,data,ownForeignMemory);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createImageFromData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnResize of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_OnResize00
static int tolua_IrrLua_irr_video_IVideoDriver_OnResize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::core::dimension2d<s32>* size = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnResize'",NULL);
#endif
  {
   self->OnResize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnResize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMaterialRenderer of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_addMaterialRenderer00
static int tolua_IrrLua_irr_video_IVideoDriver_addMaterialRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IMaterialRenderer* renderer = ((irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,2,0));
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMaterialRenderer'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addMaterialRenderer(renderer,filename);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMaterialRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialRenderer of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getMaterialRenderer00
static int tolua_IrrLua_irr_video_IVideoDriver_getMaterialRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialRenderer'",NULL);
#endif
  {
   irr::video::IMaterialRenderer* tolua_ret = (irr::video::IMaterialRenderer*)  self->getMaterialRenderer(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IMaterialRenderer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialRendererCount of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererCount00
static int tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialRendererCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMaterialRendererCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialRendererCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialRendererName of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererName00
static int tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialRendererName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getMaterialRendererName(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialRendererName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialRendererName of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_setMaterialRendererName00
static int tolua_IrrLua_irr_video_IVideoDriver_setMaterialRendererName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
  c8* name = ((c8*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialRendererName'",NULL);
#endif
  {
   self->setMaterialRendererName(idx,name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialRendererName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createAttributesFromMaterial of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createAttributesFromMaterial00
static int tolua_IrrLua_irr_video_IVideoDriver_createAttributesFromMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createAttributesFromMaterial'",NULL);
#endif
  {
   irr::io::IAttributes* tolua_ret = (irr::io::IAttributes*)  self->createAttributesFromMaterial(*material);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IAttributes");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createAttributesFromMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fillMaterialStructureFromAttributes of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_fillMaterialStructureFromAttributes00
static int tolua_IrrLua_irr_video_IVideoDriver_fillMaterialStructureFromAttributes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::io::IAttributes",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* outMaterial = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
  irr::io::IAttributes* attributes = ((irr::io::IAttributes*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fillMaterialStructureFromAttributes'",NULL);
#endif
  {
   self->fillMaterialStructureFromAttributes(*outMaterial,attributes);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fillMaterialStructureFromAttributes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExposedVideoData of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getExposedVideoData00
static int tolua_IrrLua_irr_video_IVideoDriver_getExposedVideoData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExposedVideoData'",NULL);
#endif
  {
   irr::video::SExposedVideoData tolua_ret = (irr::video::SExposedVideoData)  self->getExposedVideoData();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SExposedVideoData(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SExposedVideoData");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SExposedVideoData));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SExposedVideoData");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExposedVideoData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDriverType of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getDriverType00
static int tolua_IrrLua_irr_video_IVideoDriver_getDriverType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDriverType'",NULL);
#endif
  {
   irr::video::E_DRIVER_TYPE tolua_ret = (irr::video::E_DRIVER_TYPE)  self->getDriverType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDriverType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGPUProgrammingServices of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getGPUProgrammingServices00
static int tolua_IrrLua_irr_video_IVideoDriver_getGPUProgrammingServices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGPUProgrammingServices'",NULL);
#endif
  {
   irr::video::IGPUProgrammingServices* tolua_ret = (irr::video::IGPUProgrammingServices*)  self->getGPUProgrammingServices();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IGPUProgrammingServices");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGPUProgrammingServices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearZBuffer of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_clearZBuffer00
static int tolua_IrrLua_irr_video_IVideoDriver_clearZBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearZBuffer'",NULL);
#endif
  {
   self->clearZBuffer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearZBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createScreenShot of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_createScreenShot00
static int tolua_IrrLua_irr_video_IVideoDriver_createScreenShot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createScreenShot'",NULL);
#endif
  {
   irr::video::IImage* tolua_ret = (irr::video::IImage*)  self->createScreenShot();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createScreenShot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_grab00
static int tolua_IrrLua_irr_video_IVideoDriver_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_drop00
static int tolua_IrrLua_irr_video_IVideoDriver_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::IVideoDriver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IVideoDriver_getDebugName00
static int tolua_IrrLua_irr_video_IVideoDriver_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* self = (irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IShaderConstantSetCallBack_delete00
static int tolua_IrrLua_irr_video_IShaderConstantSetCallBack_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSetConstants of class  irr::video::IShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IShaderConstantSetCallBack_OnSetConstants00
static int tolua_IrrLua_irr_video_IShaderConstantSetCallBack_OnSetConstants00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IMaterialRendererServices* services = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,2,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSetConstants'",NULL);
#endif
  {
   self->OnSetConstants(services,userData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSetConstants'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IShaderConstantSetCallBack_grab00
static int tolua_IrrLua_irr_video_IShaderConstantSetCallBack_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IShaderConstantSetCallBack_drop00
static int tolua_IrrLua_irr_video_IShaderConstantSetCallBack_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::video::IShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IShaderConstantSetCallBack_getDebugName00
static int tolua_IrrLua_irr_video_IShaderConstantSetCallBack_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IShaderConstantSetCallBack* self = (irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addHighLevelShaderMaterial of class  irr::video::IGPUProgrammingServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterial00
static int tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IGPUProgrammingServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IGPUProgrammingServices* self = (irr::video::IGPUProgrammingServices*)  tolua_tousertype(tolua_S,1,0);
  c8* vertexShaderProgram = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* vertexShaderEntryPointName = ((c8*)  tolua_tousertype(tolua_S,3,0));
  irr::video::E_VERTEX_SHADER_TYPE vsCompileTarget = ((irr::video::E_VERTEX_SHADER_TYPE) (int)  tolua_tonumber(tolua_S,4,0));
  c8* pixelShaderProgram = ((c8*)  tolua_tousertype(tolua_S,5,0));
  c8* pixelShaderEntryPointName = ((c8*)  tolua_tousertype(tolua_S,6,0));
  irr::video::E_PIXEL_SHADER_TYPE psCompileTarget = ((irr::video::E_PIXEL_SHADER_TYPE) (int)  tolua_tonumber(tolua_S,7,0));
  irr::video::IShaderConstantSetCallBack* callback = ((irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,8,0));
  irr::video::E_MATERIAL_TYPE baseMaterial = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,9,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,10,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addHighLevelShaderMaterial'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addHighLevelShaderMaterial(vertexShaderProgram,vertexShaderEntryPointName,vsCompileTarget,pixelShaderProgram,pixelShaderEntryPointName,psCompileTarget,callback,baseMaterial,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addHighLevelShaderMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addHighLevelShaderMaterialFromFiles of class  irr::video::IGPUProgrammingServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles00
static int tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IGPUProgrammingServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IGPUProgrammingServices* self = (irr::video::IGPUProgrammingServices*)  tolua_tousertype(tolua_S,1,0);
  c8* vertexShaderProgram = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* vertexShaderEntryPointName = ((c8*)  tolua_tousertype(tolua_S,3,0));
  irr::video::E_VERTEX_SHADER_TYPE vsCompileTarget = ((irr::video::E_VERTEX_SHADER_TYPE) (int)  tolua_tonumber(tolua_S,4,0));
  c8* pixelShaderProgram = ((c8*)  tolua_tousertype(tolua_S,5,0));
  c8* pixelShaderEntryPointName = ((c8*)  tolua_tousertype(tolua_S,6,0));
  irr::video::E_PIXEL_SHADER_TYPE psCompileTarget = ((irr::video::E_PIXEL_SHADER_TYPE) (int)  tolua_tonumber(tolua_S,7,0));
  irr::video::IShaderConstantSetCallBack* callback = ((irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,8,0));
  irr::video::E_MATERIAL_TYPE baseMaterial = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,9,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,10,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addHighLevelShaderMaterialFromFiles'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addHighLevelShaderMaterialFromFiles(vertexShaderProgram,vertexShaderEntryPointName,vsCompileTarget,pixelShaderProgram,pixelShaderEntryPointName,psCompileTarget,callback,baseMaterial,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addHighLevelShaderMaterialFromFiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addShaderMaterial of class  irr::video::IGPUProgrammingServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterial00
static int tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IGPUProgrammingServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IGPUProgrammingServices* self = (irr::video::IGPUProgrammingServices*)  tolua_tousertype(tolua_S,1,0);
  c8* vertexShaderProgram = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* pixelShaderProgram = ((c8*)  tolua_tousertype(tolua_S,3,0));
  irr::video::IShaderConstantSetCallBack* callback = ((irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,4,0));
  irr::video::E_MATERIAL_TYPE baseMaterial = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,5,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addShaderMaterial'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addShaderMaterial(vertexShaderProgram,pixelShaderProgram,callback,baseMaterial,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addShaderMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addShaderMaterialFromFiles of class  irr::video::IGPUProgrammingServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterialFromFiles00
static int tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterialFromFiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IGPUProgrammingServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"c8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::IShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IGPUProgrammingServices* self = (irr::video::IGPUProgrammingServices*)  tolua_tousertype(tolua_S,1,0);
  c8* vertexShaderProgramFileName = ((c8*)  tolua_tousertype(tolua_S,2,0));
  c8* pixelShaderProgramFileName = ((c8*)  tolua_tousertype(tolua_S,3,0));
  irr::video::IShaderConstantSetCallBack* callback = ((irr::video::IShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,4,0));
  irr::video::E_MATERIAL_TYPE baseMaterial = ((irr::video::E_MATERIAL_TYPE) (int)  tolua_tonumber(tolua_S,5,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addShaderMaterialFromFiles'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addShaderMaterialFromFiles(vertexShaderProgramFileName,pixelShaderProgramFileName,callback,baseMaterial,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addShaderMaterialFromFiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::IrrLuaSetVertexShaderConstant2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaSetVertexShaderConstant200
static int tolua_IrrLua_irr_video_IrrLuaSetVertexShaderConstant200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_istable(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* services = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0));
  signed int start = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int ucount = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifdef __cplusplus
   float* data = new float[count];
#else
   float* data = (float*) malloc((count)*sizeof(float));
#endif
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isnumberarray(tolua_S,5,count,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<count;i++)
    data[i] = ((float)  tolua_tofieldnumber(tolua_S,5,i+1,0));
   }
  }
  {
   irr::video::IrrLuaSetVertexShaderConstant2(services,start,ucount,count,data);
  }
  {
   int i;
   for(i=0; i<count;i++)
    tolua_pushfieldnumber(tolua_S,5,i+1,(lua_Number) data[i]);
  }
#ifdef __cplusplus
  delete [] data;
#else
  free(data);
#endif
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IrrLuaSetVertexShaderConstant2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::IrrLuaSetPixelShaderConstant2 */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaSetPixelShaderConstant200
static int tolua_IrrLua_irr_video_IrrLuaSetPixelShaderConstant200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_istable(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* services = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0));
  signed int start = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int ucount = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int count = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifdef __cplusplus
   float* data = new float[count];
#else
   float* data = (float*) malloc((count)*sizeof(float));
#endif
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isnumberarray(tolua_S,5,count,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<count;i++)
    data[i] = ((float)  tolua_tofieldnumber(tolua_S,5,i+1,0));
   }
  }
  {
   irr::video::IrrLuaSetPixelShaderConstant2(services,start,ucount,count,data);
  }
  {
   int i;
   for(i=0; i<count;i++)
    tolua_pushfieldnumber(tolua_S,5,i+1,(lua_Number) data[i]);
  }
#ifdef __cplusplus
  delete [] data;
#else
  free(data);
#endif
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IrrLuaSetPixelShaderConstant2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_delete00
static int tolua_IrrLua_irr_video_IMaterialRenderer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSetMaterial of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_OnSetMaterial00
static int tolua_IrrLua_irr_video_IMaterialRenderer_OnSetMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SMaterial* lastMaterial = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,3,0));
  bool resetAllRenderstates = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::video::IMaterialRendererServices* services = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSetMaterial'",NULL);
#endif
  {
   self->OnSetMaterial(*material,*lastMaterial,resetAllRenderstates,services);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSetMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRender of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_OnRender00
static int tolua_IrrLua_irr_video_IMaterialRenderer_OnRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IMaterialRendererServices* service = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,2,0));
  irr::video::E_VERTEX_TYPE vtxtype = ((irr::video::E_VERTEX_TYPE) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRender'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnRender(service,vtxtype);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnUnsetMaterial of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_OnUnsetMaterial00
static int tolua_IrrLua_irr_video_IMaterialRenderer_OnUnsetMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnUnsetMaterial'",NULL);
#endif
  {
   self->OnUnsetMaterial();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnUnsetMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTransparent of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_isTransparent00
static int tolua_IrrLua_irr_video_IMaterialRenderer_isTransparent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTransparent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTransparent();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTransparent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRenderCapability of class  irr::video::IMaterialRenderer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRenderer_getRenderCapability00
static int tolua_IrrLua_irr_video_IMaterialRenderer_getRenderCapability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRenderer* self = (irr::video::IMaterialRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRenderCapability'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getRenderCapability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRenderCapability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_delete00
static int tolua_IrrLua_irr_video_IMaterialRendererServices_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBasicRenderStates of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_setBasicRenderStates00
static int tolua_IrrLua_irr_video_IMaterialRendererServices_setBasicRenderStates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SMaterial* lastMaterial = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,3,0));
  bool resetAllRenderstates = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBasicRenderStates'",NULL);
#endif
  {
   self->setBasicRenderStates(*material,*lastMaterial,resetAllRenderstates);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBasicRenderStates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexShaderConstant of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant00
static int tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
   float floats = ((  float)  tolua_tonumber(tolua_S,3,0));
  int count = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexShaderConstant'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setVertexShaderConstant(name,&floats,count);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)floats);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVertexShaderConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexShaderConstant of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant01
static int tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
   float data = ((  float)  tolua_tonumber(tolua_S,2,0));
  signed int startRegister = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int constantAmount = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexShaderConstant'",NULL);
#endif
  {
   self->setVertexShaderConstant(&data,startRegister,constantAmount);
   tolua_pushnumber(tolua_S,(lua_Number)data);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPixelShaderConstant of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant00
static int tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
  c8* name = ((c8*)  tolua_tousertype(tolua_S,2,0));
  const float floats = ((const float)  tolua_tonumber(tolua_S,3,0));
  int count = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPixelShaderConstant'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setPixelShaderConstant(name,&floats,count);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)floats);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPixelShaderConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPixelShaderConstant of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant01
static int tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
   float data = ((  float)  tolua_tonumber(tolua_S,2,0));
  signed int startRegister = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int constantAmount = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPixelShaderConstant'",NULL);
#endif
  {
   self->setPixelShaderConstant(&data,startRegister,constantAmount);
   tolua_pushnumber(tolua_S,(lua_Number)data);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoDriver of class  irr::video::IMaterialRendererServices */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IMaterialRendererServices_getVideoDriver00
static int tolua_IrrLua_irr_video_IMaterialRendererServices_getVideoDriver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IMaterialRendererServices* self = (irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoDriver'",NULL);
#endif
  {
   irr::video::IVideoDriver* tolua_ret = (irr::video::IVideoDriver*)  self->getVideoDriver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IVideoDriver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoDriver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::IrrLuaIShaderConstantSetCallBack* tolua_ret = (irr::video::IrrLuaIShaderConstantSetCallBack*)  new irr::video::IrrLuaIShaderConstantSetCallBack();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IrrLuaIShaderConstantSetCallBack");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00_local
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::video::IrrLuaIShaderConstantSetCallBack* tolua_ret = (irr::video::IrrLuaIShaderConstantSetCallBack*)  new irr::video::IrrLuaIShaderConstantSetCallBack();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::video::IrrLuaIShaderConstantSetCallBack");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_delete00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSetConstants of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_OnSetConstants00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_OnSetConstants00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::IMaterialRendererServices",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
  irr::video::IMaterialRendererServices* services = ((irr::video::IMaterialRendererServices*)  tolua_tousertype(tolua_S,2,0));
  signed int userData = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSetConstants'",NULL);
#endif
  {
   self->OnSetConstants(services,userData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSetConstants'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_grab00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_drop00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::video::IrrLuaIShaderConstantSetCallBack */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_GetProxy00
static int tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IrrLuaIShaderConstantSetCallBack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IrrLuaIShaderConstantSetCallBack* self = (irr::video::IrrLuaIShaderConstantSetCallBack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_delete00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawAll of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_drawAll00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_drawAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawAll'",NULL);
#endif
  {
   self->drawAll();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFocus of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_setFocus00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_setFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFocus'",NULL);
#endif
  {
   self->setFocus(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFocus of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_removeFocus00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_removeFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFocus'",NULL);
#endif
  {
   self->removeFocus(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasFocus of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_hasFocus00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_hasFocus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasFocus'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasFocus(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasFocus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoDriver of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getVideoDriver00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getVideoDriver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoDriver'",NULL);
#endif
  {
   irr::video::IVideoDriver* tolua_ret = (irr::video::IVideoDriver*)  self->getVideoDriver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IVideoDriver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoDriver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: postEventFromUser of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_postEventFromUser00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_postEventFromUser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'postEventFromUser'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->postEventFromUser(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'postEventFromUser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUserEventReceiver of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_setUserEventReceiver00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_setUserEventReceiver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::IEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::IEventReceiver* evr = ((irr::IEventReceiver*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUserEventReceiver'",NULL);
#endif
  {
   self->setUserEventReceiver(evr);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUserEventReceiver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkin of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getSkin00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getSkin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkin'",NULL);
#endif
  {
   irr::gui::IGUISkin* tolua_ret = (irr::gui::IGUISkin*)  self->getSkin();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUISkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkin of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_setSkin00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_setSkin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUISkin* skin = ((irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkin'",NULL);
#endif
  {
   self->setSkin(skin);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createSkin of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_createSkin00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_createSkin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_SKIN_TYPE type = ((irr::gui::EGUI_SKIN_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createSkin'",NULL);
#endif
  {
   irr::gui::IGUISkin* tolua_ret = (irr::gui::IGUISkin*)  self->createSkin(type);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUISkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createSkin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFont of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getFont00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"c8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  c8* filename = ((c8*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFont'",NULL);
#endif
  {
   irr::gui::IGUIFont* tolua_ret = (irr::gui::IGUIFont*)  self->getFont(filename);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBuiltInFont of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getBuiltInFont00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getBuiltInFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBuiltInFont'",NULL);
#endif
  {
   irr::gui::IGUIFont* tolua_ret = (irr::gui::IGUIFont*)  self->getBuiltInFont();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBuiltInFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRootGUIElement of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getRootGUIElement00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getRootGUIElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRootGUIElement'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getRootGUIElement();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRootGUIElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addButton of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addButton00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addButton'",NULL);
#endif
  {
   irr::gui::IGUIButton* tolua_ret = (irr::gui::IGUIButton*)  self->addButton(*rectangle,parent,id,text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWindow of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addWindow00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  bool modal = ((bool)  tolua_toboolean(tolua_S,3,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,4,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWindow'",NULL);
#endif
  {
   irr::gui::IGUIWindow* tolua_ret = (irr::gui::IGUIWindow*)  self->addWindow(*rectangle,modal,text,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIWindow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMessageBox of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addMessageBox00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addMessageBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* caption = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
  bool modal = ((bool)  tolua_toboolean(tolua_S,4,0));
  signed int flags = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,6,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMessageBox'",NULL);
#endif
  {
   irr::gui::IGUIWindow* tolua_ret = (irr::gui::IGUIWindow*)  self->addMessageBox(caption,text,modal,flags,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIWindow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMessageBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addScrollBar of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addScrollBar00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addScrollBar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  bool horizontal = ((bool)  tolua_toboolean(tolua_S,2,0));
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addScrollBar'",NULL);
#endif
  {
   irr::gui::IGUIScrollBar* tolua_ret = (irr::gui::IGUIScrollBar*)  self->addScrollBar(horizontal,*rectangle,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIScrollBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addScrollBar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addImage of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addImage00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::position2d<s32> pos = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,3,0));
  bool useAlphaChannel = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addImage'",NULL);
#endif
  {
   irr::gui::IGUIImage* tolua_ret = (irr::gui::IGUIImage*)  self->addImage(image,pos,useAlphaChannel,parent,id,text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addImage of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addImage01
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addImage01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addImage'",NULL);
#endif
  {
   irr::gui::IGUIImage* tolua_ret = (irr::gui::IGUIImage*)  self->addImage(*rectangle,parent,id,text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIImage");
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_gui_IGUIEnvironment_addImage00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addCheckBox of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addCheckBox00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addCheckBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  bool checked = ((bool)  tolua_toboolean(tolua_S,2,0));
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addCheckBox'",NULL);
#endif
  {
   irr::gui::IGUICheckBox* tolua_ret = (irr::gui::IGUICheckBox*)  self->addCheckBox(checked,*rectangle,parent,id,text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUICheckBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addCheckBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addListBox of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addListBox00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addListBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  bool drawBackground = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addListBox'",NULL);
#endif
  {
   irr::gui::IGUIListBox* tolua_ret = (irr::gui::IGUIListBox*)  self->addListBox(*rectangle,parent,id,drawBackground);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIListBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addListBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMeshViewer of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addMeshViewer00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addMeshViewer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMeshViewer'",NULL);
#endif
  {
   irr::gui::IGUIMeshViewer* tolua_ret = (irr::gui::IGUIMeshViewer*)  self->addMeshViewer(*rectangle,parent,id,text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIMeshViewer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMeshViewer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFileOpenDialog of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addFileOpenDialog00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addFileOpenDialog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* title = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  bool modal = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFileOpenDialog'",NULL);
#endif
  {
   irr::gui::IGUIFileOpenDialog* tolua_ret = (irr::gui::IGUIFileOpenDialog*)  self->addFileOpenDialog(title,modal,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIFileOpenDialog");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFileOpenDialog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addStaticText of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addStaticText00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addStaticText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  bool border = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool wordWrap = ((bool)  tolua_toboolean(tolua_S,5,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,6,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,7,0));
  bool fillBackground = ((bool)  tolua_toboolean(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addStaticText'",NULL);
#endif
  {
   irr::gui::IGUIStaticText* tolua_ret = (irr::gui::IGUIStaticText*)  self->addStaticText(text,*rectangle,border,wordWrap,parent,id,fillBackground);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIStaticText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addStaticText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEditBox of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addEditBox00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addEditBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  bool border = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEditBox'",NULL);
#endif
  {
   irr::gui::IGUIEditBox* tolua_ret = (irr::gui::IGUIEditBox*)  self->addEditBox(text,*rectangle,border,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEditBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addInOutFader of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addInOutFader00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addInOutFader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addInOutFader'",NULL);
#endif
  {
   irr::gui::IGUIInOutFader* tolua_ret = (irr::gui::IGUIInOutFader*)  self->addInOutFader(rectangle,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIInOutFader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addInOutFader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTabControl of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addTabControl00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addTabControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  bool fillbackground = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool border = ((bool)  tolua_toboolean(tolua_S,5,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTabControl'",NULL);
#endif
  {
   irr::gui::IGUITabControl* tolua_ret = (irr::gui::IGUITabControl*)  self->addTabControl(*rectangle,parent,fillbackground,border,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUITabControl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTabControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTab of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addTab00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTab'",NULL);
#endif
  {
   irr::gui::IGUITab* tolua_ret = (irr::gui::IGUITab*)  self->addTab(*rectangle,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUITab");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addContextMenu of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addContextMenu00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addContextMenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addContextMenu'",NULL);
#endif
  {
   irr::gui::IGUIContextMenu* tolua_ret = (irr::gui::IGUIContextMenu*)  self->addContextMenu(*rectangle,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIContextMenu");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addContextMenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMenu of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addMenu00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addMenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMenu'",NULL);
#endif
  {
   irr::gui::IGUIContextMenu* tolua_ret = (irr::gui::IGUIContextMenu*)  self->addMenu(parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIContextMenu");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addToolBar of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addToolBar00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addToolBar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addToolBar'",NULL);
#endif
  {
   irr::gui::IGUIToolBar* tolua_ret = (irr::gui::IGUIToolBar*)  self->addToolBar(parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIToolBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addToolBar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addComboBox of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_addComboBox00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_addComboBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* rectangle = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,3,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addComboBox'",NULL);
#endif
  {
   irr::gui::IGUIComboBox* tolua_ret = (irr::gui::IGUIComboBox*)  self->addComboBox(*rectangle,parent,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIComboBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addComboBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_grab00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_drop00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIEnvironment */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEnvironment_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIEnvironment_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEnvironment* self = (irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_new00
static int tolua_IrrLua_irr_gui_IGUIElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::EGUI_ELEMENT_TYPE type = ((irr::gui::EGUI_ELEMENT_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::gui::IGUIEnvironment* environment = ((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::core::rect<s32> rectangle = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  new irr::gui::IGUIElement(type,environment,parent,id,rectangle);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_new00_local
static int tolua_IrrLua_irr_gui_IGUIElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::EGUI_ELEMENT_TYPE type = ((irr::gui::EGUI_ELEMENT_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::gui::IGUIEnvironment* environment = ((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::core::rect<s32> rectangle = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  new irr::gui::IGUIElement(type,environment,parent,id,rectangle);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_delete00
static int tolua_IrrLua_irr_gui_IGUIElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getParent00
static int tolua_IrrLua_irr_gui_IGUIElement_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIElement_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIElement_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIElement_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIElement_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIElement_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_addChild00
static int tolua_IrrLua_irr_gui_IGUIElement_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_removeChild00
static int tolua_IrrLua_irr_gui_IGUIElement_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_remove00
static int tolua_IrrLua_irr_gui_IGUIElement_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_draw00
static int tolua_IrrLua_irr_gui_IGUIElement_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_move00
static int tolua_IrrLua_irr_gui_IGUIElement_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_isVisible00
static int tolua_IrrLua_irr_gui_IGUIElement_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_setVisible00
static int tolua_IrrLua_irr_gui_IGUIElement_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIElement_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIElement_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_setText00
static int tolua_IrrLua_irr_gui_IGUIElement_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getText00
static int tolua_IrrLua_irr_gui_IGUIElement_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getID00
static int tolua_IrrLua_irr_gui_IGUIElement_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_setID00
static int tolua_IrrLua_irr_gui_IGUIElement_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIElement_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIElement_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getType00
static int tolua_IrrLua_irr_gui_IGUIElement_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIElement_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_grab00
static int tolua_IrrLua_irr_gui_IGUIElement_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_drop00
static int tolua_IrrLua_irr_gui_IGUIElement_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIElement_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIElement_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __irr of class  irr::gui::IGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IGUIElement___irr__IEventReceiver__
static int tolua_get_irr__gui__IGUIElement___irr__IEventReceiver__(lua_State* tolua_S)
{
  irr::gui::IGUIElement* self = (irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__irr'",NULL);
#endif
#ifdef __cplusplus
  tolua_pushusertype(tolua_S,(void*)static_cast<irr::IEventReceiver*>(self), "irr::IEventReceiver");
#else
  tolua_pushusertype(tolua_S,(void*)((irr::IEventReceiver*)self), "irr::IEventReceiver");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_delete00
static int tolua_IrrLua_irr_gui_IGUICheckBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setChecked of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setChecked00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setChecked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  bool checked = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setChecked'",NULL);
#endif
  {
   self->setChecked(checked);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setChecked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isChecked of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_isChecked00
static int tolua_IrrLua_irr_gui_IGUICheckBox_isChecked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isChecked'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isChecked();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isChecked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getParent00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUICheckBox_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_addChild00
static int tolua_IrrLua_irr_gui_IGUICheckBox_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_removeChild00
static int tolua_IrrLua_irr_gui_IGUICheckBox_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_remove00
static int tolua_IrrLua_irr_gui_IGUICheckBox_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_draw00
static int tolua_IrrLua_irr_gui_IGUICheckBox_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_move00
static int tolua_IrrLua_irr_gui_IGUICheckBox_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_isVisible00
static int tolua_IrrLua_irr_gui_IGUICheckBox_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setVisible00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_isEnabled00
static int tolua_IrrLua_irr_gui_IGUICheckBox_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setEnabled00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setText00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getText00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getID00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_setID00
static int tolua_IrrLua_irr_gui_IGUICheckBox_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_OnEvent00
static int tolua_IrrLua_irr_gui_IGUICheckBox_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_bringToFront00
static int tolua_IrrLua_irr_gui_IGUICheckBox_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getType00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_grab00
static int tolua_IrrLua_irr_gui_IGUICheckBox_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_drop00
static int tolua_IrrLua_irr_gui_IGUICheckBox_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUICheckBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUICheckBox_getDebugName00
static int tolua_IrrLua_irr_gui_IGUICheckBox_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUICheckBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUICheckBox* self = (irr::gui::IGUICheckBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_delete00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCount of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCount00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getItemCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addItem of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_addItem00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  signed int commandId = (( signed int)  tolua_tonumber(tolua_S,3,0));
  bool enabled = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool hasSubMenu = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addItem'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addItem(text,commandId,enabled,hasSubMenu);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSeparator of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_addSeparator00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_addSeparator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSeparator'",NULL);
#endif
  {
   self->addSeparator();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSeparator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemText of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getItemText00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getItemText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getItemText(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemText of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setItemText00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setItemText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemText'",NULL);
#endif
  {
   self->setItemText(idx,text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isItemEnabled of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_isItemEnabled00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_isItemEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isItemEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isItemEnabled(idx);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isItemEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemEnabled of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setItemEnabled00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setItemEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool enabled = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemEnabled'",NULL);
#endif
  {
   self->setItemEnabled(idx,enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeItem of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_removeItem00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_removeItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeItem'",NULL);
#endif
  {
   self->removeItem(idx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllItems of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_removeAllItems00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_removeAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllItems'",NULL);
#endif
  {
   self->removeAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelectedItem of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getSelectedItem00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getSelectedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelectedItem'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSelectedItem();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelectedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCommandId of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCommandId00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCommandId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCommandId'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getItemCommandId(idx);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCommandId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setItemCommandId of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setItemCommandId00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setItemCommandId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setItemCommandId'",NULL);
#endif
  {
   self->setItemCommandId(idx,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setItemCommandId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSubMenu of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getSubMenu00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getSubMenu00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSubMenu'",NULL);
#endif
  {
   irr::gui::IGUIContextMenu* tolua_ret = (irr::gui::IGUIContextMenu*)  self->getSubMenu(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIContextMenu");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSubMenu'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getParent00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_addChild00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_removeChild00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_remove00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_draw00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_move00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_isVisible00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setVisible00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setText00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getText00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getID00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_setID00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getType00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_grab00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_drop00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIContextMenu */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIContextMenu_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIContextMenu_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIContextMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIContextMenu* self = (irr::gui::IGUIContextMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_delete00
static int tolua_IrrLua_irr_gui_IGUIComboBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCount of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getItemCount00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getItemCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItem of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getItem00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItem'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getItem(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addItem of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_addItem00
static int tolua_IrrLua_irr_gui_IGUIComboBox_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addItem'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addItem(text);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_clear00
static int tolua_IrrLua_irr_gui_IGUIComboBox_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelected of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getSelected00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelected'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSelected();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelected of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setSelected00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelected'",NULL);
#endif
  {
   self->setSelected(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getParent00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIComboBox_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_addChild00
static int tolua_IrrLua_irr_gui_IGUIComboBox_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_removeChild00
static int tolua_IrrLua_irr_gui_IGUIComboBox_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_remove00
static int tolua_IrrLua_irr_gui_IGUIComboBox_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_draw00
static int tolua_IrrLua_irr_gui_IGUIComboBox_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_move00
static int tolua_IrrLua_irr_gui_IGUIComboBox_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_isVisible00
static int tolua_IrrLua_irr_gui_IGUIComboBox_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setVisible00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIComboBox_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setText00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getText00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getID00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_setID00
static int tolua_IrrLua_irr_gui_IGUIComboBox_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIComboBox_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIComboBox_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getType00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_grab00
static int tolua_IrrLua_irr_gui_IGUIComboBox_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_drop00
static int tolua_IrrLua_irr_gui_IGUIComboBox_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIComboBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIComboBox_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIComboBox_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIComboBox* self = (irr::gui::IGUIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_delete00
static int tolua_IrrLua_irr_gui_IGUIFont_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_draw00
static int tolua_IrrLua_irr_gui_IGUIFont_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* position = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  bool hcenter = ((bool)  tolua_toboolean(tolua_S,5,0));
  bool vcenter = ((bool)  tolua_toboolean(tolua_S,6,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw(text,*position,color,hcenter,vcenter,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDimension of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_getDimension00
static int tolua_IrrLua_irr_gui_IGUIFont_getDimension00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDimension'",NULL);
#endif
  {
   irr::core::dimension2d<s32> tolua_ret = (irr::core::dimension2d<s32>)  self->getDimension(text);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::dimension2d<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::dimension2d<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::dimension2d<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDimension'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCharacterFromPos of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_getCharacterFromPos00
static int tolua_IrrLua_irr_gui_IGUIFont_getCharacterFromPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  signed int pixel_x = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCharacterFromPos'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getCharacterFromPos(text,pixel_x);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCharacterFromPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_grab00
static int tolua_IrrLua_irr_gui_IGUIFont_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_drop00
static int tolua_IrrLua_irr_gui_IGUIFont_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIFont */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFont_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIFont_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFont* self = (irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_delete00
static int tolua_IrrLua_irr_gui_IGUIEditBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverrideFont of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideFont00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverrideFont'",NULL);
#endif
  {
   self->setOverrideFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverrideFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverrideColor of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideColor00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverrideColor'",NULL);
#endif
  {
   self->setOverrideColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverrideColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enableOverrideColor of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_enableOverrideColor00
static int tolua_IrrLua_irr_gui_IGUIEditBox_enableOverrideColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enableOverrideColor'",NULL);
#endif
  {
   self->enableOverrideColor(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enableOverrideColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMax of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setMax00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  signed int max = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMax'",NULL);
#endif
  {
   self->setMax(max);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMax of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getMax00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMax'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getParent00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIEditBox_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_addChild00
static int tolua_IrrLua_irr_gui_IGUIEditBox_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_removeChild00
static int tolua_IrrLua_irr_gui_IGUIEditBox_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_remove00
static int tolua_IrrLua_irr_gui_IGUIEditBox_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_draw00
static int tolua_IrrLua_irr_gui_IGUIEditBox_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_move00
static int tolua_IrrLua_irr_gui_IGUIEditBox_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_isVisible00
static int tolua_IrrLua_irr_gui_IGUIEditBox_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setVisible00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIEditBox_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setText00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getText00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getID00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_setID00
static int tolua_IrrLua_irr_gui_IGUIEditBox_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIEditBox_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIEditBox_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getType00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_grab00
static int tolua_IrrLua_irr_gui_IGUIEditBox_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_drop00
static int tolua_IrrLua_irr_gui_IGUIEditBox_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIEditBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIEditBox_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIEditBox_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIEditBox* self = (irr::gui::IGUIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_delete00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFilename of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getFilename00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFilename'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getFilename();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getParent00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_addChild00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_removeChild00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_remove00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_draw00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_move00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isVisible00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setVisible00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setText00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getText00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getID00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setID00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getType00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_grab00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_drop00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIFileOpenDialog */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIFileOpenDialog",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIFileOpenDialog* self = (irr::gui::IGUIFileOpenDialog*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_delete00
static int tolua_IrrLua_irr_gui_IGUIImage_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setImage of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setImage00
static int tolua_IrrLua_irr_gui_IGUIImage_setImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setImage'",NULL);
#endif
  {
   self->setImage(image);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUseAlphaChannel of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setUseAlphaChannel00
static int tolua_IrrLua_irr_gui_IGUIImage_setUseAlphaChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUseAlphaChannel'",NULL);
#endif
  {
   self->setUseAlphaChannel(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUseAlphaChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getParent00
static int tolua_IrrLua_irr_gui_IGUIImage_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIImage_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIImage_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIImage_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIImage_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIImage_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_addChild00
static int tolua_IrrLua_irr_gui_IGUIImage_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_removeChild00
static int tolua_IrrLua_irr_gui_IGUIImage_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_remove00
static int tolua_IrrLua_irr_gui_IGUIImage_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_draw00
static int tolua_IrrLua_irr_gui_IGUIImage_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_move00
static int tolua_IrrLua_irr_gui_IGUIImage_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_isVisible00
static int tolua_IrrLua_irr_gui_IGUIImage_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setVisible00
static int tolua_IrrLua_irr_gui_IGUIImage_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIImage_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIImage_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setText00
static int tolua_IrrLua_irr_gui_IGUIImage_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getText00
static int tolua_IrrLua_irr_gui_IGUIImage_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getID00
static int tolua_IrrLua_irr_gui_IGUIImage_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_setID00
static int tolua_IrrLua_irr_gui_IGUIImage_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIImage_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIImage_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIImage_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getType00
static int tolua_IrrLua_irr_gui_IGUIImage_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_grab00
static int tolua_IrrLua_irr_gui_IGUIImage_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_drop00
static int tolua_IrrLua_irr_gui_IGUIImage_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIImage */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIImage_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIImage_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIImage* self = (irr::gui::IGUIImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_delete00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getColor00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setColor00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'",NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fadeIn of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_fadeIn00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_fadeIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  unsigned int time = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fadeIn'",NULL);
#endif
  {
   self->fadeIn(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fadeIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fadeOut of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_fadeOut00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_fadeOut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  unsigned int time = (( unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fadeOut'",NULL);
#endif
  {
   self->fadeOut(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fadeOut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isReady of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_isReady00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_isReady00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isReady'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isReady();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isReady'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getParent00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_addChild00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_removeChild00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_remove00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_draw00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_move00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_isVisible00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setVisible00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setText00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getText00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getID00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_setID00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getType00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_grab00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_drop00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIInOutFader */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIInOutFader_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIInOutFader_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIInOutFader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIInOutFader* self = (irr::gui::IGUIInOutFader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_delete00
static int tolua_IrrLua_irr_gui_IGUIListBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemCount of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getItemCount00
static int tolua_IrrLua_irr_gui_IGUIListBox_getItemCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemCount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getItemCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getListItem of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getListItem00
static int tolua_IrrLua_irr_gui_IGUIListBox_getListItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getListItem'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getListItem(id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getListItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addItem of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_addItem00
static int tolua_IrrLua_irr_gui_IGUIListBox_addItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addItem'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addItem(text);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addItem of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_addItem01
static int tolua_IrrLua_irr_gui_IGUIListBox_addItem01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  wchar_t* icon = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addItem'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->addItem(text,icon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_IrrLua_irr_gui_IGUIListBox_addItem00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIconFont of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setIconFont00
static int tolua_IrrLua_irr_gui_IGUIListBox_setIconFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIconFont'",NULL);
#endif
  {
   self->setIconFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIconFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_clear00
static int tolua_IrrLua_irr_gui_IGUIListBox_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'",NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSelected of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getSelected00
static int tolua_IrrLua_irr_gui_IGUIListBox_getSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSelected'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSelected();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelected of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setSelected00
static int tolua_IrrLua_irr_gui_IGUIListBox_setSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelected'",NULL);
#endif
  {
   self->setSelected(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getParent00
static int tolua_IrrLua_irr_gui_IGUIListBox_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIListBox_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIListBox_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIListBox_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIListBox_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIListBox_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_addChild00
static int tolua_IrrLua_irr_gui_IGUIListBox_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_removeChild00
static int tolua_IrrLua_irr_gui_IGUIListBox_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_remove00
static int tolua_IrrLua_irr_gui_IGUIListBox_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_draw00
static int tolua_IrrLua_irr_gui_IGUIListBox_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_move00
static int tolua_IrrLua_irr_gui_IGUIListBox_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_isVisible00
static int tolua_IrrLua_irr_gui_IGUIListBox_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setVisible00
static int tolua_IrrLua_irr_gui_IGUIListBox_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIListBox_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIListBox_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setText00
static int tolua_IrrLua_irr_gui_IGUIListBox_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getText00
static int tolua_IrrLua_irr_gui_IGUIListBox_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getID00
static int tolua_IrrLua_irr_gui_IGUIListBox_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_setID00
static int tolua_IrrLua_irr_gui_IGUIListBox_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIListBox_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIListBox_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIListBox_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getType00
static int tolua_IrrLua_irr_gui_IGUIListBox_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_grab00
static int tolua_IrrLua_irr_gui_IGUIListBox_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_drop00
static int tolua_IrrLua_irr_gui_IGUIListBox_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIListBox */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIListBox_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIListBox_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIListBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIListBox* self = (irr::gui::IGUIListBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_delete00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMesh of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setMesh00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setMesh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::scene::IAnimatedMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::scene::IAnimatedMesh* mesh = ((irr::scene::IAnimatedMesh*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMesh'",NULL);
#endif
  {
   self->setMesh(mesh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMesh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterial of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setMaterial00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SMaterial",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SMaterial* material = ((irr::video::SMaterial*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterial'",NULL);
#endif
  {
   self->setMaterial(*material);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterial of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getMaterial00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterial'",NULL);
#endif
  {
   irr::video::SMaterial& tolua_ret = (irr::video::SMaterial&)  self->getMaterial();
   tolua_pushusertype(tolua_S,(void*)&tolua_ret,"irr::video::SMaterial");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getParent00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_addChild00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_removeChild00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_remove00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_draw00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_move00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_isVisible00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setVisible00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setText00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getText00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getID00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_setID00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getType00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_grab00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_drop00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIMeshViewer */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIMeshViewer_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIMeshViewer_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIMeshViewer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIMeshViewer* self = (irr::gui::IGUIMeshViewer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_delete00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMax of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setMax00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  signed int max = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMax'",NULL);
#endif
  {
   self->setMax(max);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPos of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getPos00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPos'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPos of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setPos00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  signed int pos = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPos'",NULL);
#endif
  {
   self->setPos(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getParent00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_addChild00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_removeChild00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_remove00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_draw00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_move00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_isVisible00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setVisible00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setText00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getText00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getID00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_setID00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getType00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_grab00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_drop00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIScrollBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIScrollBar_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIScrollBar_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIScrollBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIScrollBar* self = (irr::gui::IGUIScrollBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_delete00
static int tolua_IrrLua_irr_gui_IGUIStaticText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverrideFont of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideFont00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverrideFont'",NULL);
#endif
  {
   self->setOverrideFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverrideFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverrideColor of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideColor00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor color = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverrideColor'",NULL);
#endif
  {
   self->setOverrideColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverrideColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enableOverrideColor of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_enableOverrideColor00
static int tolua_IrrLua_irr_gui_IGUIStaticText_enableOverrideColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enableOverrideColor'",NULL);
#endif
  {
   self->enableOverrideColor(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enableOverrideColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWordWrap of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setWordWrap00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setWordWrap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWordWrap'",NULL);
#endif
  {
   self->setWordWrap(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWordWrap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextHeight of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getTextHeight00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getTextHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextHeight'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTextHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getParent00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIStaticText_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_addChild00
static int tolua_IrrLua_irr_gui_IGUIStaticText_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_removeChild00
static int tolua_IrrLua_irr_gui_IGUIStaticText_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_remove00
static int tolua_IrrLua_irr_gui_IGUIStaticText_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_draw00
static int tolua_IrrLua_irr_gui_IGUIStaticText_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_move00
static int tolua_IrrLua_irr_gui_IGUIStaticText_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_isVisible00
static int tolua_IrrLua_irr_gui_IGUIStaticText_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setVisible00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIStaticText_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setText00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getText00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getID00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_setID00
static int tolua_IrrLua_irr_gui_IGUIStaticText_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIStaticText_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIStaticText_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getType00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_grab00
static int tolua_IrrLua_irr_gui_IGUIStaticText_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_drop00
static int tolua_IrrLua_irr_gui_IGUIStaticText_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIStaticText */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIStaticText_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIStaticText_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIStaticText* self = (irr::gui::IGUIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_delete00
static int tolua_IrrLua_irr_gui_IGUITab_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNumber of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getNumber00
static int tolua_IrrLua_irr_gui_IGUITab_getNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNumber'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDrawBackground of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setDrawBackground00
static int tolua_IrrLua_irr_gui_IGUITab_setDrawBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  bool draw = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDrawBackground'",NULL);
#endif
  {
   self->setDrawBackground(draw);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDrawBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBackgroundColor of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setBackgroundColor00
static int tolua_IrrLua_irr_gui_IGUITab_setBackgroundColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::video::SColor c = *((irr::video::SColor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBackgroundColor'",NULL);
#endif
  {
   self->setBackgroundColor(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBackgroundColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getParent00
static int tolua_IrrLua_irr_gui_IGUITab_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUITab_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUITab_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUITab_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUITab_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUITab_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_addChild00
static int tolua_IrrLua_irr_gui_IGUITab_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_removeChild00
static int tolua_IrrLua_irr_gui_IGUITab_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_remove00
static int tolua_IrrLua_irr_gui_IGUITab_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_draw00
static int tolua_IrrLua_irr_gui_IGUITab_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_move00
static int tolua_IrrLua_irr_gui_IGUITab_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_isVisible00
static int tolua_IrrLua_irr_gui_IGUITab_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setVisible00
static int tolua_IrrLua_irr_gui_IGUITab_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_isEnabled00
static int tolua_IrrLua_irr_gui_IGUITab_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setEnabled00
static int tolua_IrrLua_irr_gui_IGUITab_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setText00
static int tolua_IrrLua_irr_gui_IGUITab_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getText00
static int tolua_IrrLua_irr_gui_IGUITab_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getID00
static int tolua_IrrLua_irr_gui_IGUITab_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_setID00
static int tolua_IrrLua_irr_gui_IGUITab_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_OnEvent00
static int tolua_IrrLua_irr_gui_IGUITab_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_bringToFront00
static int tolua_IrrLua_irr_gui_IGUITab_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUITab_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getType00
static int tolua_IrrLua_irr_gui_IGUITab_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_grab00
static int tolua_IrrLua_irr_gui_IGUITab_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_drop00
static int tolua_IrrLua_irr_gui_IGUITab_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUITab */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITab_getDebugName00
static int tolua_IrrLua_irr_gui_IGUITab_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITab",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITab* self = (irr::gui::IGUITab*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_delete00
static int tolua_IrrLua_irr_gui_IGUITabControl_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTab of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_addTab00
static int tolua_IrrLua_irr_gui_IGUITabControl_addTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* caption = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTab'",NULL);
#endif
  {
   irr::gui::IGUITab* tolua_ret = (irr::gui::IGUITab*)  self->addTab(caption,id);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUITab");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTabcount of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getTabcount00
static int tolua_IrrLua_irr_gui_IGUITabControl_getTabcount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTabcount'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getTabcount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTabcount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTab of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getTab00
static int tolua_IrrLua_irr_gui_IGUITabControl_getTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTab'",NULL);
#endif
  {
   irr::gui::IGUITab* tolua_ret = (irr::gui::IGUITab*)  self->getTab(idx);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUITab");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActiveTab of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setActiveTab00
static int tolua_IrrLua_irr_gui_IGUITabControl_setActiveTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  signed int idx = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActiveTab'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setActiveTab(idx);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActiveTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActiveTab of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getActiveTab00
static int tolua_IrrLua_irr_gui_IGUITabControl_getActiveTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActiveTab'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getActiveTab();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActiveTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getParent00
static int tolua_IrrLua_irr_gui_IGUITabControl_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUITabControl_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUITabControl_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUITabControl_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUITabControl_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUITabControl_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_addChild00
static int tolua_IrrLua_irr_gui_IGUITabControl_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_removeChild00
static int tolua_IrrLua_irr_gui_IGUITabControl_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_remove00
static int tolua_IrrLua_irr_gui_IGUITabControl_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_draw00
static int tolua_IrrLua_irr_gui_IGUITabControl_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_move00
static int tolua_IrrLua_irr_gui_IGUITabControl_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_isVisible00
static int tolua_IrrLua_irr_gui_IGUITabControl_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setVisible00
static int tolua_IrrLua_irr_gui_IGUITabControl_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_isEnabled00
static int tolua_IrrLua_irr_gui_IGUITabControl_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setEnabled00
static int tolua_IrrLua_irr_gui_IGUITabControl_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setText00
static int tolua_IrrLua_irr_gui_IGUITabControl_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getText00
static int tolua_IrrLua_irr_gui_IGUITabControl_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getID00
static int tolua_IrrLua_irr_gui_IGUITabControl_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_setID00
static int tolua_IrrLua_irr_gui_IGUITabControl_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_OnEvent00
static int tolua_IrrLua_irr_gui_IGUITabControl_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_bringToFront00
static int tolua_IrrLua_irr_gui_IGUITabControl_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUITabControl_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getType00
static int tolua_IrrLua_irr_gui_IGUITabControl_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_grab00
static int tolua_IrrLua_irr_gui_IGUITabControl_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_drop00
static int tolua_IrrLua_irr_gui_IGUITabControl_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUITabControl */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUITabControl_getDebugName00
static int tolua_IrrLua_irr_gui_IGUITabControl_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUITabControl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUITabControl* self = (irr::gui::IGUITabControl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_delete00
static int tolua_IrrLua_irr_gui_IGUIWindow_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCloseButton of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getCloseButton00
static int tolua_IrrLua_irr_gui_IGUIWindow_getCloseButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCloseButton'",NULL);
#endif
  {
   irr::gui::IGUIButton* tolua_ret = (irr::gui::IGUIButton*)  self->getCloseButton();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCloseButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinimizeButton of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getMinimizeButton00
static int tolua_IrrLua_irr_gui_IGUIWindow_getMinimizeButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinimizeButton'",NULL);
#endif
  {
   irr::gui::IGUIButton* tolua_ret = (irr::gui::IGUIButton*)  self->getMinimizeButton();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinimizeButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaximizeButton of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getMaximizeButton00
static int tolua_IrrLua_irr_gui_IGUIWindow_getMaximizeButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaximizeButton'",NULL);
#endif
  {
   irr::gui::IGUIButton* tolua_ret = (irr::gui::IGUIButton*)  self->getMaximizeButton();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaximizeButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getParent00
static int tolua_IrrLua_irr_gui_IGUIWindow_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIWindow_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIWindow_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIWindow_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIWindow_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIWindow_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_addChild00
static int tolua_IrrLua_irr_gui_IGUIWindow_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_removeChild00
static int tolua_IrrLua_irr_gui_IGUIWindow_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_remove00
static int tolua_IrrLua_irr_gui_IGUIWindow_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_draw00
static int tolua_IrrLua_irr_gui_IGUIWindow_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_move00
static int tolua_IrrLua_irr_gui_IGUIWindow_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_isVisible00
static int tolua_IrrLua_irr_gui_IGUIWindow_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_setVisible00
static int tolua_IrrLua_irr_gui_IGUIWindow_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIWindow_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIWindow_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_setText00
static int tolua_IrrLua_irr_gui_IGUIWindow_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getText00
static int tolua_IrrLua_irr_gui_IGUIWindow_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getID00
static int tolua_IrrLua_irr_gui_IGUIWindow_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_setID00
static int tolua_IrrLua_irr_gui_IGUIWindow_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIWindow_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIWindow_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIWindow_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getType00
static int tolua_IrrLua_irr_gui_IGUIWindow_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_grab00
static int tolua_IrrLua_irr_gui_IGUIWindow_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_drop00
static int tolua_IrrLua_irr_gui_IGUIWindow_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIWindow */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIWindow_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIWindow_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIWindow* self = (irr::gui::IGUIWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_delete00
static int tolua_IrrLua_irr_gui_IGUIButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOverrideFont of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setOverrideFont00
static int tolua_IrrLua_irr_gui_IGUIButton_setOverrideFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOverrideFont'",NULL);
#endif
  {
   self->setOverrideFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOverrideFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setImage of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setImage00
static int tolua_IrrLua_irr_gui_IGUIButton_setImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setImage'",NULL);
#endif
  {
   self->setImage(image);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setImage of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setImage01
static int tolua_IrrLua_irr_gui_IGUIButton_setImage01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* pos = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setImage'",NULL);
#endif
  {
   self->setImage(image,*pos);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_gui_IGUIButton_setImage00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPressedImage of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setPressedImage00
static int tolua_IrrLua_irr_gui_IGUIButton_setPressedImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPressedImage'",NULL);
#endif
  {
   self->setPressedImage(image);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPressedImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPressedImage of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setPressedImage01
static int tolua_IrrLua_irr_gui_IGUIButton_setPressedImage01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::video::ITexture* image = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* pos = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPressedImage'",NULL);
#endif
  {
   self->setPressedImage(image,*pos);
  }
 }
 return 0;
tolua_lerror:
 return tolua_IrrLua_irr_gui_IGUIButton_setPressedImage00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsPushButton of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setIsPushButton00
static int tolua_IrrLua_irr_gui_IGUIButton_setIsPushButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  bool isPushButton = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsPushButton'",NULL);
#endif
  {
   self->setIsPushButton(isPushButton);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsPushButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPressed of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setPressed00
static int tolua_IrrLua_irr_gui_IGUIButton_setPressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  bool pressed = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPressed'",NULL);
#endif
  {
   self->setPressed(pressed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPressed of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_isPressed00
static int tolua_IrrLua_irr_gui_IGUIButton_isPressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPressed'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPressed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUseAlphaChannel of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setUseAlphaChannel00
static int tolua_IrrLua_irr_gui_IGUIButton_setUseAlphaChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  bool useAlphaChannel = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUseAlphaChannel'",NULL);
#endif
  {
   self->setUseAlphaChannel(useAlphaChannel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUseAlphaChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUseAlphaChannel of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getUseAlphaChannel00
static int tolua_IrrLua_irr_gui_IGUIButton_getUseAlphaChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUseAlphaChannel'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getUseAlphaChannel();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUseAlphaChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getParent00
static int tolua_IrrLua_irr_gui_IGUIButton_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIButton_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIButton_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIButton_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIButton_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIButton_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_addChild00
static int tolua_IrrLua_irr_gui_IGUIButton_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_removeChild00
static int tolua_IrrLua_irr_gui_IGUIButton_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_remove00
static int tolua_IrrLua_irr_gui_IGUIButton_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_draw00
static int tolua_IrrLua_irr_gui_IGUIButton_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_move00
static int tolua_IrrLua_irr_gui_IGUIButton_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_isVisible00
static int tolua_IrrLua_irr_gui_IGUIButton_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setVisible00
static int tolua_IrrLua_irr_gui_IGUIButton_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIButton_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIButton_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setText00
static int tolua_IrrLua_irr_gui_IGUIButton_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getText00
static int tolua_IrrLua_irr_gui_IGUIButton_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getID00
static int tolua_IrrLua_irr_gui_IGUIButton_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_setID00
static int tolua_IrrLua_irr_gui_IGUIButton_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIButton_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIButton_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIButton_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getType00
static int tolua_IrrLua_irr_gui_IGUIButton_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_grab00
static int tolua_IrrLua_irr_gui_IGUIButton_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_drop00
static int tolua_IrrLua_irr_gui_IGUIButton_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIButton */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIButton_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIButton_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIButton* self = (irr::gui::IGUIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_delete00
static int tolua_IrrLua_irr_gui_IGUIToolBar_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addButton of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_addButton00
static int tolua_IrrLua_irr_gui_IGUIToolBar_addButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::video::ITexture",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
  irr::video::ITexture* img = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,4,0));
  irr::video::ITexture* pressedimg = ((irr::video::ITexture*)  tolua_tousertype(tolua_S,5,0));
  bool isPushButton = ((bool)  tolua_toboolean(tolua_S,6,0));
  bool useAlpha = ((bool)  tolua_toboolean(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addButton'",NULL);
#endif
  {
   irr::gui::IGUIButton* tolua_ret = (irr::gui::IGUIButton*)  self->addButton(id,text,img,pressedimg,isPushButton,useAlpha);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getParent00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_setRelativePosition00
static int tolua_IrrLua_irr_gui_IGUIToolBar_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IGUIToolBar_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_addChild00
static int tolua_IrrLua_irr_gui_IGUIToolBar_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_removeChild00
static int tolua_IrrLua_irr_gui_IGUIToolBar_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_remove00
static int tolua_IrrLua_irr_gui_IGUIToolBar_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_draw00
static int tolua_IrrLua_irr_gui_IGUIToolBar_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_move00
static int tolua_IrrLua_irr_gui_IGUIToolBar_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_isVisible00
static int tolua_IrrLua_irr_gui_IGUIToolBar_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_setVisible00
static int tolua_IrrLua_irr_gui_IGUIToolBar_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_isEnabled00
static int tolua_IrrLua_irr_gui_IGUIToolBar_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_setEnabled00
static int tolua_IrrLua_irr_gui_IGUIToolBar_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_setText00
static int tolua_IrrLua_irr_gui_IGUIToolBar_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getText00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getID00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_setID00
static int tolua_IrrLua_irr_gui_IGUIToolBar_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_OnEvent00
static int tolua_IrrLua_irr_gui_IGUIToolBar_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_bringToFront00
static int tolua_IrrLua_irr_gui_IGUIToolBar_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromId00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getType00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_grab00
static int tolua_IrrLua_irr_gui_IGUIToolBar_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_drop00
static int tolua_IrrLua_irr_gui_IGUIToolBar_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUIToolBar */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUIToolBar_getDebugName00
static int tolua_IrrLua_irr_gui_IGUIToolBar_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUIToolBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUIToolBar* self = (irr::gui::IGUIToolBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_delete00
static int tolua_IrrLua_irr_gui_IGUISkin_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_getColor00
static int tolua_IrrLua_irr_gui_IGUISkin_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_COLOR color = ((irr::gui::EGUI_DEFAULT_COLOR) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getColor(color);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_setColor00
static int tolua_IrrLua_irr_gui_IGUISkin_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_COLOR which = ((irr::gui::EGUI_DEFAULT_COLOR) (int)  tolua_tonumber(tolua_S,2,0));
  irr::video::SColor newColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'",NULL);
#endif
  {
   self->setColor(which,newColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_getSize00
static int tolua_IrrLua_irr_gui_IGUISkin_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_SIZE size = ((irr::gui::EGUI_DEFAULT_SIZE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSize(size);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultText of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_getDefaultText00
static int tolua_IrrLua_irr_gui_IGUISkin_getDefaultText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_TEXT text = ((irr::gui::EGUI_DEFAULT_TEXT) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getDefaultText(text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultText of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_setDefaultText00
static int tolua_IrrLua_irr_gui_IGUISkin_setDefaultText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_TEXT which = ((irr::gui::EGUI_DEFAULT_TEXT) (int)  tolua_tonumber(tolua_S,2,0));
  wchar_t* newText = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultText'",NULL);
#endif
  {
   self->setDefaultText(which,newText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSize of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_setSize00
static int tolua_IrrLua_irr_gui_IGUISkin_setSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_SIZE which = ((irr::gui::EGUI_DEFAULT_SIZE) (int)  tolua_tonumber(tolua_S,2,0));
  signed int size = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSize'",NULL);
#endif
  {
   self->setSize(which,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFont of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_getFont00
static int tolua_IrrLua_irr_gui_IGUISkin_getFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFont'",NULL);
#endif
  {
   irr::gui::IGUIFont* tolua_ret = (irr::gui::IGUIFont*)  self->getFont();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFont of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_setFont00
static int tolua_IrrLua_irr_gui_IGUISkin_setFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFont'",NULL);
#endif
  {
   self->setFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DButtonPaneStandard of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPaneStandard00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPaneStandard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DButtonPaneStandard'",NULL);
#endif
  {
   self->draw3DButtonPaneStandard(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DButtonPaneStandard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DButtonPanePressed of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPanePressed00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPanePressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DButtonPanePressed'",NULL);
#endif
  {
   self->draw3DButtonPanePressed(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DButtonPanePressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DSunkenPane of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DSunkenPane00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DSunkenPane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor bgcolor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
  bool flat = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool fillBackGround = ((bool)  tolua_toboolean(tolua_S,5,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DSunkenPane'",NULL);
#endif
  {
   self->draw3DSunkenPane(element,bgcolor,flat,fillBackGround,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DSunkenPane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DWindowBackground of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DWindowBackground00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DWindowBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool drawTitleBar = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::video::SColor titleBarColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DWindowBackground'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->draw3DWindowBackground(element,drawTitleBar,titleBarColor,*rect,clip);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DWindowBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DMenuPane of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DMenuPane00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DMenuPane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DMenuPane'",NULL);
#endif
  {
   self->draw3DMenuPane(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DMenuPane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DToolBar of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DToolBar00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DToolBar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DToolBar'",NULL);
#endif
  {
   self->draw3DToolBar(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DToolBar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DTabButton of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DTabButton00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DTabButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool active = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DTabButton'",NULL);
#endif
  {
   self->draw3DTabButton(element,active,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DTabButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DTabBody of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_draw3DTabBody00
static int tolua_IrrLua_irr_gui_IGUISkin_draw3DTabBody00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool border = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool background = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DTabBody'",NULL);
#endif
  {
   self->draw3DTabBody(element,border,background,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DTabBody'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_grab00
static int tolua_IrrLua_irr_gui_IGUISkin_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_drop00
static int tolua_IrrLua_irr_gui_IGUISkin_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::gui::IGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IGUISkin_getDebugName00
static int tolua_IrrLua_irr_gui_IGUISkin_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IGUISkin* self = (irr::gui::IGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::gui::IrrLuaIGUISkin* tolua_ret = (irr::gui::IrrLuaIGUISkin*)  new irr::gui::IrrLuaIGUISkin();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IrrLuaIGUISkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00_local
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::gui::IrrLuaIGUISkin* tolua_ret = (irr::gui::IrrLuaIGUISkin*)  new irr::gui::IrrLuaIGUISkin();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::gui::IrrLuaIGUISkin");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_delete00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getColor00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_COLOR color = ((irr::gui::EGUI_DEFAULT_COLOR) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'",NULL);
#endif
  {
   irr::video::SColor tolua_ret = (irr::video::SColor)  self->getColor(color);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::SColor(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::video::SColor));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::video::SColor");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setColor00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_COLOR which = ((irr::gui::EGUI_DEFAULT_COLOR) (int)  tolua_tonumber(tolua_S,2,0));
  irr::video::SColor newColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'",NULL);
#endif
  {
   self->setColor(which,newColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getSize00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_SIZE size = ((irr::gui::EGUI_DEFAULT_SIZE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getSize(size);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultText of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getDefaultText00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getDefaultText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_TEXT text = ((irr::gui::EGUI_DEFAULT_TEXT) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getDefaultText(text);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultText of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setDefaultText00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setDefaultText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_TEXT which = ((irr::gui::EGUI_DEFAULT_TEXT) (int)  tolua_tonumber(tolua_S,2,0));
  wchar_t* newText = ((wchar_t*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultText'",NULL);
#endif
  {
   self->setDefaultText(which,newText);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSize of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setSize00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_DEFAULT_SIZE which = ((irr::gui::EGUI_DEFAULT_SIZE) (int)  tolua_tonumber(tolua_S,2,0));
  signed int size = (( signed int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSize'",NULL);
#endif
  {
   self->setSize(which,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFont of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getFont00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFont'",NULL);
#endif
  {
   irr::gui::IGUIFont* tolua_ret = (irr::gui::IGUIFont*)  self->getFont();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFont of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setFont00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIFont* font = ((irr::gui::IGUIFont*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFont'",NULL);
#endif
  {
   self->setFont(font);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DButtonPaneStandard of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPaneStandard00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPaneStandard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DButtonPaneStandard'",NULL);
#endif
  {
   self->draw3DButtonPaneStandard(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DButtonPaneStandard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DButtonPanePressed of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPanePressed00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPanePressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DButtonPanePressed'",NULL);
#endif
  {
   self->draw3DButtonPanePressed(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DButtonPanePressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DSunkenPane of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DSunkenPane00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DSunkenPane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::video::SColor bgcolor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,3,0));
  bool flat = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool fillBackGround = ((bool)  tolua_toboolean(tolua_S,5,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DSunkenPane'",NULL);
#endif
  {
   self->draw3DSunkenPane(element,bgcolor,flat,fillBackGround,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DSunkenPane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DWindowBackground of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DWindowBackground00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DWindowBackground00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::video::SColor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool drawTitleBar = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::video::SColor titleBarColor = *((irr::video::SColor*)  tolua_tousertype(tolua_S,4,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DWindowBackground'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->draw3DWindowBackground(element,drawTitleBar,titleBarColor,*rect,clip);
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DWindowBackground'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DMenuPane of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DMenuPane00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DMenuPane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DMenuPane'",NULL);
#endif
  {
   self->draw3DMenuPane(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DMenuPane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DToolBar of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DToolBar00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DToolBar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,3,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DToolBar'",NULL);
#endif
  {
   self->draw3DToolBar(element,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DToolBar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DTabButton of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabButton00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool active = ((bool)  tolua_toboolean(tolua_S,3,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,4,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DTabButton'",NULL);
#endif
  {
   self->draw3DTabButton(element,active,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DTabButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw3DTabBody of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabBody00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabBody00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
  bool border = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool background = ((bool)  tolua_toboolean(tolua_S,4,0));
  irr::core::rect<s32>* rect = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,5,0));
  irr::core::rect<s32>* clip = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw3DTabBody'",NULL);
#endif
  {
   self->draw3DTabBody(element,border,background,*rect,clip);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw3DTabBody'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_grab00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_drop00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::gui::IrrLuaIGUISkin */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUISkin_GetProxy00
static int tolua_IrrLua_irr_gui_IrrLuaIGUISkin_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUISkin",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUISkin* self = (irr::gui::IrrLuaIGUISkin*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::IEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IEventReceiver_delete00
static int tolua_IrrLua_irr_IEventReceiver_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IEventReceiver* self = (irr::IEventReceiver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  irr::IEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IEventReceiver_OnEvent00
static int tolua_IrrLua_irr_IEventReceiver_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IEventReceiver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IEventReceiver* self = (irr::IEventReceiver*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::IrrLuaEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrLuaEventReceiver_new00
static int tolua_IrrLua_irr_IrrLuaEventReceiver_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::IrrLuaEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::IrrLuaEventReceiver* tolua_ret = (irr::IrrLuaEventReceiver*)  new irr::IrrLuaEventReceiver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IrrLuaEventReceiver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::IrrLuaEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrLuaEventReceiver_new00_local
static int tolua_IrrLua_irr_IrrLuaEventReceiver_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::IrrLuaEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::IrrLuaEventReceiver* tolua_ret = (irr::IrrLuaEventReceiver*)  new irr::IrrLuaEventReceiver();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::IrrLuaEventReceiver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::IrrLuaEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrLuaEventReceiver_delete00
static int tolua_IrrLua_irr_IrrLuaEventReceiver_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrLuaEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrLuaEventReceiver* self = (irr::IrrLuaEventReceiver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::IrrLuaEventReceiver */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrLuaEventReceiver_GetProxy00
static int tolua_IrrLua_irr_IrrLuaEventReceiver_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrLuaEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrLuaEventReceiver* self = (irr::IrrLuaEventReceiver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::EGUI_ELEMENT_TYPE Type = ((irr::gui::EGUI_ELEMENT_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::gui::IGUIEnvironment* environment = ((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::core::rect<s32> rectangle = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  {
   irr::gui::IrrLuaIGUIElement* tolua_ret = (irr::gui::IrrLuaIGUIElement*)  new irr::gui::IrrLuaIGUIElement(Type,environment,parent,id,rectangle);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IrrLuaIGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00_local
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::EGUI_ELEMENT_TYPE Type = ((irr::gui::EGUI_ELEMENT_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
  irr::gui::IGUIEnvironment* environment = ((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,3,0));
  irr::gui::IGUIElement* parent = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,4,0));
  signed int id = (( signed int)  tolua_tonumber(tolua_S,5,0));
  irr::core::rect<s32> rectangle = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,6,0));
  {
   irr::gui::IrrLuaIGUIElement* tolua_ret = (irr::gui::IrrLuaIGUIElement*)  new irr::gui::IrrLuaIGUIElement(Type,environment,parent,id,rectangle);
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::gui::IrrLuaIGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_delete00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getParent00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getParent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRelativePosition of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getRelativePosition00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRelativePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getRelativePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRelativePosition of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setRelativePosition00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setRelativePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32>* r = ((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRelativePosition'",NULL);
#endif
  {
   self->setRelativePosition(*r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRelativePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAbsolutePosition of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getAbsolutePosition00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAbsolutePosition'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->getAbsolutePosition();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAbsolutePosition of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_updateAbsolutePosition00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_updateAbsolutePosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAbsolutePosition'",NULL);
#endif
  {
   self->updateAbsolutePosition();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAbsolutePosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromPoint of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromPoint00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32>* point = ((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromPoint'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromPoint(*point);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_addChild00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'",NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_removeChild00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* child = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'",NULL);
#endif
  {
   self->removeChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: remove of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_remove00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_remove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'remove'",NULL);
#endif
  {
   self->remove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'remove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_draw00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'",NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_move00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::position2d<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::position2d<s32> absoluteMovement = *((irr::core::position2d<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'",NULL);
#endif
  {
   self->move(absoluteMovement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isVisible00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setVisible00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool visible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'",NULL);
#endif
  {
   self->setVisible(visible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isEnabled00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setEnabled00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnabled'",NULL);
#endif
  {
   self->setEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setText of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setText00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setText'",NULL);
#endif
  {
   self->setText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getText of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getText00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getText'",NULL);
#endif
  {
   wchar_t* tolua_ret = (wchar_t*)  self->getText();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"wchar_t");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getID00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->getID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setID00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setID'",NULL);
#endif
  {
   self->setID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IrrLuaIGUIElement::OnEvent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_IrrLuaIGUIElement__OnEvent00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_IrrLuaIGUIElement__OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::SEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::SEvent event = *((irr::SEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IrrLuaIGUIElement::OnEvent'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IrrLuaIGUIElement::OnEvent(event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IrrLuaIGUIElement__OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bringToFront of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_bringToFront00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_bringToFront00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* element = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bringToFront'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->bringToFront(element);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bringToFront'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementFromId of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromId00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
  bool searchchildren = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementFromId'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->getElementFromId(id,searchchildren);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementFromId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getType00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_grab00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_drop00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxy of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_GetProxy00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_GetProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxy'",NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetProxy();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Children of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Children00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Children'",NULL);
#endif
  {
   irr::core::list<irr::gui::IGUIElement*> tolua_ret = (irr::core::list<irr::gui::IGUIElement*>)  self->get_Children();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::list<irr::gui::IGUIElement*>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::gui::IGUIElement*>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::list<irr::gui::IGUIElement*>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::list<irr::gui::IGUIElement*>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Children of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Children00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Children00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::list<irr::gui::IGUIElement*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::list<irr::gui::IGUIElement*> c = *((irr::core::list<irr::gui::IGUIElement*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Children'",NULL);
#endif
  {
   self->set_Children(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Children'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Parent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Parent00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Parent'",NULL);
#endif
  {
   irr::gui::IGUIElement* tolua_ret = (irr::gui::IGUIElement*)  self->get_Parent();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Parent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Parent00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Parent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIElement* p = ((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Parent'",NULL);
#endif
  {
   self->set_Parent(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Parent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_RelativeRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_RelativeRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_RelativeRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_RelativeRect'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->get_RelativeRect();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_RelativeRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_RelativeRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_RelativeRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_RelativeRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32> r = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_RelativeRect'",NULL);
#endif
  {
   self->set_RelativeRect(r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_RelativeRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AbsoluteRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AbsoluteRect'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->get_AbsoluteRect();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AbsoluteRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AbsoluteRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32> r = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AbsoluteRect'",NULL);
#endif
  {
   self->set_AbsoluteRect(r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AbsoluteRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_AbsoluteClippingRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteClippingRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteClippingRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_AbsoluteClippingRect'",NULL);
#endif
  {
   irr::core::rect<s32> tolua_ret = (irr::core::rect<s32>)  self->get_AbsoluteClippingRect();
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::core::rect<s32>(tolua_ret);
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(irr::core::rect<s32>));
    tolua_pushusertype_and_takeownership(tolua_S,tolua_obj,"irr::core::rect<s32>");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_AbsoluteClippingRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_AbsoluteClippingRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteClippingRect00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteClippingRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::core::rect<s32> r = *((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_AbsoluteClippingRect'",NULL);
#endif
  {
   self->set_AbsoluteClippingRect(r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_AbsoluteClippingRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_IsVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsVisible00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_IsVisible'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_IsVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_IsVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsVisible00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_IsVisible'",NULL);
#endif
  {
   self->set_IsVisible(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_IsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_IsEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsEnabled00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_IsEnabled'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->get_IsEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_IsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_IsEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsEnabled00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  bool b = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_IsEnabled'",NULL);
#endif
  {
   self->set_IsEnabled(b);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_IsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Text of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Text00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Text'",NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->get_Text();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Text of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Text00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Text00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  std::string s = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Text'",NULL);
#endif
  {
   self->set_Text(s);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Text'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_ID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_ID00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_ID'",NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->get_ID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_ID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_ID00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_ID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  signed int id = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_ID'",NULL);
#endif
  {
   self->set_ID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_ID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Environment of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Environment00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Environment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Environment'",NULL);
#endif
  {
   irr::gui::IGUIEnvironment* tolua_ret = (irr::gui::IGUIEnvironment*)  self->get_Environment();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIEnvironment");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Environment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Environment of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Environment00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Environment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::gui::IGUIEnvironment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::IGUIEnvironment* e = ((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Environment'",NULL);
#endif
  {
   self->set_Environment(e);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Environment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: get_Type of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Type00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'get_Type'",NULL);
#endif
  {
   irr::gui::EGUI_ELEMENT_TYPE tolua_ret = (irr::gui::EGUI_ELEMENT_TYPE)  self->get_Type();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'get_Type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: set_Type of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Type00
static int tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Type00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::gui::IrrLuaIGUIElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
  irr::gui::EGUI_ELEMENT_TYPE t = ((irr::gui::EGUI_ELEMENT_TYPE) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'set_Type'",NULL);
#endif
  {
   self->set_Type(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'set_Type'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Children of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_Children
static int tolua_get_irr__gui__IrrLuaIGUIElement_Children(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_Children(),"core::list<irr::gui::IGUIElement*>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Children of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_Children
static int tolua_set_irr__gui__IrrLuaIGUIElement_Children(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Children'",NULL);
  if (!tolua_isusertype(tolua_S,2,"core::list<irr::gui::IGUIElement*>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Children(*((core::list<irr::gui::IGUIElement*>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Parent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_Parent_ptr
static int tolua_get_irr__gui__IrrLuaIGUIElement_Parent_ptr(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_Parent(),"irr::gui::IGUIElement");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Parent of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_Parent_ptr
static int tolua_set_irr__gui__IrrLuaIGUIElement_Parent_ptr(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Parent'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::gui::IGUIElement",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Parent(((irr::gui::IGUIElement*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RelativeRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_RelativeRect
static int tolua_get_irr__gui__IrrLuaIGUIElement_RelativeRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRect'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_RelativeRect(),"irr::core::rect<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RelativeRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_RelativeRect
static int tolua_set_irr__gui__IrrLuaIGUIElement_RelativeRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RelativeRect'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_RelativeRect(*((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AbsoluteRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteRect
static int tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteRect'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_AbsoluteRect(),"irr::core::rect<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AbsoluteRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteRect
static int tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteRect'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AbsoluteRect(*((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AbsoluteClippingRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect
static int tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteClippingRect'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->get_AbsoluteClippingRect(),"irr::core::rect<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AbsoluteClippingRect of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect
static int tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AbsoluteClippingRect'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::rect<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_AbsoluteClippingRect(*((irr::core::rect<s32>*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_IsVisible
static int tolua_get_irr__gui__IrrLuaIGUIElement_IsVisible(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_IsVisible());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsVisible of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_IsVisible
static int tolua_set_irr__gui__IrrLuaIGUIElement_IsVisible(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsVisible'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_IsVisible(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_IsEnabled
static int tolua_get_irr__gui__IrrLuaIGUIElement_IsEnabled(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsEnabled'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->get_IsEnabled());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsEnabled of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_IsEnabled
static int tolua_set_irr__gui__IrrLuaIGUIElement_IsEnabled(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsEnabled'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_IsEnabled(((bool)  tolua_toboolean(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Text of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_Text
static int tolua_get_irr__gui__IrrLuaIGUIElement_Text(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Text'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->get_Text());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Text of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_Text
static int tolua_set_irr__gui__IrrLuaIGUIElement_Text(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Text'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Text(((std::string)  tolua_tocppstring(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_ID
static int tolua_get_irr__gui__IrrLuaIGUIElement_ID(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->get_ID());
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_ID
static int tolua_set_irr__gui__IrrLuaIGUIElement_ID(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_ID((( signed int)  tolua_tonumber(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Environment of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_get_irr__gui__IrrLuaIGUIElement_Environment_ptr
static int tolua_get_irr__gui__IrrLuaIGUIElement_Environment_ptr(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Environment'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->get_Environment(),"irr::gui::IGUIEnvironment");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Environment of class  irr::gui::IrrLuaIGUIElement */
#ifndef TOLUA_DISABLE_tolua_set_irr__gui__IrrLuaIGUIElement_Environment_ptr
static int tolua_set_irr__gui__IrrLuaIGUIElement_Environment_ptr(lua_State* tolua_S)
{
  irr::gui::IrrLuaIGUIElement* self = (irr::gui::IrrLuaIGUIElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Environment'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::gui::IGUIEnvironment",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->set_Environment(((irr::gui::IGUIEnvironment*)  tolua_tousertype(tolua_S,2,0))
)
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::video::IrrLuaDrawIndexedTriangleList */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_video_IrrLuaDrawIndexedTriangleList00
static int tolua_IrrLua_irr_video_IrrLuaDrawIndexedTriangleList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::video::IVideoDriver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_istable(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_istable(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::IVideoDriver* drv = ((irr::video::IVideoDriver*)  tolua_tousertype(tolua_S,1,0));
  signed int vertexCount = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifdef __cplusplus
  irr::video::S3DVertex* vertices = new irr::video::S3DVertex[vertexCount];
#else
  irr::video::S3DVertex* vertices = (irr::video::S3DVertex*) malloc((vertexCount)*sizeof(irr::video::S3DVertex));
#endif
  signed int triangleCount = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifdef __cplusplus
  signed short* indexList = new short[triangleCount];
#else
  signed short* indexList = (short*) malloc((triangleCount)*sizeof(short));
#endif
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isusertypearray(tolua_S,3,"irr::video::S3DVertex",vertexCount,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<vertexCount;i++)
    vertices[i] = *((irr::video::S3DVertex*)  tolua_tofieldusertype(tolua_S,3,i+1,0));
   }
  }
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isnumberarray(tolua_S,5,triangleCount,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<triangleCount;i++)
    indexList[i] = ((short)  tolua_tofieldnumber(tolua_S,5,i+1,0));
   }
  }
  {
   irr::video::IrrLuaDrawIndexedTriangleList(drv,vertexCount,vertices,triangleCount,indexList);
  }
  {
   int i;
   for(i=0; i<vertexCount;i++)
   {
#ifdef __cplusplus
    void* tolua_obj = new irr::video::S3DVertex(vertices[i]);
    tolua_pushfieldusertype_and_takeownership(tolua_S,3,i+1,tolua_obj,"irr::video::S3DVertex");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)& vertices[i],sizeof(irr::video::S3DVertex));
    tolua_pushfieldusertype(tolua_S,3,i+1,tolua_obj,"irr::video::S3DVertex");
#endif
   }
  }
  {
   int i;
   for(i=0; i<triangleCount;i++)
    tolua_pushfieldnumber(tolua_S,5,i+1,(lua_Number) indexList[i]);
  }
#ifdef __cplusplus
  delete [] vertices;
#else
  free(vertices);
#endif
#ifdef __cplusplus
  delete [] indexList;
#else
  free(indexList);
#endif
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IrrLuaDrawIndexedTriangleList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_SIrrlichtCreationParameters_new00
static int tolua_IrrLua_irr_SIrrlichtCreationParameters_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::SIrrlichtCreationParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::SIrrlichtCreationParameters* tolua_ret = (irr::SIrrlichtCreationParameters*)  new irr::SIrrlichtCreationParameters();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::SIrrlichtCreationParameters");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_SIrrlichtCreationParameters_new00_local
static int tolua_IrrLua_irr_SIrrlichtCreationParameters_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"irr::SIrrlichtCreationParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   irr::SIrrlichtCreationParameters* tolua_ret = (irr::SIrrlichtCreationParameters*)  new irr::SIrrlichtCreationParameters();
   tolua_pushusertype_and_takeownership(tolua_S,(void *)tolua_ret,"irr::SIrrlichtCreationParameters");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DriverType of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_DriverType
static int tolua_get_irr__SIrrlichtCreationParameters_DriverType(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DriverType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DriverType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DriverType of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_DriverType
static int tolua_set_irr__SIrrlichtCreationParameters_DriverType(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DriverType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DriverType = ((irr::video::E_DRIVER_TYPE) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WindowSize of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_WindowSize
static int tolua_get_irr__SIrrlichtCreationParameters_WindowSize(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WindowSize'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->WindowSize,"irr::core::dimension2d<s32>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WindowSize of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_WindowSize
static int tolua_set_irr__SIrrlichtCreationParameters_WindowSize(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WindowSize'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WindowSize = *((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Bits of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_unsigned_Bits
static int tolua_get_irr__SIrrlichtCreationParameters_unsigned_Bits(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bits'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Bits);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Bits of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_unsigned_Bits
static int tolua_set_irr__SIrrlichtCreationParameters_unsigned_Bits(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bits'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Bits = (( unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Fullscreen of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_Fullscreen
static int tolua_get_irr__SIrrlichtCreationParameters_Fullscreen(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Fullscreen'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Fullscreen);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Fullscreen of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_Fullscreen
static int tolua_set_irr__SIrrlichtCreationParameters_Fullscreen(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Fullscreen'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Fullscreen = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Stencilbuffer of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_Stencilbuffer
static int tolua_get_irr__SIrrlichtCreationParameters_Stencilbuffer(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Stencilbuffer'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Stencilbuffer);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Stencilbuffer of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_Stencilbuffer
static int tolua_set_irr__SIrrlichtCreationParameters_Stencilbuffer(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Stencilbuffer'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Stencilbuffer = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Vsync of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_Vsync
static int tolua_get_irr__SIrrlichtCreationParameters_Vsync(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vsync'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Vsync);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Vsync of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_Vsync
static int tolua_set_irr__SIrrlichtCreationParameters_Vsync(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Vsync'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Vsync = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HighPrecisionFPU of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_HighPrecisionFPU
static int tolua_get_irr__SIrrlichtCreationParameters_HighPrecisionFPU(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HighPrecisionFPU'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->HighPrecisionFPU);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: HighPrecisionFPU of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_HighPrecisionFPU
static int tolua_set_irr__SIrrlichtCreationParameters_HighPrecisionFPU(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'HighPrecisionFPU'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->HighPrecisionFPU = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AntiAlias of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_AntiAlias
static int tolua_get_irr__SIrrlichtCreationParameters_AntiAlias(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AntiAlias'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->AntiAlias);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AntiAlias of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_AntiAlias
static int tolua_set_irr__SIrrlichtCreationParameters_AntiAlias(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AntiAlias'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AntiAlias = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: EventReceiver of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_EventReceiver_ptr
static int tolua_get_irr__SIrrlichtCreationParameters_EventReceiver_ptr(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EventReceiver'",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)self->EventReceiver,"irr::IEventReceiver");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: EventReceiver of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_EventReceiver_ptr
static int tolua_set_irr__SIrrlichtCreationParameters_EventReceiver_ptr(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'EventReceiver'",NULL);
  if (!tolua_isusertype(tolua_S,2,"irr::IEventReceiver",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->EventReceiver = ((irr::IEventReceiver*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WindowId of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_WindowId
static int tolua_get_irr__SIrrlichtCreationParameters_WindowId(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WindowId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->WindowId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WindowId of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_WindowId
static int tolua_set_irr__SIrrlichtCreationParameters_WindowId(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WindowId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WindowId = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SDK_version_do_not_use of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_get_irr__SIrrlichtCreationParameters_SDK_version_do_not_use
static int tolua_get_irr__SIrrlichtCreationParameters_SDK_version_do_not_use(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SDK_version_do_not_use'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->SDK_version_do_not_use);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SDK_version_do_not_use of class  irr::SIrrlichtCreationParameters */
#ifndef TOLUA_DISABLE_tolua_set_irr__SIrrlichtCreationParameters_SDK_version_do_not_use
static int tolua_set_irr__SIrrlichtCreationParameters_SDK_version_do_not_use(lua_State* tolua_S)
{
  irr::SIrrlichtCreationParameters* self = (irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SDK_version_do_not_use'",NULL);
  if (!tolua_isstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SDK_version_do_not_use = ((char*)  tolua_tostring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_delete00
static int tolua_IrrLua_irr_IrrlichtDevice_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'",NULL);
#endif
  delete self;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: run of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_run00
static int tolua_IrrLua_irr_IrrlichtDevice_run00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'run'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->run();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'run'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoDriver of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getVideoDriver00
static int tolua_IrrLua_irr_IrrlichtDevice_getVideoDriver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoDriver'",NULL);
#endif
  {
   irr::video::IVideoDriver* tolua_ret = (irr::video::IVideoDriver*)  self->getVideoDriver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IVideoDriver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoDriver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFileSystem of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getFileSystem00
static int tolua_IrrLua_irr_IrrlichtDevice_getFileSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFileSystem'",NULL);
#endif
  {
   irr::io::IFileSystem* tolua_ret = (irr::io::IFileSystem*)  self->getFileSystem();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::io::IFileSystem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFileSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGUIEnvironment of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getGUIEnvironment00
static int tolua_IrrLua_irr_IrrlichtDevice_getGUIEnvironment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGUIEnvironment'",NULL);
#endif
  {
   irr::gui::IGUIEnvironment* tolua_ret = (irr::gui::IGUIEnvironment*)  self->getGUIEnvironment();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::IGUIEnvironment");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGUIEnvironment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneManager of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getSceneManager00
static int tolua_IrrLua_irr_IrrlichtDevice_getSceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneManager'",NULL);
#endif
  {
   irr::scene::ISceneManager* tolua_ret = (irr::scene::ISceneManager*)  self->getSceneManager();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::scene::ISceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCursorControl of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getCursorControl00
static int tolua_IrrLua_irr_IrrlichtDevice_getCursorControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCursorControl'",NULL);
#endif
  {
   irr::gui::ICursorControl* tolua_ret = (irr::gui::ICursorControl*)  self->getCursorControl();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::gui::ICursorControl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCursorControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLogger of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getLogger00
static int tolua_IrrLua_irr_IrrlichtDevice_getLogger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLogger'",NULL);
#endif
  {
   irr::ILogger* tolua_ret = (irr::ILogger*)  self->getLogger();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::ILogger");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLogger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVideoModeList of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getVideoModeList00
static int tolua_IrrLua_irr_IrrlichtDevice_getVideoModeList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVideoModeList'",NULL);
#endif
  {
   irr::video::IVideoModeList* tolua_ret = (irr::video::IVideoModeList*)  self->getVideoModeList();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::video::IVideoModeList");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVideoModeList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOSOperator of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getOSOperator00
static int tolua_IrrLua_irr_IrrlichtDevice_getOSOperator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOSOperator'",NULL);
#endif
  {
   irr::IOSOperator* tolua_ret = (irr::IOSOperator*)  self->getOSOperator();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IOSOperator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOSOperator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTimer of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getTimer00
static int tolua_IrrLua_irr_IrrlichtDevice_getTimer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTimer'",NULL);
#endif
  {
   irr::ITimer* tolua_ret = (irr::ITimer*)  self->getTimer();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::ITimer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWindowCaption of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_setWindowCaption00
static int tolua_IrrLua_irr_IrrlichtDevice_setWindowCaption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"wchar_t",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
  wchar_t* text = ((wchar_t*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWindowCaption'",NULL);
#endif
  {
   self->setWindowCaption(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWindowCaption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isWindowActive of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_isWindowActive00
static int tolua_IrrLua_irr_IrrlichtDevice_isWindowActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isWindowActive'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isWindowActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isWindowActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeDevice of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_closeDevice00
static int tolua_IrrLua_irr_IrrlichtDevice_closeDevice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeDevice'",NULL);
#endif
  {
   self->closeDevice();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeDevice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVersion of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getVersion00
static int tolua_IrrLua_irr_IrrlichtDevice_getVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVersion'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getVersion();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEventReceiver of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_setEventReceiver00
static int tolua_IrrLua_irr_IrrlichtDevice_setEventReceiver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::IEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
  irr::IEventReceiver* receiver = ((irr::IEventReceiver*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEventReceiver'",NULL);
#endif
  {
   self->setEventReceiver(receiver);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEventReceiver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEventReceiver of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getEventReceiver00
static int tolua_IrrLua_irr_IrrlichtDevice_getEventReceiver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEventReceiver'",NULL);
#endif
  {
   irr::IEventReceiver* tolua_ret = (irr::IEventReceiver*)  self->getEventReceiver();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IEventReceiver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEventReceiver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setResizeAble of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_setResizeAble00
static int tolua_IrrLua_irr_IrrlichtDevice_setResizeAble00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
  bool resize = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setResizeAble'",NULL);
#endif
  {
   self->setResizeAble(resize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setResizeAble'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: grab of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_grab00
static int tolua_IrrLua_irr_IrrlichtDevice_grab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'grab'",NULL);
#endif
  {
   self->grab();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'grab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drop of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_drop00
static int tolua_IrrLua_irr_IrrlichtDevice_drop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drop'",NULL);
#endif
  {
   bool tolua_ret = (bool)  self->drop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDebugName of class  irr::IrrlichtDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_IrrlichtDevice_getDebugName00
static int tolua_IrrLua_irr_IrrlichtDevice_getDebugName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::IrrlichtDevice",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::IrrlichtDevice* self = (irr::IrrlichtDevice*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDebugName'",NULL);
#endif
  {
   c8* tolua_ret = (c8*)  self->getDebugName();
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"c8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDebugName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::io::dofile */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_io_dofile00
static int tolua_IrrLua_irr_io_dofile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::io::IReadFile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::io::IReadFile* File = ((irr::io::IReadFile*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::io::dofile(File);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dofile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::createDevice */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_createDevice00
static int tolua_IrrLua_irr_createDevice00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"irr::core::dimension2d<s32>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"irr::IEventReceiver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::video::E_DRIVER_TYPE deviceType = ((irr::video::E_DRIVER_TYPE) (int)  tolua_tonumber(tolua_S,1,0));
  irr::core::dimension2d<s32>* windowSize = ((irr::core::dimension2d<s32>*)  tolua_tousertype(tolua_S,2,0));
  unsigned int bits = (( unsigned int)  tolua_tonumber(tolua_S,3,0));
  bool fullscreen = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool stencilbuffer = ((bool)  tolua_toboolean(tolua_S,5,0));
  bool vsync = ((bool)  tolua_toboolean(tolua_S,6,0));
  irr::IEventReceiver* receiver = ((irr::IEventReceiver*)  tolua_tousertype(tolua_S,7,0));
  {
   irr::IrrlichtDevice* tolua_ret = (irr::IrrlichtDevice*)  irr::createDevice(deviceType,*windowSize,bits,fullscreen,stencilbuffer,vsync,receiver);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IrrlichtDevice");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDevice'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: irr::createDeviceEx */
#ifndef TOLUA_DISABLE_tolua_IrrLua_irr_createDeviceEx00
static int tolua_IrrLua_irr_createDeviceEx00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"irr::SIrrlichtCreationParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  irr::SIrrlichtCreationParameters* parameters = ((irr::SIrrlichtCreationParameters*)  tolua_tousertype(tolua_S,1,0));
  {
   irr::IrrlichtDevice* tolua_ret = (irr::IrrlichtDevice*)  irr::createDeviceEx(*parameters);
   tolua_pushusertype(tolua_S,(void*)tolua_ret,"irr::IrrlichtDevice");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createDeviceEx'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_IrrLua_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"cast",0);
   tolua_beginmodule(tolua_S,"cast");
    tolua_function(tolua_S,"to_pitexture",tolua_IrrLua_irr_cast_to_pitexture00);
    tolua_function(tolua_S,"to_stringw",tolua_IrrLua_irr_cast_to_stringw00);
    tolua_function(tolua_S,"to_wchar_t_ptr",tolua_IrrLua_irr_cast_to_wchar_t_ptr00);
    tolua_function(tolua_S,"to_const_wchar_t_ptr",tolua_IrrLua_irr_cast_to_const_wchar_t_ptr00);
    tolua_function(tolua_S,"to_const_c8_ptr",tolua_IrrLua_irr_cast_to_const_c8_ptr00);
    tolua_function(tolua_S,"to_c8_ptr",tolua_IrrLua_irr_cast_to_c8_ptr00);
    tolua_function(tolua_S,"c8_ptr_to_std_string",tolua_IrrLua_irr_cast_c8_ptr_to_std_string00);
    tolua_function(tolua_S,"const_wchar_t_ptr_to_std_string",tolua_IrrLua_irr_cast_const_wchar_t_ptr_to_std_string00);
    tolua_function(tolua_S,"wchar_t_ptr_to_std_string",tolua_IrrLua_irr_cast_wchar_t_ptr_to_std_string00);
    tolua_function(tolua_S,"delete_wchar_t_ptr",tolua_IrrLua_irr_cast_delete_wchar_t_ptr00);
    tolua_function(tolua_S,"delete_const_wchar_t_ptr",tolua_IrrLua_irr_cast_delete_const_wchar_t_ptr00);
    tolua_function(tolua_S,"delete_c8_ptr",tolua_IrrLua_irr_cast_delete_c8_ptr00);
    tolua_function(tolua_S,"delete_const_c8_ptr",tolua_IrrLua_irr_cast_delete_const_c8_ptr00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"EDT_NULL",irr::video::EDT_NULL);
    tolua_constant(tolua_S,"EDT_SOFTWARE",irr::video::EDT_SOFTWARE);
    tolua_constant(tolua_S,"EDT_SOFTWARE2",irr::video::EDT_SOFTWARE2);
    tolua_constant(tolua_S,"EDT_DIRECT3D8",irr::video::EDT_DIRECT3D8);
    tolua_constant(tolua_S,"EDT_DIRECT3D9",irr::video::EDT_DIRECT3D9);
    tolua_constant(tolua_S,"EDT_OPENGL",irr::video::EDT_OPENGL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_constant(tolua_S,"KEY_LBUTTON",irr::KEY_LBUTTON);
   tolua_constant(tolua_S,"KEY_RBUTTON",irr::KEY_RBUTTON);
   tolua_constant(tolua_S,"KEY_CANCEL",irr::KEY_CANCEL);
   tolua_constant(tolua_S,"KEY_MBUTTON",irr::KEY_MBUTTON);
   tolua_constant(tolua_S,"KEY_XBUTTON1",irr::KEY_XBUTTON1);
   tolua_constant(tolua_S,"KEY_XBUTTON2",irr::KEY_XBUTTON2);
   tolua_constant(tolua_S,"KEY_BACK",irr::KEY_BACK);
   tolua_constant(tolua_S,"KEY_TAB",irr::KEY_TAB);
   tolua_constant(tolua_S,"KEY_CLEAR",irr::KEY_CLEAR);
   tolua_constant(tolua_S,"KEY_RETURN",irr::KEY_RETURN);
   tolua_constant(tolua_S,"KEY_SHIFT",irr::KEY_SHIFT);
   tolua_constant(tolua_S,"KEY_CONTROL",irr::KEY_CONTROL);
   tolua_constant(tolua_S,"KEY_MENU",irr::KEY_MENU);
   tolua_constant(tolua_S,"KEY_PAUSE",irr::KEY_PAUSE);
   tolua_constant(tolua_S,"KEY_CAPITAL",irr::KEY_CAPITAL);
   tolua_constant(tolua_S,"KEY_KANA",irr::KEY_KANA);
   tolua_constant(tolua_S,"KEY_HANGUEL",irr::KEY_HANGUEL);
   tolua_constant(tolua_S,"KEY_HANGUL",irr::KEY_HANGUL);
   tolua_constant(tolua_S,"KEY_JUNJA",irr::KEY_JUNJA);
   tolua_constant(tolua_S,"KEY_FINAL",irr::KEY_FINAL);
   tolua_constant(tolua_S,"KEY_HANJA",irr::KEY_HANJA);
   tolua_constant(tolua_S,"KEY_KANJI",irr::KEY_KANJI);
   tolua_constant(tolua_S,"KEY_ESCAPE",irr::KEY_ESCAPE);
   tolua_constant(tolua_S,"KEY_CONVERT",irr::KEY_CONVERT);
   tolua_constant(tolua_S,"KEY_NONCONVERT",irr::KEY_NONCONVERT);
   tolua_constant(tolua_S,"KEY_ACCEPT",irr::KEY_ACCEPT);
   tolua_constant(tolua_S,"KEY_MODECHANGE",irr::KEY_MODECHANGE);
   tolua_constant(tolua_S,"KEY_SPACE",irr::KEY_SPACE);
   tolua_constant(tolua_S,"KEY_PRIOR",irr::KEY_PRIOR);
   tolua_constant(tolua_S,"KEY_NEXT",irr::KEY_NEXT);
   tolua_constant(tolua_S,"KEY_END",irr::KEY_END);
   tolua_constant(tolua_S,"KEY_HOME",irr::KEY_HOME);
   tolua_constant(tolua_S,"KEY_LEFT",irr::KEY_LEFT);
   tolua_constant(tolua_S,"KEY_UP",irr::KEY_UP);
   tolua_constant(tolua_S,"KEY_RIGHT",irr::KEY_RIGHT);
   tolua_constant(tolua_S,"KEY_DOWN",irr::KEY_DOWN);
   tolua_constant(tolua_S,"KEY_SELECT",irr::KEY_SELECT);
   tolua_constant(tolua_S,"KEY_PRINT",irr::KEY_PRINT);
   tolua_constant(tolua_S,"KEY_EXECUT",irr::KEY_EXECUT);
   tolua_constant(tolua_S,"KEY_SNAPSHOT",irr::KEY_SNAPSHOT);
   tolua_constant(tolua_S,"KEY_INSERT",irr::KEY_INSERT);
   tolua_constant(tolua_S,"KEY_DELETE",irr::KEY_DELETE);
   tolua_constant(tolua_S,"KEY_HELP",irr::KEY_HELP);
   tolua_constant(tolua_S,"KEY_KEY_0",irr::KEY_KEY_0);
   tolua_constant(tolua_S,"KEY_KEY_1",irr::KEY_KEY_1);
   tolua_constant(tolua_S,"KEY_KEY_2",irr::KEY_KEY_2);
   tolua_constant(tolua_S,"KEY_KEY_3",irr::KEY_KEY_3);
   tolua_constant(tolua_S,"KEY_KEY_4",irr::KEY_KEY_4);
   tolua_constant(tolua_S,"KEY_KEY_5",irr::KEY_KEY_5);
   tolua_constant(tolua_S,"KEY_KEY_6",irr::KEY_KEY_6);
   tolua_constant(tolua_S,"KEY_KEY_7",irr::KEY_KEY_7);
   tolua_constant(tolua_S,"KEY_KEY_8",irr::KEY_KEY_8);
   tolua_constant(tolua_S,"KEY_KEY_9",irr::KEY_KEY_9);
   tolua_constant(tolua_S,"KEY_KEY_A",irr::KEY_KEY_A);
   tolua_constant(tolua_S,"KEY_KEY_B",irr::KEY_KEY_B);
   tolua_constant(tolua_S,"KEY_KEY_C",irr::KEY_KEY_C);
   tolua_constant(tolua_S,"KEY_KEY_D",irr::KEY_KEY_D);
   tolua_constant(tolua_S,"KEY_KEY_E",irr::KEY_KEY_E);
   tolua_constant(tolua_S,"KEY_KEY_F",irr::KEY_KEY_F);
   tolua_constant(tolua_S,"KEY_KEY_G",irr::KEY_KEY_G);
   tolua_constant(tolua_S,"KEY_KEY_H",irr::KEY_KEY_H);
   tolua_constant(tolua_S,"KEY_KEY_I",irr::KEY_KEY_I);
   tolua_constant(tolua_S,"KEY_KEY_J",irr::KEY_KEY_J);
   tolua_constant(tolua_S,"KEY_KEY_K",irr::KEY_KEY_K);
   tolua_constant(tolua_S,"KEY_KEY_L",irr::KEY_KEY_L);
   tolua_constant(tolua_S,"KEY_KEY_M",irr::KEY_KEY_M);
   tolua_constant(tolua_S,"KEY_KEY_N",irr::KEY_KEY_N);
   tolua_constant(tolua_S,"KEY_KEY_O",irr::KEY_KEY_O);
   tolua_constant(tolua_S,"KEY_KEY_P",irr::KEY_KEY_P);
   tolua_constant(tolua_S,"KEY_KEY_Q",irr::KEY_KEY_Q);
   tolua_constant(tolua_S,"KEY_KEY_R",irr::KEY_KEY_R);
   tolua_constant(tolua_S,"KEY_KEY_S",irr::KEY_KEY_S);
   tolua_constant(tolua_S,"KEY_KEY_T",irr::KEY_KEY_T);
   tolua_constant(tolua_S,"KEY_KEY_U",irr::KEY_KEY_U);
   tolua_constant(tolua_S,"KEY_KEY_V",irr::KEY_KEY_V);
   tolua_constant(tolua_S,"KEY_KEY_W",irr::KEY_KEY_W);
   tolua_constant(tolua_S,"KEY_KEY_X",irr::KEY_KEY_X);
   tolua_constant(tolua_S,"KEY_KEY_Y",irr::KEY_KEY_Y);
   tolua_constant(tolua_S,"KEY_KEY_Z",irr::KEY_KEY_Z);
   tolua_constant(tolua_S,"KEY_LWIN",irr::KEY_LWIN);
   tolua_constant(tolua_S,"KEY_RWIN",irr::KEY_RWIN);
   tolua_constant(tolua_S,"KEY_APPS",irr::KEY_APPS);
   tolua_constant(tolua_S,"KEY_SLEEP",irr::KEY_SLEEP);
   tolua_constant(tolua_S,"KEY_NUMPAD0",irr::KEY_NUMPAD0);
   tolua_constant(tolua_S,"KEY_NUMPAD1",irr::KEY_NUMPAD1);
   tolua_constant(tolua_S,"KEY_NUMPAD2",irr::KEY_NUMPAD2);
   tolua_constant(tolua_S,"KEY_NUMPAD3",irr::KEY_NUMPAD3);
   tolua_constant(tolua_S,"KEY_NUMPAD4",irr::KEY_NUMPAD4);
   tolua_constant(tolua_S,"KEY_NUMPAD5",irr::KEY_NUMPAD5);
   tolua_constant(tolua_S,"KEY_NUMPAD6",irr::KEY_NUMPAD6);
   tolua_constant(tolua_S,"KEY_NUMPAD7",irr::KEY_NUMPAD7);
   tolua_constant(tolua_S,"KEY_NUMPAD8",irr::KEY_NUMPAD8);
   tolua_constant(tolua_S,"KEY_NUMPAD9",irr::KEY_NUMPAD9);
   tolua_constant(tolua_S,"KEY_MULTIPLY",irr::KEY_MULTIPLY);
   tolua_constant(tolua_S,"KEY_ADD",irr::KEY_ADD);
   tolua_constant(tolua_S,"KEY_SEPARATOR",irr::KEY_SEPARATOR);
   tolua_constant(tolua_S,"KEY_SUBTRACT",irr::KEY_SUBTRACT);
   tolua_constant(tolua_S,"KEY_DECIMAL",irr::KEY_DECIMAL);
   tolua_constant(tolua_S,"KEY_DIVIDE",irr::KEY_DIVIDE);
   tolua_constant(tolua_S,"KEY_F1",irr::KEY_F1);
   tolua_constant(tolua_S,"KEY_F2",irr::KEY_F2);
   tolua_constant(tolua_S,"KEY_F3",irr::KEY_F3);
   tolua_constant(tolua_S,"KEY_F4",irr::KEY_F4);
   tolua_constant(tolua_S,"KEY_F5",irr::KEY_F5);
   tolua_constant(tolua_S,"KEY_F6",irr::KEY_F6);
   tolua_constant(tolua_S,"KEY_F7",irr::KEY_F7);
   tolua_constant(tolua_S,"KEY_F8",irr::KEY_F8);
   tolua_constant(tolua_S,"KEY_F9",irr::KEY_F9);
   tolua_constant(tolua_S,"KEY_F10",irr::KEY_F10);
   tolua_constant(tolua_S,"KEY_F11",irr::KEY_F11);
   tolua_constant(tolua_S,"KEY_F12",irr::KEY_F12);
   tolua_constant(tolua_S,"KEY_F13",irr::KEY_F13);
   tolua_constant(tolua_S,"KEY_F14",irr::KEY_F14);
   tolua_constant(tolua_S,"KEY_F15",irr::KEY_F15);
   tolua_constant(tolua_S,"KEY_F16",irr::KEY_F16);
   tolua_constant(tolua_S,"KEY_F17",irr::KEY_F17);
   tolua_constant(tolua_S,"KEY_F18",irr::KEY_F18);
   tolua_constant(tolua_S,"KEY_F19",irr::KEY_F19);
   tolua_constant(tolua_S,"KEY_F20",irr::KEY_F20);
   tolua_constant(tolua_S,"KEY_F21",irr::KEY_F21);
   tolua_constant(tolua_S,"KEY_F22",irr::KEY_F22);
   tolua_constant(tolua_S,"KEY_F23",irr::KEY_F23);
   tolua_constant(tolua_S,"KEY_F24",irr::KEY_F24);
   tolua_constant(tolua_S,"KEY_NUMLOCK",irr::KEY_NUMLOCK);
   tolua_constant(tolua_S,"KEY_SCROLL",irr::KEY_SCROLL);
   tolua_constant(tolua_S,"KEY_LSHIFT",irr::KEY_LSHIFT);
   tolua_constant(tolua_S,"KEY_RSHIFT",irr::KEY_RSHIFT);
   tolua_constant(tolua_S,"KEY_LCONTROL",irr::KEY_LCONTROL);
   tolua_constant(tolua_S,"KEY_RCONTROL",irr::KEY_RCONTROL);
   tolua_constant(tolua_S,"KEY_LMENU",irr::KEY_LMENU);
   tolua_constant(tolua_S,"KEY_RMENU",irr::KEY_RMENU);
   tolua_constant(tolua_S,"KEY_COMMA",irr::KEY_COMMA);
   tolua_constant(tolua_S,"KEY_PLUS",irr::KEY_PLUS);
   tolua_constant(tolua_S,"KEY_MINUS",irr::KEY_MINUS);
   tolua_constant(tolua_S,"KEY_PERIOD",irr::KEY_PERIOD);
   tolua_constant(tolua_S,"KEY_ATTN",irr::KEY_ATTN);
   tolua_constant(tolua_S,"KEY_CRSEL",irr::KEY_CRSEL);
   tolua_constant(tolua_S,"KEY_EXSEL",irr::KEY_EXSEL);
   tolua_constant(tolua_S,"KEY_EREOF",irr::KEY_EREOF);
   tolua_constant(tolua_S,"KEY_PLAY",irr::KEY_PLAY);
   tolua_constant(tolua_S,"KEY_ZOOM",irr::KEY_ZOOM);
   tolua_constant(tolua_S,"KEY_PA1",irr::KEY_PA1);
   tolua_constant(tolua_S,"KEY_OEM_CLEAR",irr::KEY_OEM_CLEAR);
   tolua_constant(tolua_S,"KEY_KEY_CODES_COUNT",irr::KEY_KEY_CODES_COUNT);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_constant(tolua_S,"EKA_MOVE_FORWARD",irr::EKA_MOVE_FORWARD);
   tolua_constant(tolua_S,"EKA_MOVE_BACKWARD",irr::EKA_MOVE_BACKWARD);
   tolua_constant(tolua_S,"EKA_STRAFE_LEFT",irr::EKA_STRAFE_LEFT);
   tolua_constant(tolua_S,"EKA_STRAFE_RIGHT",irr::EKA_STRAFE_RIGHT);
   tolua_constant(tolua_S,"EKA_COUNT",irr::EKA_COUNT);
   tolua_constant(tolua_S,"EKA_FORCE_32BIT",irr::EKA_FORCE_32BIT);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"SKeyMap","irr::SKeyMap","",tolua_collect_irr__SKeyMap);
   #else
   tolua_cclass(tolua_S,"SKeyMap","irr::SKeyMap","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"SKeyMap");
    tolua_function(tolua_S,"new",tolua_IrrLua_irr_SKeyMap_new00);
    tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_SKeyMap_new00_local);
    tolua_function(tolua_S,".call",tolua_IrrLua_irr_SKeyMap_new00_local);
    tolua_variable(tolua_S,"Action",tolua_get_irr__SKeyMap_Action,tolua_set_irr__SKeyMap_Action);
    tolua_variable(tolua_S,"KeyCode",tolua_get_irr__SKeyMap_KeyCode,tolua_set_irr__SKeyMap_KeyCode);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"IUnknown","irr::IUnknown","",tolua_collect_irr__IUnknown);
   #else
   tolua_cclass(tolua_S,"IUnknown","irr::IUnknown","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"IUnknown");
    tolua_function(tolua_S,"new",tolua_IrrLua_irr_IUnknown_new00);
    tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_IUnknown_new00_local);
    tolua_function(tolua_S,".call",tolua_IrrLua_irr_IUnknown_new00_local);
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_IUnknown_delete00);
    tolua_function(tolua_S,"grab",tolua_IrrLua_irr_IUnknown_grab00);
    tolua_function(tolua_S,"drop",tolua_IrrLua_irr_IUnknown_drop00);
    tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_IUnknown_getDebugName00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32,103,101,116, 68,101, 98,117,103,
     78, 97,109,101, 32, 61, 32,105,114,114, 46, 73, 85,110,107,
    110,111,119,110, 46,103,101,116, 68,101, 98,117,103, 78, 97,
    109,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46, 73, 85,110,107,110,111,119,110, 58,103,101,116, 68,101,
     98,117,103, 78, 97,109,101, 40, 41, 10,114,101,116,117,114,
    110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40,115,101,108,102, 58,103,101,116, 68,101, 98,117,103,
     78, 97,109,101, 40, 41, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 1");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
    tolua_cclass(tolua_S,"IAttributes","irr::io::IAttributes","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"IAttributes");
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_io_IAttributes_clear00);
     tolua_function(tolua_S,"addInt",tolua_IrrLua_irr_io_IAttributes_addInt00);
     tolua_function(tolua_S,"addFloat",tolua_IrrLua_irr_io_IAttributes_addFloat00);
     tolua_function(tolua_S,"addString",tolua_IrrLua_irr_io_IAttributes_addString00);
     tolua_function(tolua_S,"addBool",tolua_IrrLua_irr_io_IAttributes_addBool00);
     tolua_function(tolua_S,"addEnum",tolua_IrrLua_irr_io_IAttributes_addEnum00);
     tolua_function(tolua_S,"addEnum",tolua_IrrLua_irr_io_IAttributes_addEnum01);
     tolua_function(tolua_S,"addColor",tolua_IrrLua_irr_io_IAttributes_addColor00);
     tolua_function(tolua_S,"addColorf",tolua_IrrLua_irr_io_IAttributes_addColorf00);
     tolua_function(tolua_S,"addVector3d",tolua_IrrLua_irr_io_IAttributes_addVector3d00);
     tolua_function(tolua_S,"addBinary",tolua_IrrLua_irr_io_IAttributes_addBinary00);
     tolua_function(tolua_S,"addTexture",tolua_IrrLua_irr_io_IAttributes_addTexture00);
     tolua_function(tolua_S,"getAttributeCount",tolua_IrrLua_irr_io_IAttributes_getAttributeCount00);
     tolua_function(tolua_S,"getAttributeName",tolua_IrrLua_irr_io_IAttributes_getAttributeName00);
     tolua_function(tolua_S,"getAttributeType",tolua_IrrLua_irr_io_IAttributes_getAttributeType00);
     tolua_function(tolua_S,"getAttributeType",tolua_IrrLua_irr_io_IAttributes_getAttributeType01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute00);
     tolua_function(tolua_S,"getAttributeAsString",tolua_IrrLua_irr_io_IAttributes_getAttributeAsString00);
     tolua_function(tolua_S,"getAttributeAsString",tolua_IrrLua_irr_io_IAttributes_getAttributeAsString01);
     tolua_function(tolua_S,"getAttributeAsString",tolua_IrrLua_irr_io_IAttributes_getAttributeAsString02);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute01);
     tolua_function(tolua_S,"getAttributeAsBool",tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool00);
     tolua_function(tolua_S,"getAttributeAsBool",tolua_IrrLua_irr_io_IAttributes_getAttributeAsBool01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute02);
     tolua_function(tolua_S,"getAttributeAsInt",tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt00);
     tolua_function(tolua_S,"getAttributeAsInt",tolua_IrrLua_irr_io_IAttributes_getAttributeAsInt01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute03);
     tolua_function(tolua_S,"getAttributeAsFloat",tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat00);
     tolua_function(tolua_S,"getAttributeAsFloat",tolua_IrrLua_irr_io_IAttributes_getAttributeAsFloat01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute04);
     tolua_function(tolua_S,"getAttributeAsColor",tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor00);
     tolua_function(tolua_S,"getAttributeAsColor",tolua_IrrLua_irr_io_IAttributes_getAttributeAsColor01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute05);
     tolua_function(tolua_S,"getAttributeAsColorf",tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf00);
     tolua_function(tolua_S,"getAttributeAsColorf",tolua_IrrLua_irr_io_IAttributes_getAttributeAsColorf01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute06);
     tolua_function(tolua_S,"getAttributeAsVector3d",tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d00);
     tolua_function(tolua_S,"getAttributeAsVector3d",tolua_IrrLua_irr_io_IAttributes_getAttributeAsVector3d01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute07);
     tolua_function(tolua_S,"getAttributeAsBinaryData",tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData00);
     tolua_function(tolua_S,"getAttributeAsBinaryData",tolua_IrrLua_irr_io_IAttributes_getAttributeAsBinaryData01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute08);
     tolua_function(tolua_S,"getAttributeAsEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration00);
     tolua_function(tolua_S,"getAttributeAsEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration01);
     tolua_function(tolua_S,"getAttributeAsEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration02);
     tolua_function(tolua_S,"getAttributeAsEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeAsEnumeration03);
     tolua_function(tolua_S,"getAttributeEnumerationLiteralsOfEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration00);
     tolua_function(tolua_S,"getAttributeEnumerationLiteralsOfEnumeration",tolua_IrrLua_irr_io_IAttributes_getAttributeEnumerationLiteralsOfEnumeration01);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute09);
     tolua_function(tolua_S,"getAttributeAsTexture",tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture00);
     tolua_function(tolua_S,"getAttributeAsTexture",tolua_IrrLua_irr_io_IAttributes_getAttributeAsTexture01);
     tolua_function(tolua_S,"existsAttribute",tolua_IrrLua_irr_io_IAttributes_existsAttribute00);
     tolua_function(tolua_S,"findAttribute",tolua_IrrLua_irr_io_IAttributes_findAttribute00);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute10);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute11);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute12);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute13);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute14);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute15);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute16);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute17);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute18);
     tolua_function(tolua_S,"setAttribute",tolua_IrrLua_irr_io_IAttributes_setAttribute19);
     tolua_function(tolua_S,"read",tolua_IrrLua_irr_io_IAttributes_read00);
     tolua_function(tolua_S,"write",tolua_IrrLua_irr_io_IAttributes_write00);
    tolua_endmodule(tolua_S);
    tolua_constant(tolua_S,"EARWF_FOR_FILE",irr::io::EARWF_FOR_FILE);
    tolua_constant(tolua_S,"EARWF_FOR_EDITOR",irr::io::EARWF_FOR_EDITOR);
    tolua_constant(tolua_S,"EARWF_USE_RELATIVE_PATHS",irr::io::EARWF_USE_RELATIVE_PATHS);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SAttributeReadWriteOptions","irr::io::SAttributeReadWriteOptions","",tolua_collect_irr__io__SAttributeReadWriteOptions);
    #else
    tolua_cclass(tolua_S,"SAttributeReadWriteOptions","irr::io::SAttributeReadWriteOptions","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SAttributeReadWriteOptions");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_io_SAttributeReadWriteOptions_new00_local);
     tolua_variable(tolua_S,"Flags",tolua_get_irr__io__SAttributeReadWriteOptions_Flags,tolua_set_irr__io__SAttributeReadWriteOptions_Flags);
     tolua_variable(tolua_S,"Filename",tolua_get_irr__io__SAttributeReadWriteOptions_Filename_ptr,tolua_set_irr__io__SAttributeReadWriteOptions_Filename_ptr);
    tolua_endmodule(tolua_S);
    tolua_cclass(tolua_S,"IAttributeExchangingObject","irr::io::IAttributeExchangingObject","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"IAttributeExchangingObject");
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_io_IAttributeExchangingObject_serializeAttributes00);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_io_IAttributeExchangingObject_deserializeAttributes00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IAttributeExchangingObject_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IAttributeExchangingObject_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IAttributeExchangingObject_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
    tolua_constant(tolua_S,"EAT_INT",irr::io::EAT_INT);
    tolua_constant(tolua_S,"EAT_FLOAT",irr::io::EAT_FLOAT);
    tolua_constant(tolua_S,"EAT_STRING",irr::io::EAT_STRING);
    tolua_constant(tolua_S,"EAT_BOOL",irr::io::EAT_BOOL);
    tolua_constant(tolua_S,"EAT_ENUM",irr::io::EAT_ENUM);
    tolua_constant(tolua_S,"EAT_COLOR",irr::io::EAT_COLOR);
    tolua_constant(tolua_S,"EAT_COLORF",irr::io::EAT_COLORF);
    tolua_constant(tolua_S,"EAT_VECTOR3D",irr::io::EAT_VECTOR3D);
    tolua_constant(tolua_S,"EAT_BINARY",irr::io::EAT_BINARY);
    tolua_constant(tolua_S,"EAT_TEXTURE",irr::io::EAT_TEXTURE);
    tolua_constant(tolua_S,"EAT_UNKNOWN",irr::io::EAT_UNKNOWN);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 73,110,116, 32,
     61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,105,
     98,117,116,101,115, 46, 97,100,100, 73,110,116, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 58, 97,100,100, 73,
    110,116, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 44, 32,118, 97,108,117,101, 41, 10,108,111, 99, 97,108,
     32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 41, 10, 95, 97,100,100, 73,110,
    116, 40,115,101,108,102, 44, 32,110, 44, 32,118, 97,108,117,
    101, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,
    101,116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 70,108,
    111, 97,116, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,
    116,116,114,105, 98,117,116,101,115, 46, 97,100,100, 70,108,
    111, 97,116, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,
    115, 58, 97,100,100, 70,108,111, 97,116, 40, 97,116,116,114,
    105, 98,117,116,101, 78, 97,109,101, 44, 32,118, 97,108,117,
    101, 41, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,
    114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10, 95, 97,100,100, 70,108,111, 97,116, 40,115,101,108,
    102, 44, 32,110, 44, 32,118, 97,108,117,101, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99,
     56, 95,112,116,114, 40,110, 41, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95, 97,100,100, 83,116,114,105,110,103, 32,
     61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,105,
     98,117,116,101,115, 46, 97,100,100, 83,116,114,105,110,103,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,105,
    111, 46, 73, 65,116,116,114,105, 98,117,116,101,115, 58, 97,
    100,100, 83,116,114,105,110,103, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 44, 32,118, 97,108,117,101, 41,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,118, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,118,
     97,108,117,101, 41, 10, 95, 97,100,100, 83,116,114,105,110,
    103, 40,115,101,108,102, 44, 32,110, 44, 32,118, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,
    116,114, 40,118, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95, 97,100,100, 66,111,111,108, 32, 61, 32,105,114,114,
     46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,115,
     46, 97,100,100, 66,111,111,108, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,
    105, 98,117,116,101,115, 58, 97,100,100, 66,111,111,108, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 44, 32,
    118, 97,108,117,101, 41, 10,108,111, 99, 97,108, 32,110, 32,
     61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99,
     56, 95,112,116,114, 40, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10, 95, 97,100,100, 66,111,111,108, 40,
    115,101,108,102, 44, 32,110, 44, 32,118, 97,108,117,101, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95, 97,100,100, 67,111,108,111,
    114, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,
    114,105, 98,117,116,101,115, 46, 97,100,100, 67,111,108,111,
    114, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,115, 58,
     97,100,100, 67,111,108,111,114, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 44, 32,118, 97,108,117,101, 41,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
     95, 97,100,100, 67,111,108,111,114, 40,115,101,108,102, 44,
     32,110, 44, 32,118, 97,108,117,101, 41, 10,105,114,114, 46,
     99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,110, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95, 97,100,100, 67,111,108,111,114,102, 32, 61, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 46, 97,100,100, 67,111,108,111,114,102, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46,
     73, 65,116,116,114,105, 98,117,116,101,115, 58, 97,100,100,
     67,111,108,111,114,102, 40, 97,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 44, 32,118, 97,108,117,101, 41, 10,108,
    111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,116,
    116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10, 95, 97,
    100,100, 67,111,108,111,114,102, 40,115,101,108,102, 44, 32,
    110, 44, 32,118, 97,108,117,101, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,
    116,114, 40,110, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95, 97,100,100, 86,101, 99,116,111,114, 51,100, 32, 61,
     32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,
    117,116,101,115, 46, 97,100,100, 86,101, 99,116,111,114, 51,
    100, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,115, 58,
     97,100,100, 67,111,108,111,114,102, 40, 97,116,116,114,105,
     98,117,116,101, 78, 97,109,101, 44, 32,118, 97,108,117,101,
     41, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114,
     40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41,
     10, 95, 97,100,100, 86,101, 99,116,111,114, 51,100, 40,115,
    101,108,102, 44, 32,110, 44, 32,118, 97,108,117,101, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110, 41, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95, 97,100,100, 66,105,110, 97,114,
    121, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,
    114,105, 98,117,116,101,115, 46, 97,100,100, 66,105,110, 97,
    114,121, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,115,
     58, 97,100,100, 66,105,110, 97,114,121, 40, 97,116,116,114,
    105, 98,117,116,101, 78, 97,109,101, 44, 32,100, 97,116, 97,
     44, 32,100, 97,116, 97, 83,105,122,101, 73,110, 66,121,116,
    101,115, 41, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,
    116,114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 41, 10, 95, 97,100,100, 66,105,110, 97,114,121, 40,115,
    101,108,102, 44, 32,110, 44, 32,100, 97,116, 97, 44, 32,100,
     97,116, 97, 83,105,122,101, 73,110, 66,121,116,101,115, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95, 97,100,100, 84,101,120,116,
    117,114,101, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,
    116,116,114,105, 98,117,116,101,115, 46, 97,100,100, 84,101,
    120,116,117,114,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 58, 97,100,100, 84,101,120,116,117,114,101, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 44, 32,
    118, 97,108,117,101, 41, 10,108,111, 99, 97,108, 32,110, 32,
     61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99,
     56, 95,112,116,114, 40, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10, 95, 97,100,100, 84,101,120,116,117,
    114,101, 40,115,101,108,102, 44, 32,110, 44, 32,118, 97,108,
    117,101, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 78, 97,109,101, 32, 61, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 46,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 58,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 40,105,110,100,101,120, 41, 10,114,101,
    116,117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46, 99,
     56, 95,112,116,114, 95,116,111, 95,115,116,100, 95,115,116,
    114,105,110,103, 40, 95,103,101,116, 65,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 40,115,101,108,102, 44, 32,105,
    110,100,101,120, 41, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95,103,101,116, 65,116,116,114,105, 98,117,116,101,
     84,121,112,101, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 46,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 84,121,112,101, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 58,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 84,121,112,101, 40, 97,116,
    116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,105,102,
     32,116,121,112,101, 40, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 32, 61, 61, 32, 34,115,116,114,105,110,
    103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108, 32,110,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
     99, 56, 95,112,116,114, 40, 97,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,
    116, 32, 61, 32, 95,103,101,116, 65,116,116,114,105, 98,117,
    116,101, 84,121,112,101, 40,115,101,108,102, 44, 32,110, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,116,
    117,114,110, 32,114,101,116, 10,101,110,100, 10,114,101,116,
    117,114,110, 32, 95,103,101,116, 65,116,116,114,105, 98,117,
    116,101, 84,121,112,101, 40,115,101,108,102, 44, 32, 97,116,
    116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,101,110,
    100, 10,108,111, 99, 97,108, 32, 95,115,101,116, 65,116,116,
    114,105, 98,117,116,101, 32, 61, 32,105,114,114, 46,105,111,
     46, 73, 65,116,116,114,105, 98,117,116,101,115, 46,115,101,
    116, 65,116,116,114,105, 98,117,116,101, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 65,116,
    116,114,105, 98,117,116,101,115, 58,115,101,116, 65,116,116,
    114,105, 98,117,116,101, 40, 97,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 44, 32,118, 97,108,117,101, 41, 10,105,
    102, 32,116,121,112,101, 40,118, 97,108,117,101, 41, 32, 61,
     61, 32, 34,115,116,114,105,110,103, 34, 32,116,104,101,110,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,118, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,118,
     97,108,117,101, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95,115,101,116, 65,116,116,114,105, 98,117,116,
    101, 40,115,101,108,102, 44, 32,110, 44, 32,118, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,
    116,114, 40,118, 41, 10,114,101,116,117,114,110, 32,114,101,
    116, 10,101,110,100, 10,108,111, 99, 97,108, 32,110, 32, 61,
     32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56,
     95,112,116,114, 40, 97,116,116,114,105, 98,117,116,101, 78,
     97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95,115,101,116, 65,116,116,114,105, 98,117,116,101,
     40,115,101,108,102, 44, 32,110, 44, 32,118, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99,
     56, 95,112,116,114, 40,110, 41, 10,114,101,116,117,114,110,
     32,114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     83,116,114,105,110,103, 32, 61, 32,105,114,114, 46,105,111,
     46, 73, 65,116,116,114,105, 98,117,116,101,115, 46,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 65,115, 83,116,114,
    105,110,103, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,
    115, 58,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,
    115, 83,116,114,105,110,103, 40, 97,116,116,114,105, 98,117,
    116,101, 78, 97,109,101, 41, 10,105,102, 32,116,121,112,101,
     40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41,
     32, 61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,104,
    101,110, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,
    114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,115,116,114,105,110,103, 99,
     95,116,111, 95,115,116,100, 95,115,116,114,105,110,103, 40,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     83,116,114,105,110,103, 40,115,101,108,102, 44, 32,110, 41,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,110,100, 10,114,101,
    116,117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46,115,
    116,114,105,110,103, 99, 95,116,111, 95,115,116,100, 95,115,
    116,114,105,110,103, 40, 95,103,101,116, 65,116,116,114,105,
     98,117,116,101, 65,115, 83,116,114,105,110,103, 40,115,101,
    108,102, 44, 32, 97,116,116,114,105, 98,117,116,101, 78, 97,
    109,101, 41, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     66,111,111,108, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 46,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 65,115, 66,111,111,108, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,105,111,
     46, 73, 65,116,116,114,105, 98,117,116,101,115, 58,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 65,115, 66,111,111,
    108, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10,105,102, 32,116,121,112,101, 40, 97,116,116,114,105,
     98,117,116,101, 78, 97,109,101, 41, 32, 61, 61, 32, 34,115,
    116,114,105,110,103, 34, 32,116,104,101,110, 10,108,111, 99,
     97,108, 32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,
    105, 98,117,116,101, 78, 97,109,101, 41, 10,108,111, 99, 97,
    108, 32,114,101,116, 32, 61, 32, 95,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 65,115, 66,111,111,108, 40,115,101,
    108,102, 44, 32,110, 41, 10,105,114,114, 46, 99, 97,115,116,
     46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,
    110, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,
    110,100, 10,114,101,116,117,114,110, 32, 95,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 65,115, 66,111,111,108, 40,
    115,101,108,102, 44, 32, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,
    115, 73,110,116, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 46,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 65,115, 73,110,116, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46,
     73, 65,116,116,114,105, 98,117,116,101,115, 58,103,101,116,
     65,116,116,114,105, 98,117,116,101, 65,115, 73,110,116, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    105,102, 32,116,121,112,101, 40, 97,116,116,114,105, 98,117,
    116,101, 78, 97,109,101, 41, 32, 61, 61, 32, 34,115,116,114,
    105,110,103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108,
     32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95,103,101,116, 65,116,116,114,105,
     98,117,116,101, 65,115, 73,110,116, 40,115,101,108,102, 44,
     32,110, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    114,101,116,117,114,110, 32, 95,103,101,116, 65,116,116,114,
    105, 98,117,116,101, 65,115, 73,110,116, 40,115,101,108,102,
     44, 32, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 65,115, 70,108,111,
     97,116, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,116,
    116,114,105, 98,117,116,101,115, 46,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 65,115, 70,108,111, 97,116, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46,
     73, 65,116,116,114,105, 98,117,116,101,115, 58,103,101,116,
     65,116,116,114,105, 98,117,116,101, 65,115, 73,110,116, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    105,102, 32,116,121,112,101, 40, 97,116,116,114,105, 98,117,
    116,101, 78, 97,109,101, 41, 32, 61, 61, 32, 34,115,116,114,
    105,110,103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108,
     32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95,103,101,116, 65,116,116,114,105,
     98,117,116,101, 65,115, 70,108,111, 97,116, 40,115,101,108,
    102, 44, 32,110, 41, 10,105,114,114, 46, 99, 97,115,116, 46,
    100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,110,
     41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,
    100, 10,114,101,116,117,114,110, 32, 95,103,101,116, 65,116,
    116,114,105, 98,117,116,101, 65,115, 70,108,111, 97,116, 40,
    115,101,108,102, 44, 32, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,
    115, 67,111,108,111,114, 32, 61, 32,105,114,114, 46,105,111,
     46, 73, 65,116,116,114,105, 98,117,116,101,115, 46,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 65,115, 67,111,108,
    111,114, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,115,
     58,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     67,111,108,111,114, 40, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10,105,102, 32,116,121,112,101, 40, 97,
    116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 32, 61,
     61, 32, 34,115,116,114,105,110,103, 34, 32,116,104,101,110,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 65,115, 67,111,108,
    111,114, 40,115,101,108,102, 44, 32,110, 41, 10,105,114,114,
     46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56,
     95,112,116,114, 40,110, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,114,101,116,117,114,110, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     67,111,108,111,114, 40,115,101,108,102, 44, 32, 97,116,116,
    114,105, 98,117,116,101, 78, 97,109,101, 41, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95,103,101,116, 65,116,116,114,
    105, 98,117,116,101, 65,115, 67,111,108,111,114,102, 32, 61,
     32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,
    117,116,101,115, 46,103,101,116, 65,116,116,114,105, 98,117,
    116,101, 65,115, 67,111,108,111,114,102, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 65,116,
    116,114,105, 98,117,116,101,115, 58,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 65,115, 67,111,108,111,114,102, 40,
     97,116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,
    105,102, 32,116,121,112,101, 40, 97,116,116,114,105, 98,117,
    116,101, 78, 97,109,101, 41, 32, 61, 61, 32, 34,115,116,114,
    105,110,103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108,
     32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95,103,101,116, 65,116,116,114,105,
     98,117,116,101, 65,115, 67,111,108,111,114,102, 40,115,101,
    108,102, 44, 32,110, 41, 10,105,114,114, 46, 99, 97,115,116,
     46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,
    110, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,
    110,100, 10,114,101,116,117,114,110, 32, 95,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 65,115, 67,111,108,111,114,
    102, 40,115,101,108,102, 44, 32, 97,116,116,114,105, 98,117,
    116,101, 78, 97,109,101, 41, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 65,115, 86,101, 99,116,111,114, 51,100, 32, 61, 32,105,
    114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,
    101,115, 46,103,101,116, 65,116,116,114,105, 98,117,116,101,
     65,115, 86,101, 99,116,111,114, 51,100, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 65,116,
    116,114,105, 98,117,116,101,115, 58,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 65,115, 86,101, 99,116,111,114, 51,
    100, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10,105,102, 32,116,121,112,101, 40, 97,116,116,114,105,
     98,117,116,101, 78, 97,109,101, 41, 32, 61, 61, 32, 34,115,
    116,114,105,110,103, 34, 32,116,104,101,110, 10,108,111, 99,
     97,108, 32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,116,116,114,
    105, 98,117,116,101, 78, 97,109,101, 41, 10,108,111, 99, 97,
    108, 32,114,101,116, 32, 61, 32, 95,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 65,115, 86,101, 99,116,111,114, 51,
    100, 40,115,101,108,102, 44, 32,110, 41, 10,105,114,114, 46,
     99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,110, 41, 10,114,101,116,117,114,110, 32,114,
    101,116, 10,101,110,100, 10,114,101,116,117,114,110, 32, 95,
    103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115, 86,
    101, 99,116,111,114, 51,100, 40,115,101,108,102, 44, 32, 97,
    116,116,114,105, 98,117,116,101, 78, 97,109,101, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116, 65,116,
    116,114,105, 98,117,116,101, 65,115, 66,105,110, 97,114,121,
     68, 97,116, 97, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     65,116,116,114,105, 98,117,116,101,115, 46,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 65,115, 66,105,110, 97,114,
    121, 68, 97,116, 97, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 58,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 65,115, 66,105,110, 97,114,121, 68, 97,116, 97, 40, 97,
    116,116,114,105, 98,117,116,101, 78, 97,109,101, 44, 32,111,
    117,116, 68, 97,116, 97, 44, 32,109, 97,120, 83,105,122,101,
     73,110, 66,121,116,101,115, 41, 10,105,102, 32,116,121,112,
    101, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 32, 61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,
    104,101,110, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,
    116,114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     66,105,110, 97,114,121, 68, 97,116, 97, 40,115,101,108,102,
     44, 32,110, 44, 32,111,117,116, 68, 97,116, 97, 44, 32,109,
     97,120, 83,105,122,101, 73,110, 66,121,116,101,115, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,116,117,
    114,110, 32,114,101,116, 10,101,110,100, 10,114,101,116,117,
    114,110, 32, 95,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 65,115, 86,101, 99,116,111,114, 51,100, 40,115,101,108,
    102, 44, 32, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,
    101,116, 65,116,116,114,105, 98,117,116,101, 65,115, 84,101,
    120,116,117,114,101, 32, 61, 32,105,114,114, 46,105,111, 46,
     73, 65,116,116,114,105, 98,117,116,101,115, 46,103,101,116,
     65,116,116,114,105, 98,117,116,101, 65,115, 84,101,120,116,
    117,114,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,116,101,
    115, 58,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,
    115, 84,101,120,116,117,114,101, 40, 97,116,116,114,105, 98,
    117,116,101, 78, 97,109,101, 41, 10,105,102, 32,116,121,112,
    101, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 32, 61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,
    104,101,110, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,
    116,114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 65,115,
     84,101,120,116,117,114,101, 40,115,101,108,102, 44, 32,110,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,110,100, 10,114,101,
    116,117,114,110, 32, 95,103,101,116, 65,116,116,114,105, 98,
    117,116,101, 65,115, 84,101,120,116,117,114,101, 40,115,101,
    108,102, 44, 32, 97,116,116,114,105, 98,117,116,101, 78, 97,
    109,101, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
    101,120,105,115,116,115, 65,116,116,114,105, 98,117,116,101,
     32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,
    105, 98,117,116,101,115, 46,101,120,105,115,116,115, 65,116,
    116,114,105, 98,117,116,101, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,105,
     98,117,116,101,115, 58,101,120,105,115,116,115, 65,116,116,
    114,105, 98,117,116,101, 40, 97,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,110, 32,
     61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99,
     56, 95,112,116,114, 40, 97,116,116,114,105, 98,117,116,101,
     78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95,101,120,105,115,116,115, 65,116,116,114,105,
     98,117,116,101, 40,115,101,108,102, 44, 32,110, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 41, 10,114,101,116,117,114,
    110, 32,114,101,116, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95,102,105,110,100, 65,116,116,114,105, 98,117,116,101,
     32, 61, 32,105,114,114, 46,105,111, 46, 73, 65,116,116,114,
    105, 98,117,116,101,115, 46,102,105,110,100, 65,116,116,114,
    105, 98,117,116,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 65,116,116,114,105, 98,117,
    116,101,115, 58,102,105,110,100, 65,116,116,114,105, 98,117,
    116,101, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 41, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,
    114, 40, 97,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,
    102,105,110,100, 65,116,116,114,105, 98,117,116,101, 40,115,
    101,108,102, 44, 32,110, 41, 10,105,114,114, 46, 99, 97,115,
    116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114,
     40,110, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 2");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"vector2d_f32_","irr::core::vector2d<f32>","",tolua_collect_irr__core__vector2d_f32_);
    #else
    tolua_cclass(tolua_S,"vector2d_f32_","irr::core::vector2d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"vector2d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector2d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector2d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector2d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector2d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector2d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector2d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector2d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector2d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector2d_f32__new02_local);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_vector2d_f32___sub00);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_vector2d_f32___add00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_vector2d_f32___sub01);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_vector2d_f32___mul00);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_vector2d_f32___mul01);
     tolua_function(tolua_S,".div",tolua_IrrLua_irr_core_vector2d_f32___div00);
     tolua_function(tolua_S,".div",tolua_IrrLua_irr_core_vector2d_f32___div01);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_vector2d_f32___eq00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_vector2d_f32__set00);
     tolua_function(tolua_S,"getLength",tolua_IrrLua_irr_core_vector2d_f32__getLength00);
     tolua_function(tolua_S,"dotProduct",tolua_IrrLua_irr_core_vector2d_f32__dotProduct00);
     tolua_function(tolua_S,"getDistanceFrom",tolua_IrrLua_irr_core_vector2d_f32__getDistanceFrom00);
     tolua_function(tolua_S,"rotateBy",tolua_IrrLua_irr_core_vector2d_f32__rotateBy00);
     tolua_function(tolua_S,"normalize",tolua_IrrLua_irr_core_vector2d_f32__normalize00);
     tolua_function(tolua_S,"getAngleTrig",tolua_IrrLua_irr_core_vector2d_f32__getAngleTrig00);
     tolua_function(tolua_S,"getAngle",tolua_IrrLua_irr_core_vector2d_f32__getAngle00);
     tolua_function(tolua_S,"getAngleWith",tolua_IrrLua_irr_core_vector2d_f32__getAngleWith00);
     tolua_function(tolua_S,"getInterpolated",tolua_IrrLua_irr_core_vector2d_f32__getInterpolated00);
     tolua_function(tolua_S,"interpolate",tolua_IrrLua_irr_core_vector2d_f32__interpolate00);
     tolua_variable(tolua_S,"X",tolua_get_irr__core__vector2d_f32__X,tolua_set_irr__core__vector2d_f32__X);
     tolua_variable(tolua_S,"Y",tolua_get_irr__core__vector2d_f32__Y,tolua_set_irr__core__vector2d_f32__Y);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,
    114, 50,100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,
    118,101, 99,116,111,114, 50,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 3");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"vector3d_f32_","irr::core::vector3d<f32>","",tolua_collect_irr__core__vector3d_f32_);
    #else
    tolua_cclass(tolua_S,"vector3d_f32_","irr::core::vector3d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"vector3d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector3d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector3d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector3d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector3d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector3d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector3d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_vector3d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_vector3d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_vector3d_f32__new02_local);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_vector3d_f32___sub00);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_vector3d_f32___add00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_vector3d_f32___sub01);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_vector3d_f32___mul00);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_vector3d_f32___mul01);
     tolua_function(tolua_S,".div",tolua_IrrLua_irr_core_vector3d_f32___div00);
     tolua_function(tolua_S,".div",tolua_IrrLua_irr_core_vector3d_f32___div01);
     tolua_function(tolua_S,".le",tolua_IrrLua_irr_core_vector3d_f32___le00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_vector3d_f32___eq00);
     tolua_function(tolua_S,"equals",tolua_IrrLua_irr_core_vector3d_f32__equals00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_vector3d_f32__set00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_vector3d_f32__set01);
     tolua_function(tolua_S,"getLength",tolua_IrrLua_irr_core_vector3d_f32__getLength00);
     tolua_function(tolua_S,"getLengthSQ",tolua_IrrLua_irr_core_vector3d_f32__getLengthSQ00);
     tolua_function(tolua_S,"dotProduct",tolua_IrrLua_irr_core_vector3d_f32__dotProduct00);
     tolua_function(tolua_S,"getDistanceFrom",tolua_IrrLua_irr_core_vector3d_f32__getDistanceFrom00);
     tolua_function(tolua_S,"getDistanceFromSQ",tolua_IrrLua_irr_core_vector3d_f32__getDistanceFromSQ00);
     tolua_function(tolua_S,"crossProduct",tolua_IrrLua_irr_core_vector3d_f32__crossProduct00);
     tolua_function(tolua_S,"isBetweenPoints",tolua_IrrLua_irr_core_vector3d_f32__isBetweenPoints00);
     tolua_function(tolua_S,"normalize",tolua_IrrLua_irr_core_vector3d_f32__normalize00);
     tolua_function(tolua_S,"setLength",tolua_IrrLua_irr_core_vector3d_f32__setLength00);
     tolua_function(tolua_S,"invert",tolua_IrrLua_irr_core_vector3d_f32__invert00);
     tolua_function(tolua_S,"rotateXZBy",tolua_IrrLua_irr_core_vector3d_f32__rotateXZBy00);
     tolua_function(tolua_S,"rotateXYBy",tolua_IrrLua_irr_core_vector3d_f32__rotateXYBy00);
     tolua_function(tolua_S,"rotateYZBy",tolua_IrrLua_irr_core_vector3d_f32__rotateYZBy00);
     tolua_function(tolua_S,"getInterpolated",tolua_IrrLua_irr_core_vector3d_f32__getInterpolated00);
     tolua_function(tolua_S,"getHorizontalAngle",tolua_IrrLua_irr_core_vector3d_f32__getHorizontalAngle00);
     tolua_function(tolua_S,"getAs4Values",tolua_IrrLua_irr_core_vector3d_f32__getAs4Values00);
     tolua_variable(tolua_S,"X",tolua_get_irr__core__vector3d_f32__X,tolua_set_irr__core__vector3d_f32__X);
     tolua_variable(tolua_S,"Y",tolua_get_irr__core__vector3d_f32__Y,tolua_set_irr__core__vector3d_f32__Y);
     tolua_variable(tolua_S,"Z",tolua_get_irr__core__vector3d_f32__Z,tolua_set_irr__core__vector3d_f32__Z);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,
    114, 51,100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,
    118,101, 99,116,111,114, 51,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 4");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"dimension2d_f32_","irr::core::dimension2d<f32>","",tolua_collect_irr__core__dimension2d_f32_);
    #else
    tolua_cclass(tolua_S,"dimension2d_f32_","irr::core::dimension2d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"dimension2d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_f32__new02_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_dimension2d_f32___eq00);
     tolua_variable(tolua_S,"Width",tolua_get_irr__core__dimension2d_f32__Width,tolua_set_irr__core__dimension2d_f32__Width);
     tolua_variable(tolua_S,"Height",tolua_get_irr__core__dimension2d_f32__Height,tolua_set_irr__core__dimension2d_f32__Height);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"dimension2d_s32_","irr::core::dimension2d<s32>","",tolua_collect_irr__core__dimension2d_s32_);
    #else
    tolua_cclass(tolua_S,"dimension2d_s32_","irr::core::dimension2d<s32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"dimension2d_s32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_s32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_s32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_s32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_s32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_s32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_s32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_dimension2d_s32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_dimension2d_s32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_dimension2d_s32__new02_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_dimension2d_s32___eq00);
     tolua_variable(tolua_S,"Width",tolua_get_irr__core__dimension2d_s32__Width,tolua_set_irr__core__dimension2d_s32__Width);
     tolua_variable(tolua_S,"Height",tolua_get_irr__core__dimension2d_s32__Height,tolua_set_irr__core__dimension2d_s32__Height);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,100,105,109,101,110,
    115,105,111,110, 50,100, 32, 61, 32,105,114,114, 46, 99,111,
    114,101, 46,100,105,109,101,110,115,105,111,110, 50,100, 95,
    102, 51, 50, 95, 10,105,114,114, 46, 99,111,114,101, 46,100,
    105,109,101,110,115,105,111,110, 50,100,102, 51, 50, 32, 61,
     32,105,114,114, 46, 99,111,114,101, 46,100,105,109,101,110,
    115,105,111,110, 50,100, 95,102, 51, 50, 95, 10,105,114,114,
     46, 99,111,114,101, 46,100,105,109,101,110,115,105,111,110,
     50,100,115, 51, 50, 32, 61, 32,105,114,114, 46, 99,111,114,
    101, 46,100,105,109,101,110,115,105,111,110, 50,100, 95,115,
     51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 5");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"position2d_f32_","irr::core::position2d<f32>","",tolua_collect_irr__core__position2d_f32_);
    #else
    tolua_cclass(tolua_S,"position2d_f32_","irr::core::position2d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"position2d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_f32__new02_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_position2d_f32___eq00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_position2d_f32___sub00);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_position2d_f32___add00);
     tolua_variable(tolua_S,"X",tolua_get_irr__core__position2d_f32__X,tolua_set_irr__core__position2d_f32__X);
     tolua_variable(tolua_S,"Y",tolua_get_irr__core__position2d_f32__Y,tolua_set_irr__core__position2d_f32__Y);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"position2d_s32_","irr::core::position2d<s32>","",tolua_collect_irr__core__position2d_s32_);
    #else
    tolua_cclass(tolua_S,"position2d_s32_","irr::core::position2d<s32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"position2d_s32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_s32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_s32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_s32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_s32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_s32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_s32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_position2d_s32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_position2d_s32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_position2d_s32__new02_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_position2d_s32___eq00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_position2d_s32___sub00);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_position2d_s32___add00);
     tolua_variable(tolua_S,"X",tolua_get_irr__core__position2d_s32__X,tolua_set_irr__core__position2d_s32__X);
     tolua_variable(tolua_S,"Y",tolua_get_irr__core__position2d_s32__Y,tolua_set_irr__core__position2d_s32__Y);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,112,111,115,105,116,
    105,111,110, 50,100, 32, 61, 32,105,114,114, 46, 99,111,114,
    101, 46,112,111,115,105,116,105,111,110, 50,100, 95,115, 51,
     50, 95, 10,105,114,114, 46, 99,111,114,101, 46,112,111,115,
    105,116,105,111,110, 50,100,115, 51, 50, 32, 61, 32,105,114,
    114, 46, 99,111,114,101, 46,112,111,115,105,116,105,111,110,
     50,100, 95,115, 51, 50, 95, 10,105,114,114, 46, 99,111,114,
    101, 46,112,111,115,105,116,105,111,110, 50,100,102, 51, 50,
     32, 61, 32,105,114,114, 46, 99,111,114,101, 46,112,111,115,
    105,116,105,111,110, 50,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 6");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"line2d_f32_","irr::core::line2d<f32>","",tolua_collect_irr__core__line2d_f32_);
    #else
    tolua_cclass(tolua_S,"line2d_f32_","irr::core::line2d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"line2d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line2d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line2d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line2d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line2d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line2d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line2d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line2d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line2d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line2d_f32__new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line2d_f32__new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line2d_f32__new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line2d_f32__new03_local);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_line2d_f32___add00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_line2d_f32___sub00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_line2d_f32___eq00);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line2d_f32__setLine00);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line2d_f32__setLine01);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line2d_f32__setLine02);
     tolua_function(tolua_S,"getLength",tolua_IrrLua_irr_core_line2d_f32__getLength00);
     tolua_function(tolua_S,"getVector",tolua_IrrLua_irr_core_line2d_f32__getVector00);
     tolua_function(tolua_S,"intersectWith",tolua_IrrLua_irr_core_line2d_f32__intersectWith00);
     tolua_function(tolua_S,"getUnitVector",tolua_IrrLua_irr_core_line2d_f32__getUnitVector00);
     tolua_function(tolua_S,"getAngleWith",tolua_IrrLua_irr_core_line2d_f32__getAngleWith00);
     tolua_variable(tolua_S,"start",tolua_get_irr__core__line2d_f32__start,tolua_set_irr__core__line2d_f32__start);
     tolua_variable(tolua_S,"end",tolua_get_irr__core__line2d_f32__end,tolua_set_irr__core__line2d_f32__end);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,108,105,110,101, 50,
    100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,108,105,
    110,101, 50,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 7");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"line3d_f32_","irr::core::line3d<f32>","",tolua_collect_irr__core__line3d_f32_);
    #else
    tolua_cclass(tolua_S,"line3d_f32_","irr::core::line3d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"line3d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line3d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line3d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line3d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line3d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line3d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line3d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line3d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line3d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line3d_f32__new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_line3d_f32__new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_line3d_f32__new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_line3d_f32__new03_local);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_line3d_f32___add00);
     tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_line3d_f32___sub00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_line3d_f32___eq00);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line3d_f32__setLine00);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line3d_f32__setLine01);
     tolua_function(tolua_S,"setLine",tolua_IrrLua_irr_core_line3d_f32__setLine02);
     tolua_function(tolua_S,"getLength",tolua_IrrLua_irr_core_line3d_f32__getLength00);
     tolua_function(tolua_S,"getLengthSQ",tolua_IrrLua_irr_core_line3d_f32__getLengthSQ00);
     tolua_function(tolua_S,"getMiddle",tolua_IrrLua_irr_core_line3d_f32__getMiddle00);
     tolua_function(tolua_S,"getVector",tolua_IrrLua_irr_core_line3d_f32__getVector00);
     tolua_function(tolua_S,"isPointBetweenStartAndEnd",tolua_IrrLua_irr_core_line3d_f32__isPointBetweenStartAndEnd00);
     tolua_function(tolua_S,"getClosestPoint",tolua_IrrLua_irr_core_line3d_f32__getClosestPoint00);
     tolua_function(tolua_S,"getIntersectionWithSphere",tolua_IrrLua_irr_core_line3d_f32__getIntersectionWithSphere00);
     tolua_variable(tolua_S,"start",tolua_get_irr__core__line3d_f32__start,tolua_set_irr__core__line3d_f32__start);
     tolua_variable(tolua_S,"end",tolua_get_irr__core__line3d_f32__end,tolua_set_irr__core__line3d_f32__end);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,108,105,110,101, 51,
    100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,108,105,
    110,101, 51,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 8");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    tolua_constant(tolua_S,"ISREL3D_FRONT",irr::core::ISREL3D_FRONT);
    tolua_constant(tolua_S,"ISREL3D_BACK",irr::core::ISREL3D_BACK);
    tolua_constant(tolua_S,"ISREL3D_PLANAR",irr::core::ISREL3D_PLANAR);
    tolua_constant(tolua_S,"ISREL3D_SPANNING",irr::core::ISREL3D_SPANNING);
    tolua_constant(tolua_S,"ISREL3D_CLIPPED",irr::core::ISREL3D_CLIPPED);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"plane3d_f32_","irr::core::plane3d<f32>","",tolua_collect_irr__core__plane3d_f32_);
    #else
    tolua_cclass(tolua_S,"plane3d_f32_","irr::core::plane3d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"plane3d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_plane3d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_plane3d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_plane3d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_plane3d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_plane3d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_plane3d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_plane3d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_plane3d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_plane3d_f32__new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_plane3d_f32__new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_plane3d_f32__new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_plane3d_f32__new03_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_plane3d_f32__new04);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_plane3d_f32__new04_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_plane3d_f32__new04_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_plane3d_f32___eq00);
     tolua_function(tolua_S,"setPlane",tolua_IrrLua_irr_core_plane3d_f32__setPlane00);
     tolua_function(tolua_S,"setPlane",tolua_IrrLua_irr_core_plane3d_f32__setPlane01);
     tolua_function(tolua_S,"setPlane",tolua_IrrLua_irr_core_plane3d_f32__setPlane02);
     tolua_function(tolua_S,"getIntersectionWithLine",tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLine00);
     tolua_function(tolua_S,"getKnownIntersectionWithLine",tolua_IrrLua_irr_core_plane3d_f32__getKnownIntersectionWithLine00);
     tolua_function(tolua_S,"getIntersectionWithLimitedLine",tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithLimitedLine00);
     tolua_function(tolua_S,"classifyPointRelation",tolua_IrrLua_irr_core_plane3d_f32__classifyPointRelation00);
     tolua_function(tolua_S,"recalculateD",tolua_IrrLua_irr_core_plane3d_f32__recalculateD00);
     tolua_function(tolua_S,"getMemberPoint",tolua_IrrLua_irr_core_plane3d_f32__getMemberPoint00);
     tolua_function(tolua_S,"existsInterSection",tolua_IrrLua_irr_core_plane3d_f32__existsInterSection00);
     tolua_function(tolua_S,"getIntersectionWithPlane",tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlane00);
     tolua_function(tolua_S,"getIntersectionWithPlanes",tolua_IrrLua_irr_core_plane3d_f32__getIntersectionWithPlanes00);
     tolua_function(tolua_S,"isFrontFacing",tolua_IrrLua_irr_core_plane3d_f32__isFrontFacing00);
     tolua_function(tolua_S,"getDistanceTo",tolua_IrrLua_irr_core_plane3d_f32__getDistanceTo00);
     tolua_variable(tolua_S,"Normal",tolua_get_irr__core__plane3d_f32__Normal,tolua_set_irr__core__plane3d_f32__Normal);
     tolua_variable(tolua_S,"D",tolua_get_irr__core__plane3d_f32__D,tolua_set_irr__core__plane3d_f32__D);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,112,108, 97,110,101,
     51,100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,112,
    108, 97,110,101, 51,100, 95,102, 51, 50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 9");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"aabbox3d_f32_","irr::core::aabbox3d<f32>","",tolua_collect_irr__core__aabbox3d_f32_);
    #else
    tolua_cclass(tolua_S,"aabbox3d_f32_","irr::core::aabbox3d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"aabbox3d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_aabbox3d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_aabbox3d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_aabbox3d_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_aabbox3d_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_aabbox3d_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_aabbox3d_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_aabbox3d_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_aabbox3d_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_aabbox3d_f32__new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_aabbox3d_f32__new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_aabbox3d_f32__new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_aabbox3d_f32__new03_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_aabbox3d_f32___eq00);
     tolua_function(tolua_S,"addInternalPoint",tolua_IrrLua_irr_core_aabbox3d_f32__addInternalPoint00);
     tolua_function(tolua_S,"addInternalBox",tolua_IrrLua_irr_core_aabbox3d_f32__addInternalBox00);
     tolua_function(tolua_S,"reset",tolua_IrrLua_irr_core_aabbox3d_f32__reset00);
     tolua_function(tolua_S,"reset",tolua_IrrLua_irr_core_aabbox3d_f32__reset01);
     tolua_function(tolua_S,"reset",tolua_IrrLua_irr_core_aabbox3d_f32__reset02);
     tolua_function(tolua_S,"isPointInside",tolua_IrrLua_irr_core_aabbox3d_f32__isPointInside00);
     tolua_function(tolua_S,"isPointTotalInside",tolua_IrrLua_irr_core_aabbox3d_f32__isPointTotalInside00);
     tolua_function(tolua_S,"intersectsWithBox",tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithBox00);
     tolua_function(tolua_S,"intersectsWithLine",tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine00);
     tolua_function(tolua_S,"intersectsWithLine",tolua_IrrLua_irr_core_aabbox3d_f32__intersectsWithLine01);
     tolua_function(tolua_S,"classifyPlaneRelation",tolua_IrrLua_irr_core_aabbox3d_f32__classifyPlaneRelation00);
     tolua_function(tolua_S,"getCenter",tolua_IrrLua_irr_core_aabbox3d_f32__getCenter00);
     tolua_function(tolua_S,"getExtent",tolua_IrrLua_irr_core_aabbox3d_f32__getExtent00);
     tolua_function(tolua_S,"getEdges",tolua_IrrLua_irr_core_aabbox3d_f32__getEdges00);
     tolua_function(tolua_S,"isEmpty",tolua_IrrLua_irr_core_aabbox3d_f32__isEmpty00);
     tolua_function(tolua_S,"repair",tolua_IrrLua_irr_core_aabbox3d_f32__repair00);
     tolua_function(tolua_S,"getInterpolated",tolua_IrrLua_irr_core_aabbox3d_f32__getInterpolated00);
     tolua_variable(tolua_S,"MinEdge",tolua_get_irr__core__aabbox3d_f32__MinEdge,tolua_set_irr__core__aabbox3d_f32__MinEdge);
     tolua_variable(tolua_S,"MaxEdge",tolua_get_irr__core__aabbox3d_f32__MaxEdge,tolua_set_irr__core__aabbox3d_f32__MaxEdge);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46, 97, 97, 98, 98,111,
    120, 51,100, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,
     97, 97, 98, 98,111,120, 51,100, 95,102, 51, 50, 95, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46, 99,111,114,
    101, 46, 97, 97, 98, 98,111,120, 51,100, 95,102, 51, 50, 95,
     58,103,101,116, 69,100,103,101,115, 40, 41, 10,108,111, 99,
     97,108, 32,109,105,100,100,108,101, 32, 61, 32, 40,115,101,
    108,102, 46, 77,105,110, 69,100,103,101, 32, 43, 32,115,101,
    108,102, 46, 77, 97,120, 69,100,103,101, 41, 32, 47, 32,105,
    114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,
    100, 40, 50, 44, 50, 44, 50, 41, 10,108,111, 99, 97,108, 32,
    100,105, 97,103, 32, 61, 32,109,105,100,100,108,101, 32, 45,
     32,115,101,108,102, 46, 77, 97,120, 69,100,103,101, 10,108,
    111, 99, 97,108, 32,101,100,103,101,115, 32, 61, 32,123,125,
     10,101,100,103,101,115, 91, 49, 93, 32, 61, 32,105,114,114,
     46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,100, 40,
    109,105,100,100,108,101, 46, 88, 32, 43, 32,100,105, 97,103,
     46, 88, 44, 32,109,105,100,100,108,101, 46, 89, 32, 43, 32,
    100,105, 97,103, 46, 89, 44, 32,109,105,100,100,108,101, 46,
     90, 32, 43, 32,100,105, 97,103, 46, 90, 41, 10,101,100,103,
    101,115, 91, 50, 93, 32, 61, 32,105,114,114, 46, 99,111,114,
    101, 46,118,101, 99,116,111,114, 51,100, 40,109,105,100,100,
    108,101, 46, 88, 32, 43, 32,100,105, 97,103, 46, 88, 44, 32,
    109,105,100,100,108,101, 46, 89, 32, 45, 32,100,105, 97,103,
     46, 89, 44, 32,109,105,100,100,108,101, 46, 90, 32, 43, 32,
    100,105, 97,103, 46, 90, 41, 10,101,100,103,101,115, 91, 51,
     93, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,118,101,
     99,116,111,114, 51,100, 40,109,105,100,100,108,101, 46, 88,
     32, 43, 32,100,105, 97,103, 46, 88, 44, 32,109,105,100,100,
    108,101, 46, 89, 32, 43, 32,100,105, 97,103, 46, 89, 44, 32,
    109,105,100,100,108,101, 46, 90, 32, 45, 32,100,105, 97,103,
     46, 90, 41, 10,101,100,103,101,115, 91, 52, 93, 32, 61, 32,
    105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,114,
     51,100, 40,109,105,100,100,108,101, 46, 88, 32, 43, 32,100,
    105, 97,103, 46, 88, 44, 32,109,105,100,100,108,101, 46, 89,
     32, 45, 32,100,105, 97,103, 46, 89, 44, 32,109,105,100,100,
    108,101, 46, 90, 32, 45, 32,100,105, 97,103, 46, 90, 41, 10,
    101,100,103,101,115, 91, 53, 93, 32, 61, 32,105,114,114, 46,
     99,111,114,101, 46,118,101, 99,116,111,114, 51,100, 40,109,
    105,100,100,108,101, 46, 88, 32, 45, 32,100,105, 97,103, 46,
     88, 44, 32,109,105,100,100,108,101, 46, 89, 32, 43, 32,100,
    105, 97,103, 46, 89, 44, 32,109,105,100,100,108,101, 46, 90,
     32, 43, 32,100,105, 97,103, 46, 90, 41, 10,101,100,103,101,
    115, 91, 54, 93, 32, 61, 32,105,114,114, 46, 99,111,114,101,
     46,118,101, 99,116,111,114, 51,100, 40,109,105,100,100,108,
    101, 46, 88, 32, 45, 32,100,105, 97,103, 46, 88, 44, 32,109,
    105,100,100,108,101, 46, 89, 32, 45, 32,100,105, 97,103, 46,
     89, 44, 32,109,105,100,100,108,101, 46, 90, 32, 43, 32,100,
    105, 97,103, 46, 90, 41, 10,101,100,103,101,115, 91, 55, 93,
     32, 61, 32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,
    116,111,114, 51,100, 40,109,105,100,100,108,101, 46, 88, 32,
     45, 32,100,105, 97,103, 46, 88, 44, 32,109,105,100,100,108,
    101, 46, 89, 32, 43, 32,100,105, 97,103, 46, 89, 44, 32,109,
    105,100,100,108,101, 46, 90, 32, 45, 32,100,105, 97,103, 46,
     90, 41, 10,101,100,103,101,115, 91, 56, 93, 32, 61, 32,105,
    114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,
    100, 40,109,105,100,100,108,101, 46, 88, 32, 45, 32,100,105,
     97,103, 46, 88, 44, 32,109,105,100,100,108,101, 46, 89, 32,
     45, 32,100,105, 97,103, 46, 89, 44, 32,109,105,100,100,108,
    101, 46, 90, 32, 45, 32,100,105, 97,103, 46, 90, 41, 10,114,
    101,116,117,114,110, 32,101,100,103,101,115, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 10");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"triangle3d_f32_","irr::core::triangle3d<f32>","",tolua_collect_irr__core__triangle3d_f32_);
    #else
    tolua_cclass(tolua_S,"triangle3d_f32_","irr::core::triangle3d<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"triangle3d_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_triangle3d_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_triangle3d_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_triangle3d_f32__new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_triangle3d_f32__delete00);
     tolua_function(tolua_S,"isTotalInsideBox",tolua_IrrLua_irr_core_triangle3d_f32__isTotalInsideBox00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_triangle3d_f32___eq00);
     tolua_function(tolua_S,"closestPointOnTriangle",tolua_IrrLua_irr_core_triangle3d_f32__closestPointOnTriangle00);
     tolua_function(tolua_S,"isPointInside",tolua_IrrLua_irr_core_triangle3d_f32__isPointInside00);
     tolua_function(tolua_S,"isPointInsideFast",tolua_IrrLua_irr_core_triangle3d_f32__isPointInsideFast00);
     tolua_function(tolua_S,"isOnSameSide",tolua_IrrLua_irr_core_triangle3d_f32__isOnSameSide00);
     tolua_function(tolua_S,"getIntersectionWithLimitedLine",tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLimitedLine00);
     tolua_function(tolua_S,"getIntersectionWithLine",tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionWithLine00);
     tolua_function(tolua_S,"getIntersectionOfPlaneWithLine",tolua_IrrLua_irr_core_triangle3d_f32__getIntersectionOfPlaneWithLine00);
     tolua_function(tolua_S,"getNormal",tolua_IrrLua_irr_core_triangle3d_f32__getNormal00);
     tolua_function(tolua_S,"isFrontFacing",tolua_IrrLua_irr_core_triangle3d_f32__isFrontFacing00);
     tolua_function(tolua_S,"getPlane",tolua_IrrLua_irr_core_triangle3d_f32__getPlane00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_triangle3d_f32__set00);
     tolua_variable(tolua_S,"pointA",tolua_get_irr__core__triangle3d_f32__pointA,tolua_set_irr__core__triangle3d_f32__pointA);
     tolua_variable(tolua_S,"pointB",tolua_get_irr__core__triangle3d_f32__pointB,tolua_set_irr__core__triangle3d_f32__pointB);
     tolua_variable(tolua_S,"pointC",tolua_get_irr__core__triangle3d_f32__pointC,tolua_set_irr__core__triangle3d_f32__pointC);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 99,111,114,101, 46,116,114,105, 97,110,
    103,108,101, 51,100, 32, 61, 32,105,114,114, 46, 99,111,114,
    101, 46,116,114,105, 97,110,103,108,101, 51,100, 95,102, 51,
     50, 95,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 11");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"EVT_STANDARD",irr::video::EVT_STANDARD);
    tolua_constant(tolua_S,"EVT_2TCOORDS",irr::video::EVT_2TCOORDS);
    tolua_constant(tolua_S,"EVT_TANGENTS",irr::video::EVT_TANGENTS);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"S3DVertex","irr::video::S3DVertex","",tolua_collect_irr__video__S3DVertex);
    #else
    tolua_cclass(tolua_S,"S3DVertex","irr::video::S3DVertex","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"S3DVertex");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_S3DVertex_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_S3DVertex_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_S3DVertex_new00_local);
     tolua_variable(tolua_S,"Pos",tolua_get_irr__video__S3DVertex_Pos,tolua_set_irr__video__S3DVertex_Pos);
     tolua_variable(tolua_S,"Normal",tolua_get_irr__video__S3DVertex_Normal,tolua_set_irr__video__S3DVertex_Normal);
     tolua_variable(tolua_S,"Color",tolua_get_irr__video__S3DVertex_Color,tolua_set_irr__video__S3DVertex_Color);
     tolua_variable(tolua_S,"TCoords",tolua_get_irr__video__S3DVertex_TCoords,tolua_set_irr__video__S3DVertex_TCoords);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_video_S3DVertex__eq00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"S3DVertex2TCoords","irr::video::S3DVertex2TCoords","",tolua_collect_irr__video__S3DVertex2TCoords);
    #else
    tolua_cclass(tolua_S,"S3DVertex2TCoords","irr::video::S3DVertex2TCoords","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"S3DVertex2TCoords");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_S3DVertex2TCoords_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_S3DVertex2TCoords_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_S3DVertex2TCoords_new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_S3DVertex2TCoords_new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_S3DVertex2TCoords_new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_S3DVertex2TCoords_new01_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_video_S3DVertex2TCoords__eq00);
     tolua_variable(tolua_S,"Pos",tolua_get_irr__video__S3DVertex2TCoords_Pos,tolua_set_irr__video__S3DVertex2TCoords_Pos);
     tolua_variable(tolua_S,"Normal",tolua_get_irr__video__S3DVertex2TCoords_Normal,tolua_set_irr__video__S3DVertex2TCoords_Normal);
     tolua_variable(tolua_S,"Color",tolua_get_irr__video__S3DVertex2TCoords_Color,tolua_set_irr__video__S3DVertex2TCoords_Color);
     tolua_variable(tolua_S,"TCoords",tolua_get_irr__video__S3DVertex2TCoords_TCoords,tolua_set_irr__video__S3DVertex2TCoords_TCoords);
     tolua_variable(tolua_S,"TCoords2",tolua_get_irr__video__S3DVertex2TCoords_TCoords2,tolua_set_irr__video__S3DVertex2TCoords_TCoords2);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"S3DVertexTangents","irr::video::S3DVertexTangents","",tolua_collect_irr__video__S3DVertexTangents);
    #else
    tolua_cclass(tolua_S,"S3DVertexTangents","irr::video::S3DVertexTangents","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"S3DVertexTangents");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_S3DVertexTangents_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_S3DVertexTangents_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_S3DVertexTangents_new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_S3DVertexTangents_new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_S3DVertexTangents_new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_S3DVertexTangents_new01_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_video_S3DVertexTangents__eq00);
     tolua_variable(tolua_S,"Pos",tolua_get_irr__video__S3DVertexTangents_Pos,tolua_set_irr__video__S3DVertexTangents_Pos);
     tolua_variable(tolua_S,"Normal",tolua_get_irr__video__S3DVertexTangents_Normal,tolua_set_irr__video__S3DVertexTangents_Normal);
     tolua_variable(tolua_S,"Color",tolua_get_irr__video__S3DVertexTangents_Color,tolua_set_irr__video__S3DVertexTangents_Color);
     tolua_variable(tolua_S,"TCoords",tolua_get_irr__video__S3DVertexTangents_TCoords,tolua_set_irr__video__S3DVertexTangents_TCoords);
     tolua_variable(tolua_S,"Tangent",tolua_get_irr__video__S3DVertexTangents_Tangent,tolua_set_irr__video__S3DVertexTangents_Tangent);
     tolua_variable(tolua_S,"Binormal",tolua_get_irr__video__S3DVertexTangents_Binormal,tolua_set_irr__video__S3DVertexTangents_Binormal);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"ETCF_ALWAYS_16_BIT",irr::video::ETCF_ALWAYS_16_BIT);
    tolua_constant(tolua_S,"ETCF_ALWAYS_32_BIT",irr::video::ETCF_ALWAYS_32_BIT);
    tolua_constant(tolua_S,"ETCF_OPTIMIZED_FOR_QUALITY",irr::video::ETCF_OPTIMIZED_FOR_QUALITY);
    tolua_constant(tolua_S,"ETCF_OPTIMIZED_FOR_SPEED",irr::video::ETCF_OPTIMIZED_FOR_SPEED);
    tolua_constant(tolua_S,"ETCF_CREATE_MIP_MAPS",irr::video::ETCF_CREATE_MIP_MAPS);
    tolua_constant(tolua_S,"ETCF_FORCE_32_BIT_DO_NOT_USE",irr::video::ETCF_FORCE_32_BIT_DO_NOT_USE);
    tolua_function(tolua_S,"getTextureFormatFromFlags",tolua_IrrLua_irr_video_getTextureFormatFromFlags00);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"PITexture","irr::video::PITexture","",tolua_collect_irr__video__PITexture);
    #else
    tolua_cclass(tolua_S,"PITexture","irr::video::PITexture","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"PITexture");
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ITexture","irr::video::ITexture","irr::IUnknown",tolua_collect_irr__video__ITexture);
    #else
    tolua_cclass(tolua_S,"ITexture","irr::video::ITexture","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ITexture");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_ITexture_delete00);
     tolua_function(tolua_S,"lock",tolua_IrrLua_irr_video_ITexture_lock00);
     tolua_function(tolua_S,"unlock",tolua_IrrLua_irr_video_ITexture_unlock00);
     tolua_function(tolua_S,"getOriginalSize",tolua_IrrLua_irr_video_ITexture_getOriginalSize00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_video_ITexture_getSize00);
     tolua_function(tolua_S,"getDriverType",tolua_IrrLua_irr_video_ITexture_getDriverType00);
     tolua_function(tolua_S,"getColorFormat",tolua_IrrLua_irr_video_ITexture_getColorFormat00);
     tolua_function(tolua_S,"getPitch",tolua_IrrLua_irr_video_ITexture_getPitch00);
     tolua_function(tolua_S,"regenerateMipMapLevels",tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels00);
     tolua_function(tolua_S,"hasMipMaps",tolua_IrrLua_irr_video_ITexture_hasMipMaps00);
     tolua_function(tolua_S,"regenerateMipMapLevels",tolua_IrrLua_irr_video_ITexture_regenerateMipMapLevels01);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_video_ITexture_getName00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_ITexture_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_ITexture_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_ITexture_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"rect_s32_","irr::core::rect<s32>","",tolua_collect_irr__core__rect_s32_);
    #else
    tolua_cclass(tolua_S,"rect_s32_","irr::core::rect<s32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"rect_s32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_rect_s32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_rect_s32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_rect_s32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_rect_s32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_rect_s32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_rect_s32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_rect_s32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_rect_s32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_rect_s32__new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_rect_s32__new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_rect_s32__new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_rect_s32__new03_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_rect_s32__new04);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_rect_s32__new04_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_rect_s32__new04_local);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_rect_s32___add00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_rect_s32___eq00);
     tolua_function(tolua_S,"isPointInside",tolua_IrrLua_irr_core_rect_s32__isPointInside00);
     tolua_function(tolua_S,"isRectCollided",tolua_IrrLua_irr_core_rect_s32__isRectCollided00);
     tolua_function(tolua_S,"clipAgainst",tolua_IrrLua_irr_core_rect_s32__clipAgainst00);
     tolua_function(tolua_S,"getWidth",tolua_IrrLua_irr_core_rect_s32__getWidth00);
     tolua_function(tolua_S,"getHeight",tolua_IrrLua_irr_core_rect_s32__getHeight00);
     tolua_function(tolua_S,"repair",tolua_IrrLua_irr_core_rect_s32__repair00);
     tolua_function(tolua_S,"isValid",tolua_IrrLua_irr_core_rect_s32__isValid00);
     tolua_function(tolua_S,"getCenter",tolua_IrrLua_irr_core_rect_s32__getCenter00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_core_rect_s32__getSize00);
     tolua_variable(tolua_S,"UpperLeftCorner",tolua_get_irr__core__rect_s32__UpperLeftCorner,tolua_set_irr__core__rect_s32__UpperLeftCorner);
     tolua_variable(tolua_S,"LowerRightCorner",tolua_get_irr__core__rect_s32__LowerRightCorner,tolua_set_irr__core__rect_s32__LowerRightCorner);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46, 99,
    111,114,101, 46,114,101, 99,116, 40, 97, 44, 98, 44, 99, 44,
    100, 41, 10,105,102, 32,116,111,108,117, 97, 46,116,121,112,
    101, 40, 98, 41, 32, 61, 61, 32, 34,105,114,114, 58, 58, 99,
    111,114,101, 58, 58,100,105,109,101,110,115,105,111,110, 50,
    100, 60,102, 51, 50, 62, 34, 32,116,104,101,110, 10, 98, 32,
     61, 32,105,114,114, 46, 99,111,114,101, 46,100,105,109,101,
    110,115,105,111,110, 50,100,115, 51, 50, 40, 98, 46, 88, 44,
     32, 98, 46, 89, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32,114,101,116, 32, 61, 32,105,114,114, 46, 99,111,114,101,
     46,114,101, 99,116, 95,115, 51, 50, 95, 58,110,101,119, 40,
    117,110,112, 97, 99,107, 40,123, 97, 44, 98, 44, 99, 44,100,
    125, 41, 41, 10,116,111,108,117, 97, 46,116, 97,107,101,111,
    119,110,101,114,115,104,105,112, 40,114,101,116, 41, 10,114,
    101,116,117,114,110, 32,114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 12");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"matrix4","irr::core::matrix4","",tolua_collect_irr__core__matrix4);
    #else
    tolua_cclass(tolua_S,"matrix4","irr::core::matrix4","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"matrix4");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_matrix4_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_matrix4_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_matrix4_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_matrix4_delete00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_matrix4__eq00);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_matrix4__mul00);
     tolua_function(tolua_S,"makeIdentity",tolua_IrrLua_irr_core_matrix4_makeIdentity00);
     tolua_function(tolua_S,"isIdentity",tolua_IrrLua_irr_core_matrix4_isIdentity00);
     tolua_function(tolua_S,"setTranslation",tolua_IrrLua_irr_core_matrix4_setTranslation00);
     tolua_function(tolua_S,"getTranslation",tolua_IrrLua_irr_core_matrix4_getTranslation00);
     tolua_function(tolua_S,"setInverseTranslation",tolua_IrrLua_irr_core_matrix4_setInverseTranslation00);
     tolua_function(tolua_S,"setRotationRadians",tolua_IrrLua_irr_core_matrix4_setRotationRadians00);
     tolua_function(tolua_S,"setRotationDegrees",tolua_IrrLua_irr_core_matrix4_setRotationDegrees00);
     tolua_function(tolua_S,"getRotationDegrees",tolua_IrrLua_irr_core_matrix4_getRotationDegrees00);
     tolua_function(tolua_S,"setInverseRotationRadians",tolua_IrrLua_irr_core_matrix4_setInverseRotationRadians00);
     tolua_function(tolua_S,"setInverseRotationDegrees",tolua_IrrLua_irr_core_matrix4_setInverseRotationDegrees00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_core_matrix4_setScale00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_core_matrix4_getScale00);
     tolua_function(tolua_S,"inverseTranslateVect",tolua_IrrLua_irr_core_matrix4_inverseTranslateVect00);
     tolua_function(tolua_S,"inverseRotateVect",tolua_IrrLua_irr_core_matrix4_inverseRotateVect00);
     tolua_function(tolua_S,"rotateVect",tolua_IrrLua_irr_core_matrix4_rotateVect00);
     tolua_function(tolua_S,"transformVect",tolua_IrrLua_irr_core_matrix4_transformVect00);
     tolua_function(tolua_S,"transformVect",tolua_IrrLua_irr_core_matrix4_transformVect01);
     tolua_function(tolua_S,"translateVect",tolua_IrrLua_irr_core_matrix4_translateVect00);
     tolua_function(tolua_S,"transformPlane",tolua_IrrLua_irr_core_matrix4_transformPlane00);
     tolua_function(tolua_S,"transformPlane",tolua_IrrLua_irr_core_matrix4_transformPlane01);
     tolua_function(tolua_S,"transformBox",tolua_IrrLua_irr_core_matrix4_transformBox00);
     tolua_function(tolua_S,"transformBoxEx",tolua_IrrLua_irr_core_matrix4_transformBoxEx00);
     tolua_function(tolua_S,"multiplyWith1x4Matrix",tolua_IrrLua_irr_core_matrix4_multiplyWith1x4Matrix00);
     tolua_function(tolua_S,"makeInverse",tolua_IrrLua_irr_core_matrix4_makeInverse00);
     tolua_function(tolua_S,"getInverse",tolua_IrrLua_irr_core_matrix4_getInverse00);
     tolua_function(tolua_S,"buildProjectionMatrixPerspectiveFovRH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovRH00);
     tolua_function(tolua_S,"buildProjectionMatrixPerspectiveFovLH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveFovLH00);
     tolua_function(tolua_S,"buildProjectionMatrixPerspectiveRH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveRH00);
     tolua_function(tolua_S,"buildProjectionMatrixPerspectiveLH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixPerspectiveLH00);
     tolua_function(tolua_S,"buildProjectionMatrixOrthoLH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoLH00);
     tolua_function(tolua_S,"buildProjectionMatrixOrthoRH",tolua_IrrLua_irr_core_matrix4_buildProjectionMatrixOrthoRH00);
     tolua_function(tolua_S,"buildCameraLookAtMatrixLH",tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixLH00);
     tolua_function(tolua_S,"buildCameraLookAtMatrixRH",tolua_IrrLua_irr_core_matrix4_buildCameraLookAtMatrixRH00);
     tolua_function(tolua_S,"buildShadowMatrix",tolua_IrrLua_irr_core_matrix4_buildShadowMatrix00);
     tolua_function(tolua_S,"buildNDCToDCMatrix",tolua_IrrLua_irr_core_matrix4_buildNDCToDCMatrix00);
     tolua_function(tolua_S,"interpolate",tolua_IrrLua_irr_core_matrix4_interpolate00);
     tolua_function(tolua_S,"getTransposed",tolua_IrrLua_irr_core_matrix4_getTransposed00);
     tolua_array(tolua_S,"M",tolua_get_IrrLua_irr_core_matrix4_M,tolua_set_IrrLua_irr_core_matrix4_M);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"quaternion","irr::core::quaternion","",tolua_collect_irr__core__quaternion);
    #else
    tolua_cclass(tolua_S,"quaternion","irr::core::quaternion","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"quaternion");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_quaternion_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_quaternion_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_quaternion_new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_quaternion_new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_quaternion_new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_quaternion_new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_quaternion_new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_quaternion_new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_quaternion_new02_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_quaternion_new03);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_quaternion_new03_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_quaternion_new03_local);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_quaternion__eq00);
     tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_quaternion__add00);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_quaternion__mul00);
     tolua_function(tolua_S,".mul",tolua_IrrLua_irr_core_quaternion__mul01);
     tolua_function(tolua_S,"getDotProduct",tolua_IrrLua_irr_core_quaternion_getDotProduct00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_quaternion_set00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_core_quaternion_set01);
     tolua_function(tolua_S,"normalize",tolua_IrrLua_irr_core_quaternion_normalize00);
     tolua_function(tolua_S,"getMatrix",tolua_IrrLua_irr_core_quaternion_getMatrix00);
     tolua_function(tolua_S,"makeInverse",tolua_IrrLua_irr_core_quaternion_makeInverse00);
     tolua_function(tolua_S,"slerp",tolua_IrrLua_irr_core_quaternion_slerp00);
     tolua_function(tolua_S,"fromAngleAxis",tolua_IrrLua_irr_core_quaternion_fromAngleAxis00);
     tolua_function(tolua_S,"toEuler",tolua_IrrLua_irr_core_quaternion_toEuler00);
     tolua_variable(tolua_S,"X",tolua_get_irr__core__quaternion_X,tolua_set_irr__core__quaternion_X);
     tolua_variable(tolua_S,"Y",tolua_get_irr__core__quaternion_Y,tolua_set_irr__core__quaternion_Y);
     tolua_variable(tolua_S,"Z",tolua_get_irr__core__quaternion_Z,tolua_set_irr__core__quaternion_Z);
     tolua_variable(tolua_S,"W",tolua_get_irr__core__quaternion_W,tolua_set_irr__core__quaternion_W);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    tolua_cclass(tolua_S,"list_f32_","irr::core::list<f32>","",NULL);
    tolua_beginmodule(tolua_S,"list_f32_");
     #ifdef __cplusplus
     tolua_cclass(tolua_S,"Iterator","irr::core::list<f32>::Iterator","",tolua_collect_irr__core__list_f32___Iterator);
     #else
     tolua_cclass(tolua_S,"Iterator","irr::core::list<f32>::Iterator","",NULL);
     #endif
     tolua_beginmodule(tolua_S,"Iterator");
      tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_list_f32__Iterator_new00);
      tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_list_f32__Iterator_new00_local);
      tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_list_f32__Iterator_new00_local);
      tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_list_f32__Iterator__add00);
      tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_list_f32__Iterator__sub00);
      tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_list_f32__Iterator__eq00);
     tolua_endmodule(tolua_S);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"list_irr__scene__ISceneNode__","irr::core::list<irr::scene::ISceneNode*>","",tolua_collect_irr__core__list_irr__scene__ISceneNode__);
    #else
    tolua_cclass(tolua_S,"list_irr__scene__ISceneNode__","irr::core::list<irr::scene::ISceneNode*>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"list_irr__scene__ISceneNode__");
     #ifdef __cplusplus
     tolua_cclass(tolua_S,"Iterator","irr::core::list<irr::scene::ISceneNode*>::Iterator","",tolua_collect_irr__core__list_irr__scene__ISceneNode____Iterator);
     #else
     tolua_cclass(tolua_S,"Iterator","irr::core::list<irr::scene::ISceneNode*>::Iterator","",NULL);
     #endif
     tolua_beginmodule(tolua_S,"Iterator");
      tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00);
      tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00_local);
      tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator_new00_local);
      tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__add00);
      tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__sub00);
      tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_list_irr__scene__ISceneNode___Iterator__eq00);
     tolua_endmodule(tolua_S);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"list_irr__scene__ISceneNodeAnimator__","irr::core::list<irr::scene::ISceneNodeAnimator*>","",tolua_collect_irr__core__list_irr__scene__ISceneNodeAnimator__);
    #else
    tolua_cclass(tolua_S,"list_irr__scene__ISceneNodeAnimator__","irr::core::list<irr::scene::ISceneNodeAnimator*>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"list_irr__scene__ISceneNodeAnimator__");
     #ifdef __cplusplus
     tolua_cclass(tolua_S,"Iterator","irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator","",tolua_collect_irr__core__list_irr__scene__ISceneNodeAnimator____Iterator);
     #else
     tolua_cclass(tolua_S,"Iterator","irr::core::list<irr::scene::ISceneNodeAnimator*>::Iterator","",NULL);
     #endif
     tolua_beginmodule(tolua_S,"Iterator");
      tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00);
      tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00_local);
      tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator_new00_local);
      tolua_function(tolua_S,".add",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__add00);
      tolua_function(tolua_S,".sub",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__sub00);
      tolua_function(tolua_S,".eq",tolua_IrrLua_irr_core_list_irr__scene__ISceneNodeAnimator___Iterator__eq00);
     tolua_endmodule(tolua_S);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_function(tolua_S,"RGB16",tolua_IrrLua_irr_video_RGB1600);
    tolua_function(tolua_S,"RGBA16",tolua_IrrLua_irr_video_RGBA1600);
    tolua_function(tolua_S,"X8R8G8B8toA1R5G5B5",tolua_IrrLua_irr_video_X8R8G8B8toA1R5G5B500);
    tolua_function(tolua_S,"getAlpha",tolua_IrrLua_irr_video_getAlpha00);
    tolua_function(tolua_S,"getRed",tolua_IrrLua_irr_video_getRed00);
    tolua_function(tolua_S,"getGreen",tolua_IrrLua_irr_video_getGreen00);
    tolua_function(tolua_S,"getBlue",tolua_IrrLua_irr_video_getBlue00);
    tolua_function(tolua_S,"getLuminance",tolua_IrrLua_irr_video_getLuminance00);
    tolua_function(tolua_S,"A1R5G5B5toA8R8G8B8",tolua_IrrLua_irr_video_A1R5G5B5toA8R8G8B800);
    tolua_function(tolua_S,"R5G6B5toA8R8G8B8",tolua_IrrLua_irr_video_R5G6B5toA8R8G8B800);
    tolua_function(tolua_S,"R5G6B5toA1R5G5B5",tolua_IrrLua_irr_video_R5G6B5toA1R5G5B500);
    tolua_function(tolua_S,"A1R5G5B5toR5G6B5",tolua_IrrLua_irr_video_A1R5G5B5toR5G6B500);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SColor","irr::video::SColor","",tolua_collect_irr__video__SColor);
    #else
    tolua_cclass(tolua_S,"SColor","irr::video::SColor","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SColor");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_SColor_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_SColor_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_SColor_new00_local);
     tolua_function(tolua_S,"getAlpha",tolua_IrrLua_irr_video_SColor_getAlpha00);
     tolua_function(tolua_S,"getRed",tolua_IrrLua_irr_video_SColor_getRed00);
     tolua_function(tolua_S,"getGreen",tolua_IrrLua_irr_video_SColor_getGreen00);
     tolua_function(tolua_S,"getBlue",tolua_IrrLua_irr_video_SColor_getBlue00);
     tolua_function(tolua_S,"setAlpha",tolua_IrrLua_irr_video_SColor_setAlpha00);
     tolua_function(tolua_S,"setRed",tolua_IrrLua_irr_video_SColor_setRed00);
     tolua_function(tolua_S,"setGreen",tolua_IrrLua_irr_video_SColor_setGreen00);
     tolua_function(tolua_S,"setBlue",tolua_IrrLua_irr_video_SColor_setBlue00);
     tolua_function(tolua_S,"toA1R5G5B5",tolua_IrrLua_irr_video_SColor_toA1R5G5B500);
     tolua_function(tolua_S,"toOpenGLColor",tolua_IrrLua_irr_video_SColor_toOpenGLColor00);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_video_SColor_set00);
     tolua_function(tolua_S,".eq",tolua_IrrLua_irr_video_SColor__eq00);
     tolua_function(tolua_S,"getInterpolated",tolua_IrrLua_irr_video_SColor_getInterpolated00);
     tolua_variable(tolua_S,"color",tolua_get_irr__video__SColor_color,tolua_set_irr__video__SColor_color);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SColorf","irr::video::SColorf","",tolua_collect_irr__video__SColorf);
    #else
    tolua_cclass(tolua_S,"SColorf","irr::video::SColorf","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SColorf");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_SColorf_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_SColorf_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_SColorf_new00_local);
     tolua_function(tolua_S,"toSColor",tolua_IrrLua_irr_video_SColorf_toSColor00);
     tolua_variable(tolua_S,"r",tolua_get_irr__video__SColorf_r,tolua_set_irr__video__SColorf_r);
     tolua_variable(tolua_S,"g",tolua_get_irr__video__SColorf_g,tolua_set_irr__video__SColorf_g);
     tolua_variable(tolua_S,"b",tolua_get_irr__video__SColorf_b,tolua_set_irr__video__SColorf_b);
     tolua_variable(tolua_S,"a",tolua_get_irr__video__SColorf_a,tolua_set_irr__video__SColorf_a);
     tolua_function(tolua_S,"set",tolua_IrrLua_irr_video_SColorf_set00);
     tolua_function(tolua_S,"getInterpolated",tolua_IrrLua_irr_video_SColorf_getInterpolated00);
     tolua_function(tolua_S,"setColorComponentValue",tolua_IrrLua_irr_video_SColorf_setColorComponentValue00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,118,105,100,101,111, 46, 95, 95, 83, 67,
    111,108,111,114, 32, 61, 32,105,114,114, 46,118,105,100,101,
    111, 46, 83, 67,111,108,111,114, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 83, 67,
    111,108,111,114, 40, 97, 44,114, 44,103, 44, 98, 41, 10,108,
    111, 99, 97,108, 32,114,101,116, 32, 61, 32,105,114,114, 46,
    118,105,100,101,111, 46, 95, 95, 83, 67,111,108,111,114, 58,
    110,101,119, 40, 97, 44,114, 44,103, 44, 98, 41, 10,116,111,
    108,117, 97, 46,116, 97,107,101,111,119,110,101,114,115,104,
    105,112, 40,114,101,116, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,105,114,114, 46,118,105,100,
    101,111, 46, 95, 95, 83, 67,111,108,111,114,102, 32, 61, 32,
    105,114,114, 46,118,105,100,101,111, 46, 83, 67,111,108,111,
    114,102, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,118,105,100,101,111, 46, 83, 67,111,108,111,114,102, 40,
    114, 44,103, 44, 98, 44, 97, 41, 10, 97, 32, 61, 32, 97, 32,
    111,114, 32, 49, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32,105,114,114, 46,118,105,100,101,111, 46, 95, 95, 83,
     67,111,108,111,114,102, 58,110,101,119, 40,114, 44,103, 44,
     98, 44, 97, 41, 10,116,111,108,117, 97, 46,116, 97,107,101,
    111,119,110,101,114,115,104,105,112, 40,114,101,116, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 13");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"ELT_POINT",irr::video::ELT_POINT);
    tolua_constant(tolua_S,"ELT_DIRECTIONAL",irr::video::ELT_DIRECTIONAL);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SLight","irr::video::SLight","",tolua_collect_irr__video__SLight);
    #else
    tolua_cclass(tolua_S,"SLight","irr::video::SLight","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SLight");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_SLight_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_SLight_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_SLight_new00_local);
     tolua_variable(tolua_S,"AmbientColor",tolua_get_irr__video__SLight_AmbientColor,tolua_set_irr__video__SLight_AmbientColor);
     tolua_variable(tolua_S,"DiffuseColor",tolua_get_irr__video__SLight_DiffuseColor,tolua_set_irr__video__SLight_DiffuseColor);
     tolua_variable(tolua_S,"SpecularColor",tolua_get_irr__video__SLight_SpecularColor,tolua_set_irr__video__SLight_SpecularColor);
     tolua_variable(tolua_S,"Position",tolua_get_irr__video__SLight_Position,tolua_set_irr__video__SLight_Position);
     tolua_variable(tolua_S,"Radius",tolua_get_irr__video__SLight_Radius,tolua_set_irr__video__SLight_Radius);
     tolua_variable(tolua_S,"CastShadows",tolua_get_irr__video__SLight_CastShadows,tolua_set_irr__video__SLight_CastShadows);
     tolua_variable(tolua_S,"Type",tolua_get_irr__video__SLight_Type,tolua_set_irr__video__SLight_Type);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,118,105,100,101,111, 46, 76,105,103,104,
    116, 84,121,112,101, 78, 97,109,101,115, 32, 61, 32,123, 34,
     80,111,105,110,116, 34, 44, 32, 34, 68,105,114,101, 99,116,
    105,111,110, 97,108, 34, 32,125,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 14");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"EMT_SOLID",irr::video::EMT_SOLID);
    tolua_constant(tolua_S,"EMT_SOLID_2_LAYER",irr::video::EMT_SOLID_2_LAYER);
    tolua_constant(tolua_S,"EMT_LIGHTMAP",irr::video::EMT_LIGHTMAP);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_ADD",irr::video::EMT_LIGHTMAP_ADD);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_M2",irr::video::EMT_LIGHTMAP_M2);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_M4",irr::video::EMT_LIGHTMAP_M4);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_LIGHTING",irr::video::EMT_LIGHTMAP_LIGHTING);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_LIGHTING_M2",irr::video::EMT_LIGHTMAP_LIGHTING_M2);
    tolua_constant(tolua_S,"EMT_LIGHTMAP_LIGHTING_M4",irr::video::EMT_LIGHTMAP_LIGHTING_M4);
    tolua_constant(tolua_S,"EMT_DETAIL_MAP",irr::video::EMT_DETAIL_MAP);
    tolua_constant(tolua_S,"EMT_SPHERE_MAP",irr::video::EMT_SPHERE_MAP);
    tolua_constant(tolua_S,"EMT_REFLECTION_2_LAYER",irr::video::EMT_REFLECTION_2_LAYER);
    tolua_constant(tolua_S,"EMT_TRANSPARENT_ADD_COLOR",irr::video::EMT_TRANSPARENT_ADD_COLOR);
    tolua_constant(tolua_S,"EMT_TRANSPARENT_ALPHA_CHANNEL",irr::video::EMT_TRANSPARENT_ALPHA_CHANNEL);
    tolua_constant(tolua_S,"EMT_TRANSPARENT_ALPHA_CHANNEL_REF",irr::video::EMT_TRANSPARENT_ALPHA_CHANNEL_REF);
    tolua_constant(tolua_S,"EMT_TRANSPARENT_VERTEX_ALPHA",irr::video::EMT_TRANSPARENT_VERTEX_ALPHA);
    tolua_constant(tolua_S,"EMT_TRANSPARENT_REFLECTION_2_LAYER",irr::video::EMT_TRANSPARENT_REFLECTION_2_LAYER);
    tolua_constant(tolua_S,"EMT_NORMAL_MAP_SOLID",irr::video::EMT_NORMAL_MAP_SOLID);
    tolua_constant(tolua_S,"EMT_NORMAL_MAP_TRANSPARENT_ADD_COLOR",irr::video::EMT_NORMAL_MAP_TRANSPARENT_ADD_COLOR);
    tolua_constant(tolua_S,"EMT_NORMAL_MAP_TRANSPARENT_VERTEX_ALPHA",irr::video::EMT_NORMAL_MAP_TRANSPARENT_VERTEX_ALPHA);
    tolua_constant(tolua_S,"EMT_PARALLAX_MAP_SOLID",irr::video::EMT_PARALLAX_MAP_SOLID);
    tolua_constant(tolua_S,"EMT_PARALLAX_MAP_TRANSPARENT_ADD_COLOR",irr::video::EMT_PARALLAX_MAP_TRANSPARENT_ADD_COLOR);
    tolua_constant(tolua_S,"EMT_PARALLAX_MAP_TRANSPARENT_VERTEX_ALPHA",irr::video::EMT_PARALLAX_MAP_TRANSPARENT_VERTEX_ALPHA);
    tolua_constant(tolua_S,"EMF_WIREFRAME",irr::video::EMF_WIREFRAME);
    tolua_constant(tolua_S,"EMF_POINTCLOUD",irr::video::EMF_POINTCLOUD);
    tolua_constant(tolua_S,"EMF_GOURAUD_SHADING",irr::video::EMF_GOURAUD_SHADING);
    tolua_constant(tolua_S,"EMF_LIGHTING",irr::video::EMF_LIGHTING);
    tolua_constant(tolua_S,"EMF_ZBUFFER",irr::video::EMF_ZBUFFER);
    tolua_constant(tolua_S,"EMF_ZWRITE_ENABLE",irr::video::EMF_ZWRITE_ENABLE);
    tolua_constant(tolua_S,"EMF_BACK_FACE_CULLING",irr::video::EMF_BACK_FACE_CULLING);
    tolua_constant(tolua_S,"EMF_BILINEAR_FILTER",irr::video::EMF_BILINEAR_FILTER);
    tolua_constant(tolua_S,"EMF_TRILINEAR_FILTER",irr::video::EMF_TRILINEAR_FILTER);
    tolua_constant(tolua_S,"EMF_ANISOTROPIC_FILTER",irr::video::EMF_ANISOTROPIC_FILTER);
    tolua_constant(tolua_S,"EMF_FOG_ENABLE",irr::video::EMF_FOG_ENABLE);
    tolua_constant(tolua_S,"EMF_NORMALIZE_NORMALS",irr::video::EMF_NORMALIZE_NORMALS);
    tolua_constant(tolua_S,"EMF_MATERIAL_FLAG_COUNT",irr::video::EMF_MATERIAL_FLAG_COUNT);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SMaterial","irr::video::SMaterial","",tolua_collect_irr__video__SMaterial);
    #else
    tolua_cclass(tolua_S,"SMaterial","irr::video::SMaterial","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SMaterial");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_SMaterial_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_SMaterial_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_SMaterial_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_SMaterial_delete00);
     tolua_variable(tolua_S,"MaterialType",tolua_get_irr__video__SMaterial_MaterialType,tolua_set_irr__video__SMaterial_MaterialType);
     tolua_variable(tolua_S,"AmbientColor",tolua_get_irr__video__SMaterial_AmbientColor,tolua_set_irr__video__SMaterial_AmbientColor);
     tolua_variable(tolua_S,"DiffuseColor",tolua_get_irr__video__SMaterial_DiffuseColor,tolua_set_irr__video__SMaterial_DiffuseColor);
     tolua_variable(tolua_S,"EmissiveColor",tolua_get_irr__video__SMaterial_EmissiveColor,tolua_set_irr__video__SMaterial_EmissiveColor);
     tolua_variable(tolua_S,"SpecularColor",tolua_get_irr__video__SMaterial_SpecularColor,tolua_set_irr__video__SMaterial_SpecularColor);
     tolua_variable(tolua_S,"Shininess",tolua_get_irr__video__SMaterial_Shininess,tolua_set_irr__video__SMaterial_Shininess);
     tolua_variable(tolua_S,"MaterialTypeParam",tolua_get_irr__video__SMaterial_MaterialTypeParam,tolua_set_irr__video__SMaterial_MaterialTypeParam);
     tolua_variable(tolua_S,"Texture1",tolua_get_irr__video__SMaterial_Texture1_ptr,tolua_set_irr__video__SMaterial_Texture1_ptr);
     tolua_variable(tolua_S,"Texture2",tolua_get_irr__video__SMaterial_Texture2_ptr,tolua_set_irr__video__SMaterial_Texture2_ptr);
     tolua_variable(tolua_S,"Texture3",tolua_get_irr__video__SMaterial_Texture3_ptr,tolua_set_irr__video__SMaterial_Texture3_ptr);
     tolua_variable(tolua_S,"Texture4",tolua_get_irr__video__SMaterial_Texture4_ptr,tolua_set_irr__video__SMaterial_Texture4_ptr);
     tolua_variable(tolua_S,"Wireframe",tolua_get_irr__video__SMaterial_Wireframe,tolua_set_irr__video__SMaterial_Wireframe);
     tolua_variable(tolua_S,"PointCloud",tolua_get_irr__video__SMaterial_PointCloud,tolua_set_irr__video__SMaterial_PointCloud);
     tolua_variable(tolua_S,"GouraudShading",tolua_get_irr__video__SMaterial_GouraudShading,tolua_set_irr__video__SMaterial_GouraudShading);
     tolua_variable(tolua_S,"Lighting",tolua_get_irr__video__SMaterial_Lighting,tolua_set_irr__video__SMaterial_Lighting);
     tolua_variable(tolua_S,"ZBuffer",tolua_get_irr__video__SMaterial_ZBuffer,tolua_set_irr__video__SMaterial_ZBuffer);
     tolua_variable(tolua_S,"ZWriteEnable",tolua_get_irr__video__SMaterial_ZWriteEnable,tolua_set_irr__video__SMaterial_ZWriteEnable);
     tolua_variable(tolua_S,"BackfaceCulling",tolua_get_irr__video__SMaterial_BackfaceCulling,tolua_set_irr__video__SMaterial_BackfaceCulling);
     tolua_variable(tolua_S,"BilinearFilter",tolua_get_irr__video__SMaterial_BilinearFilter,tolua_set_irr__video__SMaterial_BilinearFilter);
     tolua_variable(tolua_S,"TrilinearFilter",tolua_get_irr__video__SMaterial_TrilinearFilter,tolua_set_irr__video__SMaterial_TrilinearFilter);
     tolua_variable(tolua_S,"FogEnable",tolua_get_irr__video__SMaterial_FogEnable,tolua_set_irr__video__SMaterial_FogEnable);
     tolua_variable(tolua_S,"NormalizeNormals",tolua_get_irr__video__SMaterial_NormalizeNormals,tolua_set_irr__video__SMaterial_NormalizeNormals);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,118,105,100,101,111, 46, 77, 65, 84, 69,
     82, 73, 65, 76, 95, 77, 65, 88, 95, 84, 69, 88, 84, 85, 82,
     69, 83, 32, 61, 32, 52,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 15");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"core",0);
   tolua_beginmodule(tolua_S,"core");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"array_f32_","irr::core::array<f32>","",tolua_collect_irr__core__array_f32_);
    #else
    tolua_cclass(tolua_S,"array_f32_","irr::core::array<f32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"array_f32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_f32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_f32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_f32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_f32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_f32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_f32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_f32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_f32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_f32__new02_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_array_f32__delete00);
     tolua_function(tolua_S,"reallocate",tolua_IrrLua_irr_core_array_f32__reallocate00);
     tolua_function(tolua_S,"push_back",tolua_IrrLua_irr_core_array_f32__push_back00);
     tolua_function(tolua_S,"push_front",tolua_IrrLua_irr_core_array_f32__push_front00);
     tolua_function(tolua_S,"insert",tolua_IrrLua_irr_core_array_f32__insert00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_core_array_f32__clear00);
     tolua_function(tolua_S,"set_pointer",tolua_IrrLua_irr_core_array_f32__set_pointer00);
     tolua_function(tolua_S,"set_free_when_destroyed",tolua_IrrLua_irr_core_array_f32__set_free_when_destroyed00);
     tolua_function(tolua_S,"set_used",tolua_IrrLua_irr_core_array_f32__set_used00);
     tolua_function(tolua_S,".seti",tolua_IrrLua_irr_core_array_f32___seti00);
     tolua_function(tolua_S,".geti",tolua_IrrLua_irr_core_array_f32___geti00);
     tolua_function(tolua_S,"getLast",tolua_IrrLua_irr_core_array_f32__getLast00);
     tolua_function(tolua_S,"pointer",tolua_IrrLua_irr_core_array_f32__pointer00);
     tolua_function(tolua_S,"const_pointer",tolua_IrrLua_irr_core_array_f32__const_pointer00);
     tolua_function(tolua_S,"size",tolua_IrrLua_irr_core_array_f32__size00);
     tolua_function(tolua_S,"allocated_size",tolua_IrrLua_irr_core_array_f32__allocated_size00);
     tolua_function(tolua_S,"empty",tolua_IrrLua_irr_core_array_f32__empty00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_f32__erase00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_f32__erase01);
     tolua_function(tolua_S,"set_sorted",tolua_IrrLua_irr_core_array_f32__set_sorted00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"array_s32_","irr::core::array<s32>","",tolua_collect_irr__core__array_s32_);
    #else
    tolua_cclass(tolua_S,"array_s32_","irr::core::array<s32>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"array_s32_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_s32__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_s32__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_s32__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_s32__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_s32__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_s32__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_s32__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_s32__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_s32__new02_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_array_s32__delete00);
     tolua_function(tolua_S,"reallocate",tolua_IrrLua_irr_core_array_s32__reallocate00);
     tolua_function(tolua_S,"push_back",tolua_IrrLua_irr_core_array_s32__push_back00);
     tolua_function(tolua_S,"push_front",tolua_IrrLua_irr_core_array_s32__push_front00);
     tolua_function(tolua_S,"insert",tolua_IrrLua_irr_core_array_s32__insert00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_core_array_s32__clear00);
     tolua_function(tolua_S,"set_pointer",tolua_IrrLua_irr_core_array_s32__set_pointer00);
     tolua_function(tolua_S,"set_free_when_destroyed",tolua_IrrLua_irr_core_array_s32__set_free_when_destroyed00);
     tolua_function(tolua_S,"set_used",tolua_IrrLua_irr_core_array_s32__set_used00);
     tolua_function(tolua_S,".seti",tolua_IrrLua_irr_core_array_s32___seti00);
     tolua_function(tolua_S,".geti",tolua_IrrLua_irr_core_array_s32___geti00);
     tolua_function(tolua_S,"getLast",tolua_IrrLua_irr_core_array_s32__getLast00);
     tolua_function(tolua_S,"pointer",tolua_IrrLua_irr_core_array_s32__pointer00);
     tolua_function(tolua_S,"const_pointer",tolua_IrrLua_irr_core_array_s32__const_pointer00);
     tolua_function(tolua_S,"size",tolua_IrrLua_irr_core_array_s32__size00);
     tolua_function(tolua_S,"allocated_size",tolua_IrrLua_irr_core_array_s32__allocated_size00);
     tolua_function(tolua_S,"empty",tolua_IrrLua_irr_core_array_s32__empty00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_s32__erase00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_s32__erase01);
     tolua_function(tolua_S,"set_sorted",tolua_IrrLua_irr_core_array_s32__set_sorted00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"array_irr__core__vector3d_f32___","irr::core::array<irr::core::vector3d<f32> >","",tolua_collect_irr__core__array_irr__core__vector3d_f32___);
    #else
    tolua_cclass(tolua_S,"array_irr__core__vector3d_f32___","irr::core::array<irr::core::vector3d<f32> >","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"array_irr__core__vector3d_f32___");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____new02_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____delete00);
     tolua_function(tolua_S,"reallocate",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____reallocate00);
     tolua_function(tolua_S,"push_back",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_back00);
     tolua_function(tolua_S,"push_front",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____push_front00);
     tolua_function(tolua_S,"insert",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____insert00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____clear00);
     tolua_function(tolua_S,"set_pointer",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_pointer00);
     tolua_function(tolua_S,"set_free_when_destroyed",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_free_when_destroyed00);
     tolua_function(tolua_S,"set_used",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_used00);
     tolua_function(tolua_S,".seti",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____seti00);
     tolua_function(tolua_S,".geti",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32_____geti00);
     tolua_function(tolua_S,"getLast",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____getLast00);
     tolua_function(tolua_S,"pointer",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____pointer00);
     tolua_function(tolua_S,"const_pointer",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____const_pointer00);
     tolua_function(tolua_S,"size",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____size00);
     tolua_function(tolua_S,"allocated_size",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____allocated_size00);
     tolua_function(tolua_S,"empty",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____empty00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____erase01);
     tolua_function(tolua_S,"set_sorted",tolua_IrrLua_irr_core_array_irr__core__vector3d_f32____set_sorted00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"array_irr__video__PITexture_","irr::core::array<irr::video::PITexture>","",tolua_collect_irr__core__array_irr__video__PITexture_);
    #else
    tolua_cclass(tolua_S,"array_irr__video__PITexture_","irr::core::array<irr::video::PITexture>","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"array_irr__video__PITexture_");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__video__PITexture__new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__video__PITexture__new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__video__PITexture__new00_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__video__PITexture__new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__video__PITexture__new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__video__PITexture__new01_local);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_core_array_irr__video__PITexture__new02);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_core_array_irr__video__PITexture__new02_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_core_array_irr__video__PITexture__new02_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_core_array_irr__video__PITexture__delete00);
     tolua_function(tolua_S,"reallocate",tolua_IrrLua_irr_core_array_irr__video__PITexture__reallocate00);
     tolua_function(tolua_S,"push_back",tolua_IrrLua_irr_core_array_irr__video__PITexture__push_back00);
     tolua_function(tolua_S,"push_front",tolua_IrrLua_irr_core_array_irr__video__PITexture__push_front00);
     tolua_function(tolua_S,"insert",tolua_IrrLua_irr_core_array_irr__video__PITexture__insert00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_core_array_irr__video__PITexture__clear00);
     tolua_function(tolua_S,"set_pointer",tolua_IrrLua_irr_core_array_irr__video__PITexture__set_pointer00);
     tolua_function(tolua_S,"set_free_when_destroyed",tolua_IrrLua_irr_core_array_irr__video__PITexture__set_free_when_destroyed00);
     tolua_function(tolua_S,"set_used",tolua_IrrLua_irr_core_array_irr__video__PITexture__set_used00);
     tolua_function(tolua_S,".seti",tolua_IrrLua_irr_core_array_irr__video__PITexture___seti00);
     tolua_function(tolua_S,".geti",tolua_IrrLua_irr_core_array_irr__video__PITexture___geti00);
     tolua_function(tolua_S,"getLast",tolua_IrrLua_irr_core_array_irr__video__PITexture__getLast00);
     tolua_function(tolua_S,"pointer",tolua_IrrLua_irr_core_array_irr__video__PITexture__pointer00);
     tolua_function(tolua_S,"const_pointer",tolua_IrrLua_irr_core_array_irr__video__PITexture__const_pointer00);
     tolua_function(tolua_S,"size",tolua_IrrLua_irr_core_array_irr__video__PITexture__size00);
     tolua_function(tolua_S,"allocated_size",tolua_IrrLua_irr_core_array_irr__video__PITexture__allocated_size00);
     tolua_function(tolua_S,"empty",tolua_IrrLua_irr_core_array_irr__video__PITexture__empty00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_irr__video__PITexture__erase00);
     tolua_function(tolua_S,"erase",tolua_IrrLua_irr_core_array_irr__video__PITexture__erase01);
     tolua_function(tolua_S,"set_sorted",tolua_IrrLua_irr_core_array_irr__video__PITexture__set_sorted00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46, 99,
    111,114,101, 46, 97,114,114, 97,121, 40, 84, 41, 10,108,111,
     99, 97,108, 32,114,101,116, 10,105,102, 32,116,121,112,101,
     40, 84, 41, 32, 61, 61, 32, 34,116, 97, 98,108,101, 34, 32,
    116,104,101,110, 10,108,111, 99, 97,108, 32,112,114,111, 99,
    101,115,115, 32, 61, 32,102,117,110, 99,116,105,111,110, 40,
    116, 41, 32,114,101,116,117,114,110, 32,116, 32,101,110,100,
     10,105,102, 32,116,121,112,101, 40, 84, 91, 49, 93, 41, 32,
     61, 61, 32, 34,110,117,109, 98,101,114, 34, 32,116,104,101,
    110, 10,114,101,116, 32, 61, 32,105,114,114, 46, 99,111,114,
    101, 46, 97,114,114, 97,121, 95,102, 51, 50, 95, 58,110,101,
    119, 40, 41, 10,101,108,115,101,105,102, 32,116,111,108,117,
     97, 46,116,121,112,101, 40, 84, 91, 49, 93, 41, 32, 61, 61,
     32, 34,105,114,114, 58, 58, 99,111,114,101, 58, 58,118,101,
     99,116,111,114, 51,100, 60,102, 51, 50, 62, 34, 32,116,104,
    101,110, 10,114,101,116, 32, 61, 32,105,114,114, 46, 99,111,
    114,101, 46, 97,114,114, 97,121, 95,105,114,114, 95, 95, 99,
    111,114,101, 95, 95,118,101, 99,116,111,114, 51,100, 95,102,
     51, 50, 95, 95, 95, 58,110,101,119, 40, 41, 10,101,108,115,
    101,105,102, 32,116,111,108,117, 97, 46,116,121,112,101, 40,
     84, 91, 49, 93, 41, 32, 61, 61, 32, 34,105,114,114, 58, 58,
    118,105,100,101,111, 58, 58, 73, 84,101,120,116,117,114,101,
     34, 32,116,104,101,110, 10,114,101,116, 32, 61, 32,105,114,
    114, 46, 99,111,114,101, 46, 97,114,114, 97,121, 95,105,114,
    114, 95, 95,118,105,100,101,111, 95, 95, 80, 73, 84,101,120,
    116,117,114,101, 95, 58,110,101,119, 40, 41, 10,112,114,111,
     99,101,115,115, 32, 61, 32,102,117,110, 99,116,105,111,110,
     40,116, 41, 32,114,101,116,117,114,110, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95,112,105,116,101,120,116,117,
    114,101, 40,116, 41, 32,101,110,100, 10,101,108,115,101, 10,
    114,101,116,117,114,110, 32,110,105,108, 10,101,110,100, 10,
    102,111,114, 32,105, 32, 61, 32, 49, 44,116, 97, 98,108,101,
     46,103,101,116,110, 40, 84, 41, 32,100,111, 32,114,101,116,
     58,112,117,115,104, 95, 98, 97, 99,107, 40,112,114,111, 99,
    101,115,115, 40, 84, 91,105, 93, 41, 41, 32,101,110,100, 10,
    116,111,108,117, 97, 46,116, 97,107,101,111,119,110,101,114,
    115,104,105,112, 40,114,101,116, 41, 10,101,110,100, 10,114,
    101,116,117,114,110, 32,114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 16");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SViewFrustrum","irr::scene::SViewFrustrum","",tolua_collect_irr__scene__SViewFrustrum);
    #else
    tolua_cclass(tolua_S,"SViewFrustrum","irr::scene::SViewFrustrum","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SViewFrustrum");
     tolua_constant(tolua_S,"VF_FAR_PLANE",irr::scene::SViewFrustrum::VF_FAR_PLANE);
     tolua_constant(tolua_S,"VF_NEAR_PLANE",irr::scene::SViewFrustrum::VF_NEAR_PLANE);
     tolua_constant(tolua_S,"VF_LEFT_PLANE",irr::scene::SViewFrustrum::VF_LEFT_PLANE);
     tolua_constant(tolua_S,"VF_RIGHT_PLANE",irr::scene::SViewFrustrum::VF_RIGHT_PLANE);
     tolua_constant(tolua_S,"VF_BOTTOM_PLANE",irr::scene::SViewFrustrum::VF_BOTTOM_PLANE);
     tolua_constant(tolua_S,"VF_TOP_PLANE",irr::scene::SViewFrustrum::VF_TOP_PLANE);
     tolua_constant(tolua_S,"VF_PLANE_COUNT",irr::scene::SViewFrustrum::VF_PLANE_COUNT);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SViewFrustrum_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SViewFrustrum_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SViewFrustrum_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SViewFrustrum_delete00);
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SViewFrustrum_new01);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SViewFrustrum_new01_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SViewFrustrum_new01_local);
     tolua_variable(tolua_S,"cameraPosition",tolua_get_irr__scene__SViewFrustrum_cameraPosition,tolua_set_irr__scene__SViewFrustrum_cameraPosition);
     tolua_variable(tolua_S,"boundingBox",tolua_get_irr__scene__SViewFrustrum_boundingBox,tolua_set_irr__scene__SViewFrustrum_boundingBox);
     tolua_function(tolua_S,"transform",tolua_IrrLua_irr_scene_SViewFrustrum_transform00);
     tolua_function(tolua_S,"getFarLeftUp",tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftUp00);
     tolua_function(tolua_S,"getFarLeftDown",tolua_IrrLua_irr_scene_SViewFrustrum_getFarLeftDown00);
     tolua_function(tolua_S,"getFarRightUp",tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightUp00);
     tolua_function(tolua_S,"getFarRightDown",tolua_IrrLua_irr_scene_SViewFrustrum_getFarRightDown00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SViewFrustrum_getBoundingBox00);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SViewFrustrum_recalculateBoundingBox00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ITriangleSelector","irr::scene::ITriangleSelector","irr::IUnknown",tolua_collect_irr__scene__ITriangleSelector);
    #else
    tolua_cclass(tolua_S,"ITriangleSelector","irr::scene::ITriangleSelector","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ITriangleSelector");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ITriangleSelector_delete00);
     tolua_function(tolua_S,"getTriangleCount",tolua_IrrLua_irr_scene_ITriangleSelector_getTriangleCount00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles01);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_ITriangleSelector_getTriangles02);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ITriangleSelector_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ITriangleSelector_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ITriangleSelector_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaITriangleSelector","irr::scene::IrrLuaITriangleSelector","irr::scene::ITriangleSelector",tolua_collect_irr__scene__IrrLuaITriangleSelector);
    #else
    tolua_cclass(tolua_S,"IrrLuaITriangleSelector","irr::scene::IrrLuaITriangleSelector","irr::scene::ITriangleSelector",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaITriangleSelector");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_delete00);
     tolua_function(tolua_S,"getTriangleCount",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangleCount00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles01);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getTriangles02);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_getDebugName00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaITriangleSelector_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,116,114,105, 97,110,103,108,
    101,115,101,108,101, 99,116,111,114,112,114,111,120,121, 32,
     61, 32,123,125, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 99,114,101, 97,116,101,
     73, 84,114,105, 97,110,103,108,101, 83,101,108,101, 99,116,
    111,114, 40,100,101,102, 41, 10,108,111, 99, 97,108, 32,111,
     32, 61, 32,123,125, 10,102,111,114, 32,105, 44,118, 32,105,
    110, 32,112, 97,105,114,115, 40,100,101,102, 41, 32,100,111,
     32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,100, 10,111,
     46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97, 73,
     84,114,105, 97,110,103,108,101, 83,101,108,101, 99,116,111,
    114, 58,110,101,119, 40, 41, 10,116,111,108,117, 97, 46,105,
    110,104,101,114,105,116, 40,111, 44, 32,111, 46, 95, 95, 99,
     95, 99,108, 97,115,115, 41, 10,116,111,108,117, 97, 46,116,
     97,107,101,111,119,110,101,114,115,104,105,112, 40,111, 41,
     10,111, 46, 95, 95,105,110,100,101,120, 32, 61, 32,102,117,
    110, 99,116,105,111,110, 32, 40,116, 44, 32,107, 41, 32,114,
    101,116,117,114,110, 32,114, 97,119,103,101,116, 40,116, 44,
     34, 95, 95, 99, 95, 99,108, 97,115,115, 34, 41, 91,107, 93,
     32,101,110,100, 10,115,101,116,109,101,116, 97,116, 97, 98,
    108,101, 40,111, 44, 32,111, 41, 10,105,114,114, 46, 95, 95,
    105,116,114,105, 97,110,103,108,101,115,101,108,101, 99,116,
    111,114,112,114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,
    108, 97,115,115, 58, 71,101,116, 80,114,111,120,121, 40, 41,
     93, 32, 61, 32,111, 10,114,101,116,117,114,110, 32,111, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 17");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IMetaTriangleSelector","irr::scene::IMetaTriangleSelector","irr::scene::ITriangleSelector",NULL);
    tolua_beginmodule(tolua_S,"IMetaTriangleSelector");
     tolua_function(tolua_S,"addTriangleSelector",tolua_IrrLua_irr_scene_IMetaTriangleSelector_addTriangleSelector00);
     tolua_function(tolua_S,"removeTriangleSelector",tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeTriangleSelector00);
     tolua_function(tolua_S,"removeAllTriangleSelectors",tolua_IrrLua_irr_scene_IMetaTriangleSelector_removeAllTriangleSelectors00);
     tolua_function(tolua_S,"getTriangleCount",tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangleCount00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles00);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles01);
     tolua_function(tolua_S,"getTriangles",tolua_IrrLua_irr_scene_IMetaTriangleSelector_getTriangles02);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IMetaTriangleSelector_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IMetaTriangleSelector_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IMetaTriangleSelector_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    tolua_cclass(tolua_S,"ICursorControl","irr::gui::ICursorControl","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"ICursorControl");
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_ICursorControl_setVisible00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_ICursorControl_isVisible00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_gui_ICursorControl_setPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_gui_ICursorControl_setPosition01);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_gui_ICursorControl_setPosition02);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_gui_ICursorControl_setPosition03);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_gui_ICursorControl_getPosition00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_ICursorControl_getRelativePosition00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IVideoModeList","irr::video::IVideoModeList","irr::IUnknown",tolua_collect_irr__video__IVideoModeList);
    #else
    tolua_cclass(tolua_S,"IVideoModeList","irr::video::IVideoModeList","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IVideoModeList");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IVideoModeList_delete00);
     tolua_function(tolua_S,"getVideoModeCount",tolua_IrrLua_irr_video_IVideoModeList_getVideoModeCount00);
     tolua_function(tolua_S,"getVideoModeResolution",tolua_IrrLua_irr_video_IVideoModeList_getVideoModeResolution00);
     tolua_function(tolua_S,"getVideoModeDepth",tolua_IrrLua_irr_video_IVideoModeList_getVideoModeDepth00);
     tolua_function(tolua_S,"getDesktopResolution",tolua_IrrLua_irr_video_IVideoModeList_getDesktopResolution00);
     tolua_function(tolua_S,"getDesktopDepth",tolua_IrrLua_irr_video_IVideoModeList_getDesktopDepth00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IVideoModeList_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IVideoModeList_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_IVideoModeList_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IReadFile","irr::io::IReadFile","irr::IUnknown",tolua_collect_irr__io__IReadFile);
    #else
    tolua_cclass(tolua_S,"IReadFile","irr::io::IReadFile","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IReadFile");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IReadFile_delete00);
     tolua_function(tolua_S,"read",tolua_IrrLua_irr_io_IReadFile_read00);
     tolua_function(tolua_S,"seek",tolua_IrrLua_irr_io_IReadFile_seek00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_io_IReadFile_getSize00);
     tolua_function(tolua_S,"getPos",tolua_IrrLua_irr_io_IReadFile_getPos00);
     tolua_function(tolua_S,"getFileName",tolua_IrrLua_irr_io_IReadFile_getFileName00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IReadFile_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IReadFile_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IReadFile_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IWriteFile","irr::io::IWriteFile","irr::IUnknown",tolua_collect_irr__io__IWriteFile);
    #else
    tolua_cclass(tolua_S,"IWriteFile","irr::io::IWriteFile","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IWriteFile");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IWriteFile_delete00);
     tolua_function(tolua_S,"write",tolua_IrrLua_irr_io_IWriteFile_write00);
     tolua_function(tolua_S,"seek",tolua_IrrLua_irr_io_IWriteFile_seek00);
     tolua_function(tolua_S,"getPos",tolua_IrrLua_irr_io_IWriteFile_getPos00);
     tolua_function(tolua_S,"getFileName",tolua_IrrLua_irr_io_IWriteFile_getFileName00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IWriteFile_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IWriteFile_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IWriteFile_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IFileList","irr::io::IFileList","irr::IUnknown",tolua_collect_irr__io__IFileList);
    #else
    tolua_cclass(tolua_S,"IFileList","irr::io::IFileList","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IFileList");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IFileList_delete00);
     tolua_function(tolua_S,"getFileCount",tolua_IrrLua_irr_io_IFileList_getFileCount00);
     tolua_function(tolua_S,"getFileName",tolua_IrrLua_irr_io_IFileList_getFileName00);
     tolua_function(tolua_S,"getFullFileName",tolua_IrrLua_irr_io_IFileList_getFullFileName00);
     tolua_function(tolua_S,"isDirectory",tolua_IrrLua_irr_io_IFileList_isDirectory00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IFileList_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IFileList_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IFileList_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IXMLReader","irr::io::IXMLReader","irr::Unknown",tolua_collect_irr__io__IXMLReader);
    #else
    tolua_cclass(tolua_S,"IXMLReader","irr::io::IXMLReader","irr::Unknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IXMLReader");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IXMLReader_delete00);
     tolua_function(tolua_S,"read",tolua_IrrLua_irr_io_IXMLReader_read00);
     tolua_function(tolua_S,"getNodeType",tolua_IrrLua_irr_io_IXMLReader_getNodeType00);
     tolua_function(tolua_S,"getAttributeCount",tolua_IrrLua_irr_io_IXMLReader_getAttributeCount00);
     tolua_function(tolua_S,"getAttributeName",tolua_IrrLua_irr_io_IXMLReader_getAttributeName00);
     tolua_function(tolua_S,"getAttributeValue",tolua_IrrLua_irr_io_IXMLReader_getAttributeValue00);
     tolua_function(tolua_S,"getAttributeValueSafe",tolua_IrrLua_irr_io_IXMLReader_getAttributeValueSafe00);
     tolua_function(tolua_S,"getAttributeValueAsInt",tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsInt00);
     tolua_function(tolua_S,"getAttributeValueAsFloat",tolua_IrrLua_irr_io_IXMLReader_getAttributeValueAsFloat00);
     tolua_function(tolua_S,"getNodeName",tolua_IrrLua_irr_io_IXMLReader_getNodeName00);
     tolua_function(tolua_S,"getNodeData",tolua_IrrLua_irr_io_IXMLReader_getNodeData00);
     tolua_function(tolua_S,"isEmptyElement",tolua_IrrLua_irr_io_IXMLReader_isEmptyElement00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IXMLReader_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IXMLReader_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IXMLReader_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IXMLWriter","irr::io::IXMLWriter","irr::IUnknown",tolua_collect_irr__io__IXMLWriter);
    #else
    tolua_cclass(tolua_S,"IXMLWriter","irr::io::IXMLWriter","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IXMLWriter");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IXMLWriter_delete00);
     tolua_function(tolua_S,"writeXMLHeader",tolua_IrrLua_irr_io_IXMLWriter_writeXMLHeader00);
     tolua_function(tolua_S,"writeElement",tolua_IrrLua_irr_io_IXMLWriter_writeElement00);
     tolua_function(tolua_S,"writeComment",tolua_IrrLua_irr_io_IXMLWriter_writeComment00);
     tolua_function(tolua_S,"writeClosingTag",tolua_IrrLua_irr_io_IXMLWriter_writeClosingTag00);
     tolua_function(tolua_S,"writeText",tolua_IrrLua_irr_io_IXMLWriter_writeText00);
     tolua_function(tolua_S,"writeLineBreak",tolua_IrrLua_irr_io_IXMLWriter_writeLineBreak00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IXMLWriter_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IXMLWriter_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IXMLWriter_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IFileSystem","irr::io::IFileSystem","irr::IUnknown",tolua_collect_irr__io__IFileSystem);
    #else
    tolua_cclass(tolua_S,"IFileSystem","irr::io::IFileSystem","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IFileSystem");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_io_IFileSystem_delete00);
     tolua_function(tolua_S,"createAndOpenFile",tolua_IrrLua_irr_io_IFileSystem_createAndOpenFile00);
     tolua_function(tolua_S,"createAndWriteFile",tolua_IrrLua_irr_io_IFileSystem_createAndWriteFile00);
     tolua_function(tolua_S,"addZipFileArchive",tolua_IrrLua_irr_io_IFileSystem_addZipFileArchive00);
     tolua_function(tolua_S,"addPakFileArchive",tolua_IrrLua_irr_io_IFileSystem_addPakFileArchive00);
     tolua_function(tolua_S,"getWorkingDirectory",tolua_IrrLua_irr_io_IFileSystem_getWorkingDirectory00);
     tolua_function(tolua_S,"changeWorkingDirectoryTo",tolua_IrrLua_irr_io_IFileSystem_changeWorkingDirectoryTo00);
     tolua_function(tolua_S,"createFileList",tolua_IrrLua_irr_io_IFileSystem_createFileList00);
     tolua_function(tolua_S,"existFile",tolua_IrrLua_irr_io_IFileSystem_existFile00);
     tolua_function(tolua_S,"createXMLReader",tolua_IrrLua_irr_io_IFileSystem_createXMLReader00);
     tolua_function(tolua_S,"createXMLReader",tolua_IrrLua_irr_io_IFileSystem_createXMLReader01);
     tolua_function(tolua_S,"createXMLWriter",tolua_IrrLua_irr_io_IFileSystem_createXMLWriter00);
     tolua_function(tolua_S,"createXMLWriter",tolua_IrrLua_irr_io_IFileSystem_createXMLWriter01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_io_IFileSystem_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_io_IFileSystem_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_io_IFileSystem_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,101, 65,
    110,100, 79,112,101,110, 70,105,108,101, 32, 61, 32,105,114,
    114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,
    109, 46, 99,114,101, 97,116,101, 65,110,100, 79,112,101,110,
     70,105,108,101, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,
    101,109, 58, 99,114,101, 97,116,101, 65,110,100, 79,112,101,
    110, 70,105,108,101, 40,102,105,108,101,110, 97,109,101, 41,
     10,102,105,108,101,110, 97,109,101, 32, 61, 32,102,105,108,
    101,110, 97,109,101, 32,111,114, 32, 34, 34, 10,108,111, 99,
     97,108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,102,
    105,108,101,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95, 99,114,101, 97,116,101, 65,110,
    100, 79,112,101,110, 70,105,108,101, 40,115,101,108,102, 44,
     32,110, 97,109,101, 41, 10,105,114,114, 46, 99, 97,115,116,
     46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,
    110, 97,109,101, 41, 10,114,101,116,117,114,110, 32,114,101,
    116, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,
    101, 97,116,101, 65,110,100, 87,114,105,116,101, 70,105,108,
    101, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 70,105,108,
    101, 83,121,115,116,101,109, 46, 99,114,101, 97,116,101, 65,
    110,100, 87,114,105,116,101, 70,105,108,101, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 70,
    105,108,101, 83,121,115,116,101,109, 58, 99,114,101, 97,116,
    101, 65,110,100, 87,114,105,116,101, 70,105,108,101, 40,102,
    105,108,101,110, 97,109,101, 44, 32, 97,112,112,101,110,100,
     41, 10,102,105,108,101,110, 97,109,101, 32, 61, 32,102,105,
    108,101,110, 97,109,101, 32,111,114, 32, 34, 34, 10,108,111,
     99, 97,108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
    102,105,108,101,110, 97,109,101, 41, 10,108,111, 99, 97,108,
     32,114,101,116, 32, 61, 32, 95, 99,114,101, 97,116,101, 65,
    110,100, 87,114,105,116,101, 70,105,108,101, 40,115,101,108,
    102, 44, 32,110, 97,109,101, 44, 32, 97,112,112,101,110,100,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41,
     10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95, 97,100,100, 90,105,112, 70,
    105,108,101, 65,114, 99,104,105,118,101, 32, 61, 32,105,114,
    114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,
    109, 46, 97,100,100, 90,105,112, 70,105,108,101, 65,114, 99,
    104,105,118,101, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,
    101,109, 58, 97,100,100, 90,105,112, 70,105,108,101, 65,114,
     99,104,105,118,101, 40,102,105,108,101,110, 97,109,101, 44,
     32,105,103,110,111,114,101, 67, 97,115,101, 44, 32,105,103,
    110,111,114,101, 80, 97,116,104,115, 41, 10,102,105,108,101,
    110, 97,109,101, 32, 61, 32,102,105,108,101,110, 97,109,101,
     32,111,114, 32, 34, 34, 10,105,103,110,111,114,101, 67, 97,
    115,101, 32, 61, 32,105,103,110,111,114,101, 67, 97,115,101,
     32, 61, 61, 32,110,105,108, 10,105,103,110,111,114,101, 80,
     97,116,104,115, 32, 61, 32,105,103,110,111,114,101, 80, 97,
    116,104,115, 32, 61, 61, 32,110,105,108, 10,108,111, 99, 97,
    108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,102,105,
    108,101,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,114,
    101,116, 32, 61, 32, 95, 97,100,100, 90,105,112, 70,105,108,
    101, 65,114, 99,104,105,118,101, 40,115,101,108,102, 44, 32,
    110, 97,109,101, 44, 32,105,103,110,111,114,101, 67, 97,115,
    101, 44, 32,105,103,110,111,114,101, 80, 97,116,104,115, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95, 97,100,100, 80, 97,107, 70,105,
    108,101, 65,114, 99,104,105,118,101, 32, 61, 32,105,114,114,
     46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,109,
     46, 97,100,100, 80, 97,107, 70,105,108,101, 65,114, 99,104,
    105,118,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,
    109, 58, 97,100,100, 80, 97,107, 70,105,108,101, 65,114, 99,
    104,105,118,101, 40,102,105,108,101,110, 97,109,101, 44, 32,
    105,103,110,111,114,101, 67, 97,115,101, 44, 32,105,103,110,
    111,114,101, 80, 97,116,104,115, 41, 10,102,105,108,101,110,
     97,109,101, 32, 61, 32,102,105,108,101,110, 97,109,101, 32,
    111,114, 32, 34, 34, 10,105,103,110,111,114,101, 67, 97,115,
    101, 32, 61, 32,105,103,110,111,114,101, 67, 97,115,101, 32,
     61, 61, 32,110,105,108, 10,105,103,110,111,114,101, 80, 97,
    116,104,115, 32, 61, 32,105,103,110,111,114,101, 80, 97,116,
    104,115, 32, 61, 61, 32,110,105,108, 10,108,111, 99, 97,108,
     32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,102,105,108,
    101,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,
    116, 32, 61, 32, 95, 97,100,100, 80, 97,107, 70,105,108,101,
     65,114, 99,104,105,118,101, 40,115,101,108,102, 44, 32,110,
     97,109,101, 44, 32,105,103,110,111,114,101, 67, 97,115,101,
     44, 32,105,103,110,111,114,101, 80, 97,116,104,115, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,
    101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,108,
    111, 99, 97,108, 32, 95,103,101,116, 87,111,114,107,105,110,
    103, 68,105,114,101, 99,116,111,114,121, 32, 61, 32,105,114,
    114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,
    109, 46,103,101,116, 87,111,114,107,105,110,103, 68,105,114,
    101, 99,116,111,114,121, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,105,111, 46, 73, 70,105,108,101, 83,121,
    115,116,101,109, 58,103,101,116, 87,111,114,107,105,110,103,
     68,105,114,101, 99,116,111,114,121, 40, 41, 10,114,101,116,
    117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56,
     95,112,116,114, 95,116,111, 95,115,116,100, 95,115,116,114,
    105,110,103, 40, 95,103,101,116, 87,111,114,107,105,110,103,
     68,105,114,101, 99,116,111,114,121, 40,115,101,108,102, 41,
     41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,104,
     97,110,103,101, 87,111,114,107,105,110,103, 68,105,114,101,
     99,116,111,114,121, 84,111, 32, 61, 32,105,114,114, 46,105,
    111, 46, 73, 70,105,108,101, 83,121,115,116,101,109, 46, 99,
    104, 97,110,103,101, 87,111,114,107,105,110,103, 68,105,114,
    101, 99,116,111,114,121, 84,111, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,105,111, 46, 73, 70,105,108,101,
     83,121,115,116,101,109, 58, 99,104, 97,110,103,101, 87,111,
    114,107,105,110,103, 68,105,114,101, 99,116,111,114,121, 84,
    111, 40,110,101,119, 68,105,114,101, 99,116,111,114,121, 41,
     10,110,101,119, 68,105,114,101, 99,116,111,114,121, 32, 61,
     32,110,101,119, 68,105,114,101, 99,116,111,114,121, 32,111,
    114, 32, 34, 34, 10,108,111, 99, 97,108, 32,110, 97,109,101,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
     99, 56, 95,112,116,114, 40,110,101,119, 68,105,114,101, 99,
    116,111,114,121, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95, 99,104, 97,110,103,101, 87,111,114,107,105,
    110,103, 68,105,114,101, 99,116,111,114,121, 84,111, 40,115,
    101,108,102, 44, 32,110, 97,109,101, 41, 10,105,114,114, 46,
     99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,110, 97,109,101, 41, 10,114,101,116,117,114,
    110, 32,114,101,116, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95,101,120,105,115,116, 70,105,108,101, 32, 61, 32,105,
    114,114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,
    101,109, 46,101,120,105,115,116, 70,105,108,101, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73,
     70,105,108,101, 83,121,115,116,101,109, 58,101,120,105,115,
    116, 70,105,108,101, 40,102,105,108,101,110, 97,109,101, 41,
     10,102,105,108,101,110, 97,109,101, 32, 61, 32,102,105,108,
    101,110, 97,109,101, 32,111,114, 32, 34, 34, 10,108,111, 99,
     97,108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,102,
    105,108,101,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95,101,120,105,115,116, 70,105,108,
    101, 40,115,101,108,102, 44, 32,110, 97,109,101, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95, 99,114,101, 97,116,101, 88, 77, 76, 82,
    101, 97,100,101,114, 32, 61, 32,105,114,114, 46,105,111, 46,
     73, 70,105,108,101, 83,121,115,116,101,109, 46, 99,114,101,
     97,116,101, 88, 77, 76, 82,101, 97,100,101,114, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73,
     70,105,108,101, 83,121,115,116,101,109, 58, 99,114,101, 97,
    116,101, 88, 77, 76, 82,101, 97,100,101,114, 40, 97,114,103,
     49, 41, 10,105,102, 32,116,111,108,117, 97, 46,116,121,112,
    101, 40, 97,114,103, 49, 41, 32, 61, 61, 32, 34,115,116,114,
    105,110,103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108,
     32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,114,103,
     49, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95, 99,114,101, 97,116,101, 88, 77, 76, 82,101, 97,100,101,
    114, 40,115,101,108,102, 44, 32,110, 97,109,101, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,108,115,101, 10,114,
    101,116,117,114,110, 32, 95, 99,114,101, 97,116,101, 88, 77,
     76, 82,101, 97,100,101,114, 40,115,101,108,102, 44, 32, 97,
    114,103, 49, 41, 10,101,110,100, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95, 99,114,101, 97,116,101, 88, 77, 76, 87,
    114,105,116,101,114, 32, 61, 32,105,114,114, 46,105,111, 46,
     73, 70,105,108,101, 83,121,115,116,101,109, 46, 99,114,101,
     97,116,101, 88, 77, 76, 87,114,105,116,101,114, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73,
     70,105,108,101, 83,121,115,116,101,109, 58, 99,114,101, 97,
    116,101, 88, 77, 76, 87,114,105,116,101,114, 40, 97,114,103,
     49, 41, 10,105,102, 32,116,111,108,117, 97, 46,116,121,112,
    101, 40, 97,114,103, 49, 41, 32, 61, 61, 32, 34,115,116,114,
    105,110,103, 34, 32,116,104,101,110, 10,108,111, 99, 97,108,
     32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,114,103,
     49, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95, 99,114,101, 97,116,101, 88, 77, 76, 87,114,105,116,101,
    114, 40,115,101,108,102, 44, 32,110, 97,109,101, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
     99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,108,115,101, 10,114,
    101,116,117,114,110, 32, 95, 99,114,101, 97,116,101, 88, 77,
     76, 87,114,105,116,101,114, 40,115,101,108,102, 44, 32, 97,
    114,103, 49, 41, 10,101,110,100, 10,101,110,100, 10,105,114,
    114, 46,105,111, 46, 73, 70,105,108,101, 83,121,115,116,101,
    109, 46,103,101,116, 68,101, 98,117,103, 78, 97,109,101, 32,
     61, 32,105,114,114, 46, 73, 85,110,107,110,111,119,110, 46,
    103,101,116, 68,101, 98,117,103, 78, 97,109,101,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 18");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_constant(tolua_S,"ELL_INFORMATION",irr::ELL_INFORMATION);
   tolua_constant(tolua_S,"ELL_WARNING",irr::ELL_WARNING);
   tolua_constant(tolua_S,"ELL_ERROR",irr::ELL_ERROR);
   tolua_constant(tolua_S,"ELL_NONE",irr::ELL_NONE);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ILogger","irr::ILogger","irr::IUnknown",tolua_collect_irr__ILogger);
   #else
   tolua_cclass(tolua_S,"ILogger","irr::ILogger","irr::IUnknown",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ILogger");
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_ILogger_delete00);
    tolua_function(tolua_S,"getLogLevel",tolua_IrrLua_irr_ILogger_getLogLevel00);
    tolua_function(tolua_S,"setLogLevel",tolua_IrrLua_irr_ILogger_setLogLevel00);
    tolua_function(tolua_S,"log",tolua_IrrLua_irr_ILogger_log00);
    tolua_function(tolua_S,"grab",tolua_IrrLua_irr_ILogger_grab00);
    tolua_function(tolua_S,"drop",tolua_IrrLua_irr_ILogger_drop00);
    tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_ILogger_getDebugName00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,108,111,103, 32, 61, 32,105,
    114,114, 46, 73, 76,111,103,103,101,114, 46,108,111,103, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46, 73, 76,
    111,103,103,101,114, 58,108,111,103, 40,116,101,120,116, 44,
     32,108,111,103,108,101,118,101,108, 41, 10,108,111,103,108,
    101,118,101,108, 32, 61, 32,108,111,103,108,101,118,101,108,
     32,111,114, 32,105,114,114, 46, 69, 76, 76, 95, 73, 78, 70,
     79, 82, 77, 65, 84, 73, 79, 78, 10,108,111, 99, 97,108, 32,
    116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,
    116,111, 95, 99, 56, 95,112,116,114, 40,116,101,120,116, 41,
     10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,108,
    111,103, 40,115,101,108,102, 44, 32,116,120,116, 44, 32,108,
    111,103,108,101,118,101,108, 41, 10,105,114,114, 46, 99, 97,
    115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,
    114, 40,116,120,116, 41, 10,114,101,116,117,114,110, 32,114,
    101,116, 10,101,110,100, 10,105,114,114, 46, 73, 76,111,103,
    103,101,114, 46,103,101,116, 68,101, 98,117,103, 78, 97,109,
    101, 32, 61, 32,105,114,114, 46, 73, 85,110,107,110,111,119,
    110, 46,103,101,116, 68,101, 98,117,103, 78, 97,109,101,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 19");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ITimer","irr::ITimer","irr::IUnknown",tolua_collect_irr__ITimer);
   #else
   tolua_cclass(tolua_S,"ITimer","irr::ITimer","irr::IUnknown",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ITimer");
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_ITimer_delete00);
    tolua_function(tolua_S,"getRealTime",tolua_IrrLua_irr_ITimer_getRealTime00);
    tolua_function(tolua_S,"getTime",tolua_IrrLua_irr_ITimer_getTime00);
    tolua_function(tolua_S,"setTime",tolua_IrrLua_irr_ITimer_setTime00);
    tolua_function(tolua_S,"stop",tolua_IrrLua_irr_ITimer_stop00);
    tolua_function(tolua_S,"start",tolua_IrrLua_irr_ITimer_start00);
    tolua_function(tolua_S,"setSpeed",tolua_IrrLua_irr_ITimer_setSpeed00);
    tolua_function(tolua_S,"getSpeed",tolua_IrrLua_irr_ITimer_getSpeed00);
    tolua_function(tolua_S,"isStopped",tolua_IrrLua_irr_ITimer_isStopped00);
    tolua_function(tolua_S,"tick",tolua_IrrLua_irr_ITimer_tick00);
    tolua_function(tolua_S,"grab",tolua_IrrLua_irr_ITimer_grab00);
    tolua_function(tolua_S,"drop",tolua_IrrLua_irr_ITimer_drop00);
    tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_ITimer_getDebugName00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"ECF_A1R5G5B5",irr::video::ECF_A1R5G5B5);
    tolua_constant(tolua_S,"ECF_R5G6B5",irr::video::ECF_R5G6B5);
    tolua_constant(tolua_S,"ECF_R8G8B8",irr::video::ECF_R8G8B8);
    tolua_constant(tolua_S,"ECF_A8R8G8B8",irr::video::ECF_A8R8G8B8);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IImage","irr::video::IImage","irr::IUnknown",tolua_collect_irr__video__IImage);
    #else
    tolua_cclass(tolua_S,"IImage","irr::video::IImage","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IImage");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IImage_delete00);
     tolua_function(tolua_S,"lock",tolua_IrrLua_irr_video_IImage_lock00);
     tolua_function(tolua_S,"unlock",tolua_IrrLua_irr_video_IImage_unlock00);
     tolua_function(tolua_S,"getDimension",tolua_IrrLua_irr_video_IImage_getDimension00);
     tolua_function(tolua_S,"getBitsPerPixel",tolua_IrrLua_irr_video_IImage_getBitsPerPixel00);
     tolua_function(tolua_S,"getBytesPerPixel",tolua_IrrLua_irr_video_IImage_getBytesPerPixel00);
     tolua_function(tolua_S,"getImageDataSizeInBytes",tolua_IrrLua_irr_video_IImage_getImageDataSizeInBytes00);
     tolua_function(tolua_S,"getImageDataSizeInPixels",tolua_IrrLua_irr_video_IImage_getImageDataSizeInPixels00);
     tolua_function(tolua_S,"getPixel",tolua_IrrLua_irr_video_IImage_getPixel00);
     tolua_function(tolua_S,"getColorFormat",tolua_IrrLua_irr_video_IImage_getColorFormat00);
     tolua_function(tolua_S,"getRedMask",tolua_IrrLua_irr_video_IImage_getRedMask00);
     tolua_function(tolua_S,"getGreenMask",tolua_IrrLua_irr_video_IImage_getGreenMask00);
     tolua_function(tolua_S,"getBlueMask",tolua_IrrLua_irr_video_IImage_getBlueMask00);
     tolua_function(tolua_S,"getAlphaMask",tolua_IrrLua_irr_video_IImage_getAlphaMask00);
     tolua_function(tolua_S,"getPitch",tolua_IrrLua_irr_video_IImage_getPitch00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IImage_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IImage_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_IImage_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IImageLoader","irr::video::IImageLoader","irr::IUnknown",tolua_collect_irr__video__IImageLoader);
    #else
    tolua_cclass(tolua_S,"IImageLoader","irr::video::IImageLoader","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IImageLoader");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IImageLoader_delete00);
     tolua_function(tolua_S,"isALoadableFileExtension",tolua_IrrLua_irr_video_IImageLoader_isALoadableFileExtension00);
     tolua_function(tolua_S,"isALoadableFileFormat",tolua_IrrLua_irr_video_IImageLoader_isALoadableFileFormat00);
     tolua_function(tolua_S,"loadImage",tolua_IrrLua_irr_video_IImageLoader_loadImage00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IImageLoader_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IImageLoader_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_IImageLoader_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 95,105,115, 65, 76,111, 97,
    100, 97, 98,108,101, 70,105,108,101, 69,120,116,101,110,115,
    105,111,110, 32, 61, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 73,109, 97,103,101, 76,111, 97,100,101,114, 46,105,
    115, 65, 76,111, 97,100, 97, 98,108,101, 70,105,108,101, 69,
    120,116,101,110,115,105,111,110, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 73, 73,
    109, 97,103,101, 76,111, 97,100,101,114, 58,105,115, 65, 76,
    111, 97,100, 97, 98,108,101, 70,105,108,101, 69,120,116,101,
    110,115,105,111,110, 40,102,105,108,101, 78, 97,109,101, 41,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
    102,105,108,101, 78, 97,109,101, 41, 10,108,111, 99, 97,108,
     32,114,101,116, 32, 61, 32, 95,105,115, 65, 76,111, 97,100,
     97, 98,108,101, 70,105,108,101, 69,120,116,101,110,115,105,
    111,110, 40,115,101,108,102, 44, 32,110, 41, 10,105,114,114,
     46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56,
     95,112,116,114, 40,110, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 20");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IImageWriter","irr::video::IImageWriter","irr::IUnknown",tolua_collect_irr__video__IImageWriter);
    #else
    tolua_cclass(tolua_S,"IImageWriter","irr::video::IImageWriter","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IImageWriter");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IImageWriter_delete00);
     tolua_function(tolua_S,"isAWriteableFileExtension",tolua_IrrLua_irr_video_IImageWriter_isAWriteableFileExtension00);
     tolua_function(tolua_S,"writeImage",tolua_IrrLua_irr_video_IImageWriter_writeImage00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 95,105,115, 65, 87,114,105,
    116,101, 97, 98,108,101, 70,105,108,101, 69,120,116,101,110,
    115,105,111,110, 32, 61, 32,105,114,114, 46,118,105,100,101,
    111, 46, 73, 73,109, 97,103,101, 87,114,105,116,101,114, 46,
    105,115, 65, 87,114,105,116,101, 97, 98,108,101, 70,105,108,
    101, 69,120,116,101,110,115,105,111,110, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,118,105,100,101,111, 46,
     73, 73,109, 97,103,101, 87,114,105,116,101,114, 58,105,115,
     65, 87,114,105,116,101, 97, 98,108,101, 70,105,108,101, 69,
    120,116,101,110,115,105,111,110, 40,102,105,108,101, 78, 97,
    109,101, 41, 10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,
    116,114, 40,102,105,108,101, 78, 97,109,101, 41, 10,108,111,
     99, 97,108, 32,114,101,116, 32, 61, 32, 95,105,115, 65, 87,
    114,105,116,101, 97, 98,108,101, 70,105,108,101, 69,120,116,
    101,110,115,105,111,110, 40,115,101,108,102, 44, 32,110, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,116,
    117,114,110, 32,114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 21");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMeshBuffer","irr::scene::IMeshBuffer","irr::IUnknown",tolua_collect_irr__scene__IMeshBuffer);
    #else
    tolua_cclass(tolua_S,"IMeshBuffer","irr::scene::IMeshBuffer","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMeshBuffer");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IMeshBuffer_delete00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IMeshBuffer_getMaterial01);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_IMeshBuffer_getVertexType00);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_IMeshBuffer_getVertices00);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_IMeshBuffer_getVertices01);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_IMeshBuffer_getVertexCount00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_IMeshBuffer_getIndices00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_IMeshBuffer_getIndices01);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_IMeshBuffer_getIndexCount00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IMeshBuffer_getBoundingBox01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IMeshBuffer_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IMeshBuffer_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IMeshBuffer_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SMeshBuffer","irr::scene::SMeshBuffer","irr::scene::IMeshBuffer",tolua_collect_irr__scene__SMeshBuffer);
    #else
    tolua_cclass(tolua_S,"SMeshBuffer","irr::scene::SMeshBuffer","irr::scene::IMeshBuffer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SMeshBuffer");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SMeshBuffer_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SMeshBuffer_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SMeshBuffer_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SMeshBuffer_delete00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBuffer_getVertices00);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBuffer_getVertices01);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBuffer_getIndices00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBuffer_getIndices01);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox00);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SMeshBuffer_recalculateBoundingBox00);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType00);
     tolua_variable(tolua_S,"Material",tolua_get_irr__scene__SMeshBuffer_Material,tolua_set_irr__scene__SMeshBuffer_Material);
     tolua_variable(tolua_S,"Vertices",tolua_get_irr__scene__SMeshBuffer_Vertices,tolua_set_irr__scene__SMeshBuffer_Vertices);
     tolua_variable(tolua_S,"Indices",tolua_get_irr__scene__SMeshBuffer_Indices,tolua_set_irr__scene__SMeshBuffer_Indices);
     tolua_variable(tolua_S,"BoundingBox",tolua_get_irr__scene__SMeshBuffer_BoundingBox,tolua_set_irr__scene__SMeshBuffer_BoundingBox);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial02);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBuffer_getMaterial03);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBuffer_getVertexType01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBuffer_getVertices02);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBuffer_getVertices03);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBuffer_getVertexCount01);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBuffer_getIndices02);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBuffer_getIndices03);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBuffer_getIndexCount01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBuffer_getBoundingBox02);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_SMeshBuffer_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_SMeshBuffer_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_SMeshBuffer_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMesh","irr::scene::IMesh","irr::IUnknown",tolua_collect_irr__scene__IMesh);
    #else
    tolua_cclass(tolua_S,"IMesh","irr::scene::IMesh","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMesh");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IMesh_delete00);
     tolua_function(tolua_S,"getMeshBufferCount",tolua_IrrLua_irr_scene_IMesh_getMeshBufferCount00);
     tolua_function(tolua_S,"getMeshBuffer",tolua_IrrLua_irr_scene_IMesh_getMeshBuffer00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IMesh_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IMesh_getBoundingBox01);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IMesh_setMaterialFlag00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IMesh_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IMesh_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIMesh","irr::scene::IrrLuaIMesh","irr::scene::IMesh",tolua_collect_irr__scene__IrrLuaIMesh);
    #else
    tolua_cclass(tolua_S,"IrrLuaIMesh","irr::scene::IrrLuaIMesh","irr::scene::IMesh",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIMesh");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaIMesh_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaIMesh_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaIMesh_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaIMesh_delete00);
     tolua_function(tolua_S,"getMeshBufferCount",tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBufferCount00);
     tolua_function(tolua_S,"getMeshBuffer",tolua_IrrLua_irr_scene_IrrLuaIMesh_getMeshBuffer00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IrrLuaIMesh_getBoundingBox00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IrrLuaIMesh_setMaterialFlag00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaIMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaIMesh_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaIMesh_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,109,101,115,104,112,114,111,
    120,121, 32, 61, 32,123,125, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,115, 99,101,110,101, 46, 99,114,101,
     97,116,101, 73, 77,101,115,104, 40,100,101,102, 41, 10,108,
    111, 99, 97,108, 32,111, 32, 61, 32,123,125, 10,102,111,114,
     32,105, 44,118, 32,105,110, 32,112, 97,105,114,115, 40,100,
    101,102, 41, 32,100,111, 32,111, 91,105, 93, 32, 61, 32,118,
     32,101,110,100, 10,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
    114,114, 76,117, 97, 73, 77,101,115,104, 58,110,101,119, 40,
     41, 10,116,111,108,117, 97, 46,105,110,104,101,114,105,116,
     40,111, 44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115,
     41, 10,116,111,108,117, 97, 46,116, 97,107,101,111,119,110,
    101,114,115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,
    110,100,101,120, 32, 61, 32,102,117,110, 99,116,105,111,110,
     32, 40,116, 44, 32,107, 41, 32,114,101,116,117,114,110, 32,
    114, 97,119,103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,
    108, 97,115,115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,
    101,116,109,101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,
    111, 41, 10,105,114,114, 46, 95, 95,105,109,101,115,104,112,
    114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 58, 71,101,116, 80,114,111,120,121, 40, 41, 93, 32, 61,
     32,111, 10,114,101,116,117,114,110, 32,111, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 22");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMeshCache","irr::scene::IMeshCache","",tolua_collect_irr__scene__IMeshCache);
    #else
    tolua_cclass(tolua_S,"IMeshCache","irr::scene::IMeshCache","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMeshCache");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IMeshCache_delete00);
     tolua_function(tolua_S,"addMesh",tolua_IrrLua_irr_scene_IMeshCache_addMesh00);
     tolua_function(tolua_S,"removeMesh",tolua_IrrLua_irr_scene_IMeshCache_removeMesh00);
     tolua_function(tolua_S,"getMeshCount",tolua_IrrLua_irr_scene_IMeshCache_getMeshCount00);
     tolua_function(tolua_S,"getMeshIndex",tolua_IrrLua_irr_scene_IMeshCache_getMeshIndex00);
     tolua_function(tolua_S,"getMeshByIndex",tolua_IrrLua_irr_scene_IMeshCache_getMeshByIndex00);
     tolua_function(tolua_S,"getMeshFilename",tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename00);
     tolua_function(tolua_S,"getMeshFilename",tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename01);
     tolua_function(tolua_S,"getMeshFilename",tolua_IrrLua_irr_scene_IMeshCache_getMeshFilename02);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IMeshSceneNode","irr::scene::IMeshSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"IMeshSceneNode");
     tolua_function(tolua_S,"setMesh",tolua_IrrLua_irr_scene_IMeshSceneNode_setMesh00);
     tolua_function(tolua_S,"setReadOnlyMaterials",tolua_IrrLua_irr_scene_IMeshSceneNode_setReadOnlyMaterials00);
     tolua_function(tolua_S,"isReadOnlyMaterials",tolua_IrrLua_irr_scene_IMeshSceneNode_isReadOnlyMaterials00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SMesh","irr::scene::SMesh","irr::scene::IMesh",tolua_collect_irr__scene__SMesh);
    #else
    tolua_cclass(tolua_S,"SMesh","irr::scene::SMesh","irr::scene::IMesh",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SMesh");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SMesh_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SMesh_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SMesh_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SMesh_delete00);
     tolua_function(tolua_S,"getMeshBufferCount",tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount00);
     tolua_function(tolua_S,"getMeshBuffer",tolua_IrrLua_irr_scene_SMesh_getMeshBuffer00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMesh_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMesh_getBoundingBox01);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SMesh_recalculateBoundingBox00);
     tolua_function(tolua_S,"addMeshBuffer",tolua_IrrLua_irr_scene_SMesh_addMeshBuffer00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_SMesh_setMaterialFlag00);
     tolua_variable(tolua_S,"MeshBuffers",tolua_get_irr__scene__SMesh_MeshBuffers,tolua_set_irr__scene__SMesh_MeshBuffers);
     tolua_variable(tolua_S,"BoundingBox",tolua_get_irr__scene__SMesh_BoundingBox,tolua_set_irr__scene__SMesh_BoundingBox);
     tolua_function(tolua_S,"getMeshBufferCount",tolua_IrrLua_irr_scene_SMesh_getMeshBufferCount01);
     tolua_function(tolua_S,"getMeshBuffer",tolua_IrrLua_irr_scene_SMesh_getMeshBuffer01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMesh_getBoundingBox02);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMesh_getBoundingBox03);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_SMesh_setMaterialFlag01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_SMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_SMesh_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_SMesh_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"EAMT_UNKNOWN",irr::scene::EAMT_UNKNOWN);
    tolua_constant(tolua_S,"EAMT_MD2",irr::scene::EAMT_MD2);
    tolua_constant(tolua_S,"EAMT_MS3D",irr::scene::EAMT_MS3D);
    tolua_constant(tolua_S,"EAMT_OBJ",irr::scene::EAMT_OBJ);
    tolua_constant(tolua_S,"EAMT_BSP",irr::scene::EAMT_BSP);
    tolua_constant(tolua_S,"EAMT_3DS",irr::scene::EAMT_3DS);
    tolua_constant(tolua_S,"EAMT_X",irr::scene::EAMT_X);
    tolua_constant(tolua_S,"EAMT_MY3D",irr::scene::EAMT_MY3D);
    tolua_constant(tolua_S,"EAMT_LMTS",irr::scene::EAMT_LMTS);
    tolua_constant(tolua_S,"EAMT_CSM",irr::scene::EAMT_CSM);
    tolua_constant(tolua_S,"EAMTS_OCT",irr::scene::EAMTS_OCT);
    tolua_constant(tolua_S,"EAMTS_B3D",irr::scene::EAMTS_B3D);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IAnimatedMesh","irr::scene::IAnimatedMesh","irr::IUnknown",tolua_collect_irr__scene__IAnimatedMesh);
    #else
    tolua_cclass(tolua_S,"IAnimatedMesh","irr::scene::IAnimatedMesh","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IAnimatedMesh");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IAnimatedMesh_delete00);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_IAnimatedMesh_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_IAnimatedMesh_getMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMesh_getBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_IAnimatedMesh_getMeshType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IAnimatedMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IAnimatedMesh_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IAnimatedMesh_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 77,101,115,104,
     32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 65,
    110,105,109, 97,116,101,100, 77,101,115,104, 46,103,101,116,
     77,101,115,104, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,
    116,101,100, 77,101,115,104, 58,103,101,116, 77,101,115,104,
     40,102,114, 97,109,101, 44, 32,100,101,116, 97,105,108, 76,
    101,118,101,108, 44, 32,115,116, 97,114,116, 70,114, 97,109,
    101, 76,111,111,112, 44, 32,101,110,100, 70,114, 97,109,101,
     76,111,111,112, 41, 10,100,101,116, 97,105,108, 76,101,118,
    101,108, 32, 61, 32,100,101,116, 97,105,108, 76,101,118,101,
    108, 32,111,114, 32, 50, 53, 53, 10,115,116, 97,114,116, 70,
    114, 97,109,101, 76,111,111,112, 32, 61, 32,115,116, 97,114,
    116, 70,114, 97,109,101, 76,111,111,112, 32,111,114, 32, 45,
     49, 10,101,110,100, 70,114, 97,109,101, 76,111,111,112, 32,
     61, 32,101,110,100, 70,114, 97,109,101, 76,111,111,112, 32,
    111,114, 32, 45, 49, 10,114,101,116,117,114,110, 32, 95,103,
    101,116, 77,101,115,104, 40,115,101,108,102, 44, 32,102,114,
     97,109,101, 44, 32,100,101,116, 97,105,108, 76,101,118,101,
    108, 44, 32,115,116, 97,114,116, 70,114, 97,109,101, 76,111,
    111,112, 44, 32,101,110,100, 70,114, 97,109,101, 76,111,111,
    112, 41, 10,101,110,100, 10,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     46,103,101,116, 68,101, 98,117,103, 78, 97,109,101, 32, 61,
     32,105,114,114, 46, 73, 85,110,107,110,111,119,110, 46,103,
    101,116, 68,101, 98,117,103, 78, 97,109,101,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 23");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIAnimatedMesh","irr::scene::IrrLuaIAnimatedMesh","irr::scene::IAnimatedMesh",tolua_collect_irr__scene__IrrLuaIAnimatedMesh);
    #else
    tolua_cclass(tolua_S,"IrrLuaIAnimatedMesh","irr::scene::IrrLuaIAnimatedMesh","irr::scene::IAnimatedMesh",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIAnimatedMesh");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_delete00);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_getMeshType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMesh_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105, 97,110,105,109, 97,116,101,
    100,109,101,115,104,112,114,111,120,121, 32, 61, 32,123,125,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115,
     99,101,110,101, 46, 99,114,101, 97,116,101, 73, 65,110,105,
    109, 97,116,101,100, 77,101,115,104, 40,100,101,102, 41, 10,
    108,111, 99, 97,108, 32,111, 32, 61, 32,123,125, 10,102,111,
    114, 32,105, 44,118, 32,105,110, 32,112, 97,105,114,115, 40,
    100,101,102, 41, 32,100,111, 32,111, 91,105, 93, 32, 61, 32,
    118, 32,101,110,100, 10,111, 46, 95, 95, 99, 95, 99,108, 97,
    115,115, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46,
     73,114,114, 76,117, 97, 73, 65,110,105,109, 97,116,101,100,
     77,101,115,104, 58,110,101,119, 40, 41, 10,116,111,108,117,
     97, 46,105,110,104,101,114,105,116, 40,111, 44, 32,111, 46,
     95, 95, 99, 95, 99,108, 97,115,115, 41, 10,116,111,108,117,
     97, 46,116, 97,107,101,111,119,110,101,114,115,104,105,112,
     40,111, 41, 10,111, 46, 95, 95,105,110,100,101,120, 32, 61,
     32,102,117,110, 99,116,105,111,110, 32, 40,116, 44, 32,107,
     41, 32,114,101,116,117,114,110, 32,114, 97,119,103,101,116,
     40,116, 44, 34, 95, 95, 99, 95, 99,108, 97,115,115, 34, 41,
     91,107, 93, 32,101,110,100, 10,115,101,116,109,101,116, 97,
    116, 97, 98,108,101, 40,111, 44, 32,111, 41, 10,105,114,114,
     46, 95, 95,105, 97,110,105,109, 97,116,101,100,109,101,115,
    104,112,114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,108,
     97,115,115, 58, 71,101,116, 80,114,111,120,121, 40, 41, 93,
     32, 61, 32,111, 10,114,101,116,117,114,110, 32,111, 10,101,
    110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 24");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"EMAT_STAND",irr::scene::EMAT_STAND);
    tolua_constant(tolua_S,"EMAT_RUN",irr::scene::EMAT_RUN);
    tolua_constant(tolua_S,"EMAT_ATTACK",irr::scene::EMAT_ATTACK);
    tolua_constant(tolua_S,"EMAT_PAIN_A",irr::scene::EMAT_PAIN_A);
    tolua_constant(tolua_S,"EMAT_PAIN_B",irr::scene::EMAT_PAIN_B);
    tolua_constant(tolua_S,"EMAT_PAIN_C",irr::scene::EMAT_PAIN_C);
    tolua_constant(tolua_S,"EMAT_JUMP",irr::scene::EMAT_JUMP);
    tolua_constant(tolua_S,"EMAT_FLIP",irr::scene::EMAT_FLIP);
    tolua_constant(tolua_S,"EMAT_SALUTE",irr::scene::EMAT_SALUTE);
    tolua_constant(tolua_S,"EMAT_FALLBACK",irr::scene::EMAT_FALLBACK);
    tolua_constant(tolua_S,"EMAT_WAVE",irr::scene::EMAT_WAVE);
    tolua_constant(tolua_S,"EMAT_POINT",irr::scene::EMAT_POINT);
    tolua_constant(tolua_S,"EMAT_CROUCH_STAND",irr::scene::EMAT_CROUCH_STAND);
    tolua_constant(tolua_S,"EMAT_CROUCH_WALK",irr::scene::EMAT_CROUCH_WALK);
    tolua_constant(tolua_S,"EMAT_CROUCH_ATTACK",irr::scene::EMAT_CROUCH_ATTACK);
    tolua_constant(tolua_S,"EMAT_CROUCH_PAIN",irr::scene::EMAT_CROUCH_PAIN);
    tolua_constant(tolua_S,"EMAT_CROUCH_DEATH",irr::scene::EMAT_CROUCH_DEATH);
    tolua_constant(tolua_S,"EMAT_DEATH_FALLBACK",irr::scene::EMAT_DEATH_FALLBACK);
    tolua_constant(tolua_S,"EMAT_DEATH_FALLFORWARD",irr::scene::EMAT_DEATH_FALLFORWARD);
    tolua_constant(tolua_S,"EMAT_DEATH_FALLBACKSLOW",irr::scene::EMAT_DEATH_FALLBACKSLOW);
    tolua_constant(tolua_S,"EMAT_BOOM",irr::scene::EMAT_BOOM);
    tolua_constant(tolua_S,"EMAT_COUNT",irr::scene::EMAT_COUNT);
    tolua_cclass(tolua_S,"IAnimatedMeshMD2","irr::scene::IAnimatedMeshMD2","irr::scene::IAnimatedMesh",NULL);
    tolua_beginmodule(tolua_S,"IAnimatedMeshMD2");
     tolua_function(tolua_S,"getFrameLoop",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop00);
     tolua_function(tolua_S,"getFrameLoop",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameLoop01);
     tolua_function(tolua_S,"getAnimationCount",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationCount00);
     tolua_function(tolua_S,"getAnimationName",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getAnimationName00);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getMeshType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IAnimatedMeshMD2_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 70,114, 97,109,
    101, 76,111,111,112, 32, 61, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,
    104, 77, 68, 50, 46,103,101,116, 70,114, 97,109,101, 76,111,
    111,112, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,
    100, 77,101,115,104, 77, 68, 50, 58,103,101,116, 70,114, 97,
    109,101, 76,111,111,112, 40, 97,114,103, 41, 10,105,102, 32,
    116,111,108,117, 97, 46,116,121,112,101, 40, 97,114,103, 41,
     32, 61, 61, 32, 34,110,117,109, 98,101,114, 34, 32,116,104,
    101,110, 10,108,111, 99, 97,108, 32,111,117,116, 66,101,103,
    105,110, 44, 32,111,117,116, 69,110,100, 44, 32,111,117,116,
     70, 80, 83, 32, 61, 32, 48, 44, 48, 44, 48, 10,111,117,116,
     66,101,103,105,110, 44, 32,111,117,116, 69,110,100, 44, 32,
    111,117,116, 70, 80, 83, 32, 61, 32, 95,103,101,116, 70,114,
     97,109,101, 76,111,111,112, 40,115,101,108,102, 44, 32, 97,
    114,103, 44, 32,111,117,116, 66,101,103,105,110, 44, 32,111,
    117,116, 69,110,100, 44, 32,111,117,116, 70, 80, 83, 41, 10,
    114,101,116,117,114,110, 32,111,117,116, 66,101,103,105,110,
     44, 32,111,117,116, 69,110,100, 44, 32,111,117,116, 70, 80,
     83, 10,101,108,115,101, 10,108,111, 99, 97,108, 32, 98,111,
    111,108, 82,101,116, 44, 32,111,117,116, 66,101,103,105,110,
     44, 32,111,117,116, 69,110,100, 44, 32,111,117,116, 70, 80,
     83, 32, 61, 32,102, 97,108,115,101, 44, 48, 44, 48, 44, 48,
     10,108,111, 99, 97,108, 32,110,109, 32, 61, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114,
     40, 97,114,103, 41, 10, 98,111,111,108, 82,101,116, 44, 32,
    111,117,116, 66,101,103,105,110, 44, 32,111,117,116, 69,110,
    100, 44, 32,111,117,116, 70, 80, 83, 32, 61, 32, 95,103,101,
    116, 70,114, 97,109,101, 76,111,111,112, 40,115,101,108,102,
     44, 32,110,109, 44, 32,111,117,116, 66,101,103,105,110, 44,
     32,111,117,116, 69,110,100, 44, 32,111,117,116, 70, 80, 83,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95, 99, 56, 95,112,116,114, 40,110,109, 41, 10,114,
    101,116,117,114,110, 32, 98,111,111,108, 82,101,116, 44, 32,
    111,117,116, 66,101,103,105,110, 44, 32,111,117,116, 69,110,
    100, 44, 32,111,117,116, 70, 80, 83, 10,101,110,100, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116, 65,110,
    105,109, 97,116,105,111,110, 78, 97,109,101, 32, 61, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,
    116,101,100, 77,101,115,104, 77, 68, 50, 46,103,101,116, 65,
    110,105,109, 97,116,105,111,110, 78, 97,109,101, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     77, 68, 50, 58,103,101,116, 65,110,105,109, 97,116,105,111,
    110, 78, 97,109,101, 40,110,114, 41, 10,114,101,116,117,114,
    110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40, 95,103,101,116, 65,110,105,109, 97,116,105,111,110,
     78, 97,109,101, 40,115,101,108,102, 44, 32,110,114, 41, 41,
     10,101,110,100, 10,105,114,114, 46,115, 99,101,110,101, 46,
     73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 77, 68,
     50, 46,103,101,116, 68,101, 98,117,103, 78, 97,109,101, 32,
     61, 32,105,114,114, 46, 73, 85,110,107,110,111,119,110, 46,
    103,101,116, 68,101, 98,117,103, 78, 97,109,101, 10,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,
    101,100, 77,101,115,104, 77, 68, 50, 46,103,101,116, 77,101,
    115,104, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46,
     73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 46,103,
    101,116, 77,101,115,104,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 25");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IAnimatedMeshMS3D","irr::scene::IAnimatedMeshMS3D","irr::scene::IAnimatedMesh",NULL);
    tolua_beginmodule(tolua_S,"IAnimatedMeshMS3D");
     tolua_function(tolua_S,"getMatrixOfJoint",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMatrixOfJoint00);
     tolua_function(tolua_S,"getJointCount",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointCount00);
     tolua_function(tolua_S,"getJointName",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointName00);
     tolua_function(tolua_S,"getJointNumber",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getJointNumber00);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getMeshType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IAnimatedMeshMS3D_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 74,111,105,110,
    116, 78, 97,109,101, 32, 61, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,
    104, 77, 83, 51, 68, 46,103,101,116, 74,111,105,110,116, 78,
     97,109,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,
    101,100, 77,101,115,104, 77, 83, 51, 68, 58,103,101,116, 74,
    111,105,110,116, 78, 97,109,101, 40,110,117,109, 41, 10,114,
    101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46,
     99, 56, 95,112,116,114, 95,116,111, 95,115,116,100, 95,115,
    116,114,105,110,103, 40, 95,103,101,116, 74,111,105,110,116,
     78, 97,109,101, 40,115,101,108,102, 44, 32,110,117,109, 41,
     41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,
    116, 74,111,105,110,116, 78,117,109, 98,101,114, 32, 61, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109,
     97,116,101,100, 77,101,115,104, 77, 83, 51, 68, 46,103,101,
    116, 74,111,105,110,116, 78,117,109, 98,101,114, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     77, 83, 51, 68, 58,103,101,116, 74,111,105,110,116, 78,117,
    109, 98,101,114, 40,110, 97,109,101, 41, 10,108,111, 99, 97,
    108, 32,110,109, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101,
     41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,
    103,101,116, 74,111,105,110,116, 78,117,109, 98,101,114, 40,
    115,101,108,102, 44, 32,110,109, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,
    116,114, 40,110,109, 41, 10,114,101,116,117,114,110, 32,114,
    101,116, 10,101,110,100, 10,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     77, 83, 51, 68, 46,103,101,116, 68,101, 98,117,103, 78, 97,
    109,101, 32, 61, 32,105,114,114, 46, 73, 85,110,107,110,111,
    119,110, 46,103,101,116, 68,101, 98,117,103, 78, 97,109,101,
     10,105,114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,
    109, 97,116,101,100, 77,101,115,104, 77, 83, 51, 68, 46,103,
    101,116, 77,101,115,104, 32, 61, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,
    115,104, 46,103,101,116, 77,101,115,104,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 26");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IAnimatedMeshX","irr::scene::IAnimatedMeshX","irr::scene::IAnimatedMesh",NULL);
    tolua_beginmodule(tolua_S,"IAnimatedMeshX");
     tolua_function(tolua_S,"getMatrixOfJoint",tolua_IrrLua_irr_scene_IAnimatedMeshX_getMatrixOfJoint00);
     tolua_function(tolua_S,"getJointCount",tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointCount00);
     tolua_function(tolua_S,"getJointName",tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointName00);
     tolua_function(tolua_S,"getJointNumber",tolua_IrrLua_irr_scene_IAnimatedMeshX_getJointNumber00);
     tolua_function(tolua_S,"getDrawableSkeleton",tolua_IrrLua_irr_scene_IAnimatedMeshX_getDrawableSkeleton00);
     tolua_function(tolua_S,"getAnimationCount",tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationCount00);
     tolua_function(tolua_S,"getAnimationName",tolua_IrrLua_irr_scene_IAnimatedMeshX_getAnimationName00);
     tolua_function(tolua_S,"setCurrentAnimation",tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation00);
     tolua_function(tolua_S,"setCurrentAnimation",tolua_IrrLua_irr_scene_IAnimatedMeshX_setCurrentAnimation01);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_IAnimatedMeshX_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_IAnimatedMeshX_getMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMeshX_getBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_IAnimatedMeshX_getMeshType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IAnimatedMeshX_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IAnimatedMeshX_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IAnimatedMeshX_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 65,110,105,109,
     97,116,105,111,110, 78, 97,109,101, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,
    100, 77,101,115,104, 88, 46,103,101,116, 65,110,105,109, 97,
    116,105,111,110, 78, 97,109,101, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 65,
    110,105,109, 97,116,101,100, 77,101,115,104, 88, 58,103,101,
    116, 65,110,105,109, 97,116,105,111,110, 78, 97,109,101, 40,
    110,114, 41, 10,114,101,116,117,114,110, 32,105,114,114, 46,
     99, 97,115,116, 46, 99, 56, 95,112,116,114, 95,116,111, 95,
    115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,116,
     65,110,105,109, 97,116,105,111,110, 78, 97,109,101, 40,115,
    101,108,102, 44, 32,110,114, 41, 41, 10,101,110,100, 10,108,
    111, 99, 97,108, 32, 95,103,101,116, 74,111,105,110,116, 78,
     97,109,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101,
     46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 88,
     46,103,101,116, 74,111,105,110,116, 78, 97,109,101, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,
    104, 88, 58,103,101,116, 74,111,105,110,116, 78, 97,109,101,
     40,110,117,109, 41, 10,114,101,116,117,114,110, 32,105,114,
    114, 46, 99, 97,115,116, 46, 99, 56, 95,112,116,114, 95,116,
    111, 95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,
    101,116, 74,111,105,110,116, 78, 97,109,101, 40,115,101,108,
    102, 44, 32,110,117,109, 41, 41, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95,103,101,116, 74,111,105,110,116, 78,117,
    109, 98,101,114, 32, 61, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     88, 46,103,101,116, 74,111,105,110,116, 78,117,109, 98,101,
    114, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,100,
     77,101,115,104, 88, 58,103,101,116, 74,111,105,110,116, 78,
    117,109, 98,101,114, 40,110, 97,109,101, 41, 10,108,111, 99,
     97,108, 32,110,109, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,110, 97,109,
    101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95,103,101,116, 74,111,105,110,116, 78,117,109, 98,101,114,
     40,115,101,108,102, 44, 32,110,109, 41, 10,105,114,114, 46,
     99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,110,109, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
    115,101,116, 67,117,114,114,101,110,116, 65,110,105,109, 97,
    116,105,111,110, 32, 61, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104,
     88, 46,115,101,116, 67,117,114,114,101,110,116, 65,110,105,
    109, 97,116,105,111,110, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,
    109, 97,116,101,100, 77,101,115,104, 88, 58,115,101,116, 67,
    117,114,114,101,110,116, 65,110,105,109, 97,116,105,111,110,
     40, 97,114,103, 41, 10,105,102, 32,116,111,108,117, 97, 46,
    116,121,112,101, 40, 97,114,103, 41, 32, 61, 61, 32, 34,115,
    116,114,105,110,103, 34, 32,116,104,101,110, 10,108,111, 99,
     97,108, 32,110,109, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40, 97,114,103,
     41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,
    115,101,116, 67,117,114,114,101,110,116, 65,110,105,109, 97,
    116,105,111,110, 40,115,101,108,102, 44, 32,110,109, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110,109, 41, 10,114,101,116,
    117,114,110, 32,114,101,116, 10,101,108,115,101, 10,114,101,
    116,117,114,110, 32, 95,115,101,116, 67,117,114,114,101,110,
    116, 65,110,105,109, 97,116,105,111,110, 40,115,101,108,102,
     44, 32, 97,114,103, 41, 10,101,110,100, 10,101,110,100, 10,
    105,114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109,
     97,116,101,100, 77,101,115,104, 88, 46,103,101,116, 68,101,
     98,117,103, 78, 97,109,101, 32, 61, 32,105,114,114, 46, 73,
     85,110,107,110,111,119,110, 46,103,101,116, 68,101, 98,117,
    103, 78, 97,109,101, 10,105,114,114, 46,115, 99,101,110,101,
     46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 88,
     46,103,101,116, 77,101,115,104, 32, 61, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,100,
     77,101,115,104, 46,103,101,116, 77,101,115,104,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 27");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IAnimatedMeshB3d","irr::scene::IAnimatedMeshB3d","irr::scene::IAnimatedMesh",NULL);
    tolua_beginmodule(tolua_S,"IAnimatedMeshB3d");
     tolua_function(tolua_S,"getMatrixOfJoint",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJoint00);
     tolua_function(tolua_S,"getMatrixOfJointUnanimated",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getMatrixOfJointUnanimated00);
     tolua_function(tolua_S,"AddMatrixToJoint",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_AddMatrixToJoint00);
     tolua_function(tolua_S,"getJointCount",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointCount00);
     tolua_function(tolua_S,"getJointName",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointName00);
     tolua_function(tolua_S,"getJointNumber",tolua_IrrLua_irr_scene_IAnimatedMeshB3d_getJointNumber00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 74,111,105,110,
    116, 78, 97,109,101, 32, 61, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,115,
    104, 66, 51,100, 46,103,101,116, 74,111,105,110,116, 78, 97,
    109,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,
    100, 77,101,115,104, 66, 51,100, 58,103,101,116, 74,111,105,
    110,116, 78, 97,109,101, 40,110, 41, 10,114,101,116,117,114,
    110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40, 95,103,101,116, 74,111,105,110,116, 78, 97,109,101,
     40,115,101,108,102, 44, 32,110, 41, 41, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95,103,101,116, 74,111,105,110,116,
     78,117,109, 98,101,114, 32, 61, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 65,110,105,109, 97,116,101,100, 77,101,
    115,104, 66, 51,100, 46,103,101,116, 74,111,105,110,116, 78,
    117,109, 98,101,114, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73, 65,110,105,109,
     97,116,101,100, 77,101,115,104, 66, 51,100, 58,103,101,116,
     74,111,105,110,116, 78,117,109, 98,101,114, 40,110, 41, 10,
    108,111, 99, 97,108, 32,110, 97,109,101, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,
    114, 40,110, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95,103,101,116, 74,111,105,110,116, 78,117,109, 98,
    101,114, 40,115,101,108,102, 44, 32,110, 97,109,101, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,
    101,116,117,114,110, 32,114,101,116, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 28");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMeshManipulator","irr::scene::IMeshManipulator","irr::IUnknown",tolua_collect_irr__scene__IMeshManipulator);
    #else
    tolua_cclass(tolua_S,"IMeshManipulator","irr::scene::IMeshManipulator","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMeshManipulator");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IMeshManipulator_delete00);
     tolua_function(tolua_S,"flipSurfaces",tolua_IrrLua_irr_scene_IMeshManipulator_flipSurfaces00);
     tolua_function(tolua_S,"setVertexColorAlpha",tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColorAlpha00);
     tolua_function(tolua_S,"setVertexColors",tolua_IrrLua_irr_scene_IMeshManipulator_setVertexColors00);
     tolua_function(tolua_S,"recalculateNormals",tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals00);
     tolua_function(tolua_S,"recalculateNormals",tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals01);
     tolua_function(tolua_S,"recalculateNormals",tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals02);
     tolua_function(tolua_S,"recalculateNormals",tolua_IrrLua_irr_scene_IMeshManipulator_recalculateNormals03);
     tolua_function(tolua_S,"scaleMesh",tolua_IrrLua_irr_scene_IMeshManipulator_scaleMesh00);
     tolua_function(tolua_S,"createMeshCopy",tolua_IrrLua_irr_scene_IMeshManipulator_createMeshCopy00);
     tolua_function(tolua_S,"makePlanarTextureMapping",tolua_IrrLua_irr_scene_IMeshManipulator_makePlanarTextureMapping00);
     tolua_function(tolua_S,"createMeshWithTangents",tolua_IrrLua_irr_scene_IMeshManipulator_createMeshWithTangents00);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_IMeshManipulator_recalculateBoundingBox00);
     tolua_function(tolua_S,"createMeshUniquePrimitives",tolua_IrrLua_irr_scene_IMeshManipulator_createMeshUniquePrimitives00);
     tolua_function(tolua_S,"getPolyCount",tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount00);
     tolua_function(tolua_S,"getPolyCount",tolua_IrrLua_irr_scene_IMeshManipulator_getPolyCount01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IMeshManipulator_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IMeshManipulator_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IMeshManipulator_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SAnimatedMesh","irr::scene::SAnimatedMesh","irr::scene::IAnimatedMesh",tolua_collect_irr__scene__SAnimatedMesh);
    #else
    tolua_cclass(tolua_S,"SAnimatedMesh","irr::scene::SAnimatedMesh","irr::scene::IAnimatedMesh",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SAnimatedMesh");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SAnimatedMesh_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SAnimatedMesh_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SAnimatedMesh_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SAnimatedMesh_delete00);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh00);
     tolua_function(tolua_S,"addMesh",tolua_IrrLua_irr_scene_SAnimatedMesh_addMesh00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox00);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SAnimatedMesh_recalculateBoundingBox00);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType00);
     tolua_variable(tolua_S,"Box",tolua_get_irr__scene__SAnimatedMesh_Box,tolua_set_irr__scene__SAnimatedMesh_Box);
     tolua_variable(tolua_S,"Meshes",tolua_get_irr__scene__SAnimatedMesh_Meshes,tolua_set_irr__scene__SAnimatedMesh_Meshes);
     tolua_variable(tolua_S,"Type",tolua_get_irr__scene__SAnimatedMesh_Type,tolua_set_irr__scene__SAnimatedMesh_Type);
     tolua_function(tolua_S,"getFrameCount",tolua_IrrLua_irr_scene_SAnimatedMesh_getFrameCount01);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_SAnimatedMesh_getMesh01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SAnimatedMesh_getBoundingBox01);
     tolua_function(tolua_S,"getMeshType",tolua_IrrLua_irr_scene_SAnimatedMesh_getMeshType01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_SAnimatedMesh_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_SAnimatedMesh_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_SAnimatedMesh_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SMeshBufferLightMap","irr::scene::SMeshBufferLightMap","irr::scene::IMeshBuffer",tolua_collect_irr__scene__SMeshBufferLightMap);
    #else
    tolua_cclass(tolua_S,"SMeshBufferLightMap","irr::scene::SMeshBufferLightMap","irr::scene::IMeshBuffer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SMeshBufferLightMap");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SMeshBufferLightMap_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SMeshBufferLightMap_delete00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices00);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices01);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices01);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox01);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferLightMap_recalculateBoundingBox00);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType00);
     tolua_variable(tolua_S,"Material",tolua_get_irr__scene__SMeshBufferLightMap_Material,tolua_set_irr__scene__SMeshBufferLightMap_Material);
     tolua_variable(tolua_S,"Vertices",tolua_get_irr__scene__SMeshBufferLightMap_Vertices,tolua_set_irr__scene__SMeshBufferLightMap_Vertices);
     tolua_variable(tolua_S,"Indices",tolua_get_irr__scene__SMeshBufferLightMap_Indices,tolua_set_irr__scene__SMeshBufferLightMap_Indices);
     tolua_variable(tolua_S,"BoundingBox",tolua_get_irr__scene__SMeshBufferLightMap_BoundingBox,tolua_set_irr__scene__SMeshBufferLightMap_BoundingBox);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial02);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getMaterial03);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexType01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices02);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertices03);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getVertexCount01);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices02);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndices03);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getIndexCount01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox02);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getBoundingBox03);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_SMeshBufferLightMap_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_SMeshBufferLightMap_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_SMeshBufferLightMap_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"SMeshBufferTangents","irr::scene::SMeshBufferTangents","irr::scene::IMeshBuffer",tolua_collect_irr__scene__SMeshBufferTangents);
    #else
    tolua_cclass(tolua_S,"SMeshBufferTangents","irr::scene::SMeshBufferTangents","irr::scene::IMeshBuffer",NULL);
    #endif
    tolua_beginmodule(tolua_S,"SMeshBufferTangents");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_SMeshBufferTangents_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_SMeshBufferTangents_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_SMeshBufferTangents_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_SMeshBufferTangents_delete00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices00);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices01);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices00);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices01);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox01);
     tolua_function(tolua_S,"recalculateBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferTangents_recalculateBoundingBox00);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType00);
     tolua_variable(tolua_S,"Material",tolua_get_irr__scene__SMeshBufferTangents_Material,tolua_set_irr__scene__SMeshBufferTangents_Material);
     tolua_variable(tolua_S,"Vertices",tolua_get_irr__scene__SMeshBufferTangents_Vertices,tolua_set_irr__scene__SMeshBufferTangents_Vertices);
     tolua_variable(tolua_S,"Indices",tolua_get_irr__scene__SMeshBufferTangents_Indices,tolua_set_irr__scene__SMeshBufferTangents_Indices);
     tolua_variable(tolua_S,"BoundingBox",tolua_get_irr__scene__SMeshBufferTangents_BoundingBox,tolua_set_irr__scene__SMeshBufferTangents_BoundingBox);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial02);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_SMeshBufferTangents_getMaterial03);
     tolua_function(tolua_S,"getVertexType",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexType01);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices02);
     tolua_function(tolua_S,"getVertices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertices03);
     tolua_function(tolua_S,"getVertexCount",tolua_IrrLua_irr_scene_SMeshBufferTangents_getVertexCount01);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices02);
     tolua_function(tolua_S,"getIndices",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndices03);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_SMeshBufferTangents_getIndexCount01);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox02);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_SMeshBufferTangents_getBoundingBox03);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_SMeshBufferTangents_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_SMeshBufferTangents_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_SMeshBufferTangents_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"ESNRP_LIGHT_AND_CAMERA",irr::scene::ESNRP_LIGHT_AND_CAMERA);
    tolua_constant(tolua_S,"ESNRP_SKY_BOX",irr::scene::ESNRP_SKY_BOX);
    tolua_constant(tolua_S,"ESNRP_AUTOMATIC",irr::scene::ESNRP_AUTOMATIC);
    tolua_constant(tolua_S,"ESNRP_SOLID",irr::scene::ESNRP_SOLID);
    tolua_constant(tolua_S,"ESNRP_SHADOW",irr::scene::ESNRP_SHADOW);
    tolua_constant(tolua_S,"ESNRP_TRANSPARENT",irr::scene::ESNRP_TRANSPARENT);
    tolua_constant(tolua_S,"ESNRP_COUNT",irr::scene::ESNRP_COUNT);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ISceneManager","irr::scene::ISceneManager","irr::IUnknown",tolua_collect_irr__scene__ISceneManager);
    #else
    tolua_cclass(tolua_S,"ISceneManager","irr::scene::ISceneManager","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ISceneManager");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ISceneManager_delete00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_ISceneManager_getMesh00);
     tolua_function(tolua_S,"getMeshCache",tolua_IrrLua_irr_scene_ISceneManager_getMeshCache00);
     tolua_function(tolua_S,"getVideoDriver",tolua_IrrLua_irr_scene_ISceneManager_getVideoDriver00);
     tolua_function(tolua_S,"addCubeSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addCubeSceneNode00);
     tolua_function(tolua_S,"addSphereSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addSphereSceneNode00);
     tolua_function(tolua_S,"addAnimatedMeshSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addAnimatedMeshSceneNode00);
     tolua_function(tolua_S,"addMeshSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addMeshSceneNode00);
     tolua_function(tolua_S,"addWaterSurfaceSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addWaterSurfaceSceneNode00);
     tolua_function(tolua_S,"addOctTreeSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode00);
     tolua_function(tolua_S,"addOctTreeSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addOctTreeSceneNode01);
     tolua_function(tolua_S,"addCameraSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNode00);
     tolua_function(tolua_S,"addCameraSceneNodeMaya",tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeMaya00);
     tolua_function(tolua_S,"addCameraSceneNodeFPS",tolua_IrrLua_irr_scene_ISceneManager_addCameraSceneNodeFPS00);
     tolua_function(tolua_S,"addLightSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addLightSceneNode00);
     tolua_function(tolua_S,"addBillboardSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addBillboardSceneNode00);
     tolua_function(tolua_S,"addSkyBoxSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addSkyBoxSceneNode00);
     tolua_function(tolua_S,"addSkyDomeSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addSkyDomeSceneNode00);
     tolua_function(tolua_S,"addParticleSystemSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addParticleSystemSceneNode00);
     tolua_function(tolua_S,"addTerrainSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addTerrainSceneNode00);
     tolua_function(tolua_S,"addEmptySceneNode",tolua_IrrLua_irr_scene_ISceneManager_addEmptySceneNode00);
     tolua_function(tolua_S,"addDummyTransformationSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addDummyTransformationSceneNode00);
     tolua_function(tolua_S,"addTextSceneNode",tolua_IrrLua_irr_scene_ISceneManager_addTextSceneNode00);
     tolua_function(tolua_S,"addHillPlaneMesh",tolua_IrrLua_irr_scene_ISceneManager_addHillPlaneMesh00);
     tolua_function(tolua_S,"addTerrainMesh",tolua_IrrLua_irr_scene_ISceneManager_addTerrainMesh00);
     tolua_function(tolua_S,"getRootSceneNode",tolua_IrrLua_irr_scene_ISceneManager_getRootSceneNode00);
     tolua_function(tolua_S,"getSceneNodeFromId",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromId00);
     tolua_function(tolua_S,"getSceneNodeFromName",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFromName00);
     tolua_function(tolua_S,"getActiveCamera",tolua_IrrLua_irr_scene_ISceneManager_getActiveCamera00);
     tolua_function(tolua_S,"setActiveCamera",tolua_IrrLua_irr_scene_ISceneManager_setActiveCamera00);
     tolua_function(tolua_S,"setShadowColor",tolua_IrrLua_irr_scene_ISceneManager_setShadowColor00);
     tolua_function(tolua_S,"getShadowColor",tolua_IrrLua_irr_scene_ISceneManager_getShadowColor00);
     tolua_function(tolua_S,"registerNodeForRendering",tolua_IrrLua_irr_scene_ISceneManager_registerNodeForRendering00);
     tolua_function(tolua_S,"drawAll",tolua_IrrLua_irr_scene_ISceneManager_drawAll00);
     tolua_function(tolua_S,"createRotationAnimator",tolua_IrrLua_irr_scene_ISceneManager_createRotationAnimator00);
     tolua_function(tolua_S,"createFlyCircleAnimator",tolua_IrrLua_irr_scene_ISceneManager_createFlyCircleAnimator00);
     tolua_function(tolua_S,"createFlyStraightAnimator",tolua_IrrLua_irr_scene_ISceneManager_createFlyStraightAnimator00);
     tolua_function(tolua_S,"createTextureAnimator",tolua_IrrLua_irr_scene_ISceneManager_createTextureAnimator00);
     tolua_function(tolua_S,"createDeleteAnimator",tolua_IrrLua_irr_scene_ISceneManager_createDeleteAnimator00);
     tolua_function(tolua_S,"createCollisionResponseAnimator",tolua_IrrLua_irr_scene_ISceneManager_createCollisionResponseAnimator00);
     tolua_function(tolua_S,"createFollowSplineAnimator",tolua_IrrLua_irr_scene_ISceneManager_createFollowSplineAnimator00);
     tolua_function(tolua_S,"createTriangleSelector",tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelector00);
     tolua_function(tolua_S,"createTriangleSelectorFromBoundingBox",tolua_IrrLua_irr_scene_ISceneManager_createTriangleSelectorFromBoundingBox00);
     tolua_function(tolua_S,"createOctTreeTriangleSelector",tolua_IrrLua_irr_scene_ISceneManager_createOctTreeTriangleSelector00);
     tolua_function(tolua_S,"createMetaTriangleSelector",tolua_IrrLua_irr_scene_ISceneManager_createMetaTriangleSelector00);
     tolua_function(tolua_S,"createTerrainTriangleSelector",tolua_IrrLua_irr_scene_ISceneManager_createTerrainTriangleSelector00);
     tolua_function(tolua_S,"addExternalMeshLoader",tolua_IrrLua_irr_scene_ISceneManager_addExternalMeshLoader00);
     tolua_function(tolua_S,"getSceneCollisionManager",tolua_IrrLua_irr_scene_ISceneManager_getSceneCollisionManager00);
     tolua_function(tolua_S,"getMeshManipulator",tolua_IrrLua_irr_scene_ISceneManager_getMeshManipulator00);
     tolua_function(tolua_S,"addToDeletionQueue",tolua_IrrLua_irr_scene_ISceneManager_addToDeletionQueue00);
     tolua_function(tolua_S,"postEventFromUser",tolua_IrrLua_irr_scene_ISceneManager_postEventFromUser00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_scene_ISceneManager_clear00);
     tolua_function(tolua_S,"getParameters",tolua_IrrLua_irr_scene_ISceneManager_getParameters00);
     tolua_function(tolua_S,"getSceneNodeRenderPass",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeRenderPass00);
     tolua_function(tolua_S,"getDefaultSceneNodeFactory",tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeFactory00);
     tolua_function(tolua_S,"registerSceneNodeFactory",tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeFactory00);
     tolua_function(tolua_S,"getRegisteredSceneNodeFactoryCount",tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeFactoryCount00);
     tolua_function(tolua_S,"getSceneNodeFactory",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeFactory00);
     tolua_function(tolua_S,"getDefaultSceneNodeAnimatorFactory",tolua_IrrLua_irr_scene_ISceneManager_getDefaultSceneNodeAnimatorFactory00);
     tolua_function(tolua_S,"registerSceneNodeAnimatorFactory",tolua_IrrLua_irr_scene_ISceneManager_registerSceneNodeAnimatorFactory00);
     tolua_function(tolua_S,"getRegisteredSceneNodeAnimatorFactoryCount",tolua_IrrLua_irr_scene_ISceneManager_getRegisteredSceneNodeAnimatorFactoryCount00);
     tolua_function(tolua_S,"getSceneNodeAnimatorFactory",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeAnimatorFactory00);
     tolua_function(tolua_S,"getSceneNodeTypeName",tolua_IrrLua_irr_scene_ISceneManager_getSceneNodeTypeName00);
     tolua_function(tolua_S,"createNewSceneManager",tolua_IrrLua_irr_scene_ISceneManager_createNewSceneManager00);
     tolua_function(tolua_S,"saveScene",tolua_IrrLua_irr_scene_ISceneManager_saveScene00);
     tolua_function(tolua_S,"saveScene",tolua_IrrLua_irr_scene_ISceneManager_saveScene01);
     tolua_function(tolua_S,"loadScene",tolua_IrrLua_irr_scene_ISceneManager_loadScene00);
     tolua_function(tolua_S,"loadScene",tolua_IrrLua_irr_scene_ISceneManager_loadScene01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ISceneManager_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ISceneManager_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ISceneManager_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 77,101,115,104,
     32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 77, 97,110, 97,103,101,114, 46,103,101,116,
     77,101,115,104, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101,
     77, 97,110, 97,103,101,114, 58,103,101,116, 77,101,115,104,
     40,109,101,115,104, 41, 10,105,102, 32,109,101,115,104, 32,
    126, 61, 32,110,105,108, 32,116,104,101,110, 10,108,111, 99,
     97,108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,109,
    101,115,104, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95,103,101,116, 77,101,115,104, 40,115,101,108,102,
     44, 32,110, 97,109,101, 41, 10,105,114,114, 46, 99, 97,115,
    116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114,
     40,110, 97,109,101, 41, 10,114,101,116,117,114,110, 32,114,
    101,116, 10,101,110,100, 10,114,101,116,117,114,110, 32, 95,
    103,101,116, 77,101,115,104, 40,115,101,108,102, 44, 32,110,
    105,108, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 84,101,114,114, 97,105,110, 83, 99,101,110,101,
     78,111,100,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114,
     46, 97,100,100, 84,101,114,114, 97,105,110, 83, 99,101,110,
    101, 78,111,100,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,
    101, 77, 97,110, 97,103,101,114, 58, 97,100,100, 84,101,114,
    114, 97,105,110, 83, 99,101,110,101, 78,111,100,101, 40,104,
    101,105,103,104,116, 77, 97,112, 70,105,108,101, 78, 97,109,
    101, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 44, 32,
    112,111,115,105,116,105,111,110, 44, 32,114,111,116, 97,116,
    105,111,110, 44, 32,115, 99, 97,108,101, 44, 32,118,101,114,
    116,101,120, 67,111,108,111,114, 44, 32,109, 97,120, 76, 79,
     68, 44, 32,112, 97,116, 99,104, 83,105,122,101, 41, 10,104,
    101,105,103,104,116, 77, 97,112, 70,105,108,101, 78, 97,109,
    101, 32, 61, 32,104,101,105,103,104,116, 77, 97,112, 70,105,
    108,101, 78, 97,109,101, 32,111,114, 32, 34, 34, 10,105,100,
     32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,112,111,115,
    105,116,105,111,110, 32, 61, 32,112,111,115,105,116,105,111,
    110, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,
    101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,
    114,111,116, 97,116,105,111,110, 32, 61, 32,114,111,116, 97,
    116,105,111,110, 32,111,114, 32,105,114,114, 46, 99,111,114,
    101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44,
     48, 41, 10,115, 99, 97,108,101, 32, 61, 32,115, 99, 97,108,
    101, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,
    101, 99,116,111,114, 51,100, 40, 49, 44, 49, 44, 49, 41, 10,
    118,101,114,116,101,120, 67,111,108,111,114, 32, 61, 32,118,
    101,114,116,101,120, 67,111,108,111,114, 32,111,114, 32,105,
    114,114, 46,118,105,100,101,111, 46, 83, 67,111,108,111,114,
     40, 50, 53, 53, 44, 50, 53, 53, 44, 50, 53, 53, 44, 50, 53,
     53, 41, 10,109, 97,120, 76, 79, 68, 32, 61, 32,109, 97,120,
     76, 79, 68, 32,111,114, 32, 53, 10,112, 97,116, 99,104, 83,
    105,122,101, 32, 61, 32,112, 97,116, 99,104, 83,105,122,101,
     32,111,114, 32,105,114,114, 46,115, 99,101,110,101, 46, 69,
     84, 80, 83, 95, 49, 55, 10,108,111, 99, 97,108, 32,110, 97,
    109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40,104,101,105,103,104,116,
     77, 97,112, 70,105,108,101, 78, 97,109,101, 41, 10,108,111,
     99, 97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100, 84,
    101,114,114, 97,105,110, 83, 99,101,110,101, 78,111,100,101,
     40,115,101,108,102, 44, 32,110, 97,109,101, 44, 32,112, 97,
    114,101,110,116, 44, 32,105,100, 44, 32,112,111,115,105,116,
    105,111,110, 44, 32,114,111,116, 97,116,105,111,110, 44, 32,
    115, 99, 97,108,101, 44, 32,118,101,114,116,101,120, 67,111,
    108,111,114, 44, 32,109, 97,120, 76, 79, 68, 44, 32,112, 97,
    116, 99,104, 83,105,122,101, 41, 10,105,114,114, 46, 99, 97,
    115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,
    114, 40,110, 97,109,101, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 76,105,103,104,116, 83, 99,101,110,101, 78,111,
    100,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46,
     73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114, 46, 97,
    100,100, 76,105,103,104,116, 83, 99,101,110,101, 78,111,100,
    101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110,
     97,103,101,114, 58, 97,100,100, 76,105,103,104,116, 83, 99,
    101,110,101, 78,111,100,101, 40,112, 97,114,101,110,116, 44,
     32,118,101, 99,116,111,114, 49, 44, 32, 99,111,108, 44, 32,
    114, 97,100,105,117,115, 44, 32,105,100, 41, 10,118,101, 99,
    116,111,114, 49, 32, 61, 32,118,101, 99,116,111,114, 49, 32,
    111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,
    116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10, 99,111,
    108, 32, 61, 32, 99,111,108, 32,111,114, 32,105,114,114, 46,
    118,105,100,101,111, 46, 83, 67,111,108,111,114,102, 40, 49,
     44, 49, 44, 49, 44, 49, 41, 10,114, 97,100,105,117,115, 32,
     61, 32,114, 97,100,105,117,115, 32,111,114, 32, 49, 48, 48,
     10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,
    114,101,116,117,114,110, 32, 95, 97,100,100, 76,105,103,104,
    116, 83, 99,101,110,101, 78,111,100,101, 40,115,101,108,102,
     44, 32,112, 97,114,101,110,116, 44, 32,118,101, 99,116,111,
    114, 49, 44, 32, 99,111,108, 44, 32,114, 97,100,105,117,115,
     44, 32,105,100, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95, 97,100,100, 65,110,105,109, 97,116,101,100, 77,101,
    115,104, 83, 99,101,110,101, 78,111,100,101, 32, 61, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101,
     77, 97,110, 97,103,101,114, 46, 97,100,100, 65,110,105,109,
     97,116,101,100, 77,101,115,104, 83, 99,101,110,101, 78,111,
    100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 58, 97,100,100, 65,110,105,109, 97,116,
    101,100, 77,101,115,104, 83, 99,101,110,101, 78,111,100,101,
     40,109,101,115,104, 44, 32,112, 97,114,101,110,116, 44, 32,
    105,100, 44, 32,118,101, 99,116,111,114, 49, 44, 32,118,101,
     99,116,111,114, 50, 44, 32,118,101, 99,116,111,114, 51, 44,
     32, 97,100,100, 70,108, 97,103,115, 41, 10,112, 97,114,101,
    110,116, 32, 61, 32,112, 97,114,101,110,116, 32,111,114, 32,
    110,105,108, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32,
     45, 49, 10,118,101, 99,116,111,114, 49, 32, 61, 32,118,101,
     99,116,111,114, 49, 32,111,114, 32,105,114,114, 46, 99,111,
    114,101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48,
     44, 48, 41, 10,118,101, 99,116,111,114, 50, 32, 61, 32,118,
    101, 99,116,111,114, 50, 32,111,114, 32,105,114,114, 46, 99,
    111,114,101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44,
     48, 44, 48, 41, 10,118,101, 99,116,111,114, 51, 32, 61, 32,
    118,101, 99,116,111,114, 51, 32,111,114, 32,105,114,114, 46,
     99,111,114,101, 46,118,101, 99,116,111,114, 51,100, 40, 49,
     44, 49, 44, 49, 41, 10, 97,100,100, 70,108, 97,103,115, 32,
     61, 32, 97,100,100, 70,108, 97,103,115, 32,111,114, 32,102,
     97,108,115,101, 10,114,101,116,117,114,110, 32, 95, 97,100,
    100, 65,110,105,109, 97,116,101,100, 77,101,115,104, 83, 99,
    101,110,101, 78,111,100,101, 40,115,101,108,102, 44, 32,109,
    101,115,104, 44, 32,112, 97,114,101,110,116, 44, 32,105,100,
     44, 32,118,101, 99,116,111,114, 49, 44, 32,118,101, 99,116,
    111,114, 50, 44, 32,118,101, 99,116,111,114, 51, 44, 32, 97,
    100,100, 70,108, 97,103,115, 41, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95, 97,100,100, 67, 97,109,101,114, 97, 83,
     99,101,110,101, 78,111,100,101, 32, 61, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110,
     97,103,101,114, 46, 97,100,100, 67, 97,109,101,114, 97, 83,
     99,101,110,101, 78,111,100,101, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 77, 97,110, 97,103,101,114, 58, 97,100,100,
     67, 97,109,101,114, 97, 83, 99,101,110,101, 78,111,100,101,
     40, 97,114,103, 49, 44, 32,118,101, 99,116,111,114, 49, 44,
     32,118,101, 99,116,111,114, 50, 44, 32,105,100, 41, 10,105,
    100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,118,101,
     99,116,111,114, 49, 32, 61, 32,118,101, 99,116,111,114, 49,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,101,
     99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,118,
    101, 99,116,111,114, 50, 32, 61, 32,118,101, 99,116,111,114,
     50, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,
    101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,
    114,101,116,117,114,110, 32, 95, 97,100,100, 67, 97,109,101,
    114, 97, 83, 99,101,110,101, 78,111,100,101, 40,115,101,108,
    102, 44, 32, 97,114,103, 49, 44, 32,118,101, 99,116,111,114,
     49, 44, 32,118,101, 99,116,111,114, 50, 44, 32,105,100, 41,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100,
     79, 99,116, 84,114,101,101, 83, 99,101,110,101, 78,111,100,
    101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 77, 97,110, 97,103,101,114, 46, 97,100,
    100, 79, 99,116, 84,114,101,101, 83, 99,101,110,101, 78,111,
    100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 58, 97,100,100, 79, 99,116, 84,114,101,
    101, 83, 99,101,110,101, 78,111,100,101, 40, 97,110,105,109,
     97,116,101,100,109,101,115,104, 44, 32,110,111,100,101, 44,
     32,105,100, 44, 32,112,111,108,121,115, 44, 32, 97,100,100,
     70,108, 97,103,115, 41, 10,105,100, 32, 61, 32,105,100, 32,
    111,114, 32, 45, 49, 10,112,111,108,121,115, 32, 61, 32,112,
    111,108,121,115, 32,111,114, 32, 49, 50, 56, 10, 97,100,100,
     70,108, 97,103,115, 32, 61, 32, 97,100,100, 70,108, 97,103,
    115, 32,111,114, 32,102, 97,108,115,101, 10,114,101,116,117,
    114,110, 32, 95, 97,100,100, 79, 99,116, 84,114,101,101, 83,
     99,101,110,101, 78,111,100,101, 40,115,101,108,102, 44, 32,
     97,110,105,109, 97,116,101,100,109,101,115,104, 44, 32,110,
    111,100,101, 44, 32,105,100, 44, 32,112,111,108,121,115, 44,
     32, 97,100,100, 70,108, 97,103,115, 41, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95, 97,100,100, 67, 97,109,101,114,
     97, 83, 99,101,110,101, 78,111,100,101, 70, 80, 83, 32, 61,
     32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,
    110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100, 67, 97,
    109,101,114, 97, 83, 99,101,110,101, 78,111,100,101, 70, 80,
     83, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110,
     97,103,101,114, 58, 97,100,100, 67, 97,109,101,114, 97, 83,
     99,101,110,101, 78,111,100,101, 70, 80, 83, 40,112, 97,114,
    101,110,116, 44, 32,114,115,112,101,101,100, 44, 32,109,115,
    112,101,101,100, 44, 32,105,100, 44, 32,107,101,121,109, 97,
    112, 44, 32,107,101,121,109, 97,112,115,105,122,101, 44, 32,
    110,111, 86,101,114,116,105, 99, 97,108, 77,111,118,101,109,
    101,110,116, 41, 10,112, 97,114,101,110,116, 32, 61, 32,112,
     97,114,101,110,116, 32,111,114, 32,110,105,108, 10,114,115,
    112,101,101,100, 32, 61, 32,114,115,112,101,101,100, 32,111,
    114, 32, 49, 48, 48, 10,109,115,112,101,101,100, 32, 61, 32,
    109,115,112,101,101,100, 32,111,114, 32, 53, 48, 48, 10,105,
    100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,107,101,
    121,109, 97,112, 32, 61, 32,107,101,121,109, 97,112, 32,111,
    114, 32,123,125, 10,107,101,121,109, 97,112,115,105,122,101,
     32, 61, 32,107,101,121,109, 97,112,115,105,122,101, 32,111,
    114, 32, 48, 10,114,101,116,117,114,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73,114,114, 76,117, 97, 65,100,100,
     67, 97,109,101,114, 97, 83, 99,101,110,101, 78,111,100,101,
     70, 80, 83, 40,115,101,108,102, 44, 32,112, 97,114,101,110,
    116, 44, 32,114,115,112,101,101,100, 44, 32,109,115,112,101,
    101,100, 44, 32,105,100, 44, 32,107,101,121,109, 97,112,115,
    105,122,101, 44, 32,107,101,121,109, 97,112, 44, 32,110,111,
     86,101,114,116,105, 99, 97,108, 77,111,118,101,109,101,110,
    116, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,
    100,100, 67,117, 98,101, 83, 99,101,110,101, 78,111,100,101,
     32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100,
     67,117, 98,101, 83, 99,101,110,101, 78,111,100,101, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,
    114, 58, 97,100,100, 67,117, 98,101, 83, 99,101,110,101, 78,
    111,100,101, 40,115,105,122,101, 44, 32,112, 97,114,101,110,
    116, 44, 32,105,100, 44, 32,118,101, 99,116,111,114, 49, 44,
     32,118,101, 99,116,111,114, 50, 44, 32,118,101, 99,116,111,
    114, 51, 41, 10,115,105,122,101, 32, 61, 32,115,105,122,101,
     32,111,114, 32, 49, 48, 10,112, 97,114,101,110,116, 32, 61,
     32,112, 97,114,101,110,116, 32,111,114, 32,110,105,108, 10,
    105,100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,118,
    101, 99,116,111,114, 49, 32, 61, 32,118,101, 99,116,111,114,
     49, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,
    101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,
    118,101, 99,116,111,114, 50, 32, 61, 32,118,101, 99,116,111,
    114, 50, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,
    118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41,
     10,118,101, 99,116,111,114, 51, 32, 61, 32,118,101, 99,116,
    111,114, 51, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,118,101, 99,116,111,114, 51,100, 40, 49, 44, 49, 44, 49,
     41, 10,114,101,116,117,114,110, 32, 95, 97,100,100, 67,117,
     98,101, 83, 99,101,110,101, 78,111,100,101, 40,115,101,108,
    102, 44, 32,115,105,122,101, 44, 32,112, 97,114,101,110,116,
     44, 32,105,100, 44, 32,118,101, 99,116,111,114, 49, 44, 32,
    118,101, 99,116,111,114, 50, 44, 32,118,101, 99,116,111,114,
     51, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,
    100,100, 83,112,104,101,114,101, 83, 99,101,110,101, 78,111,
    100,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46,
     73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114, 46, 97,
    100,100, 83,112,104,101,114,101, 83, 99,101,110,101, 78,111,
    100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 58, 97,100,100, 83,112,104,101,114,101,
     83, 99,101,110,101, 78,111,100,101, 40,114, 97,100,105,117,
    115, 44, 32,112,111,108,121, 67,111,117,110,116, 44, 32,112,
     97,114,101,110,116, 44, 32,105,100, 44, 32,112,111,115,105,
    116,105,111,110, 44, 32,114,111,116, 97,116,105,111,110, 44,
     32,115, 99, 97,108,101, 41, 10,114, 97,100,105,117,115, 32,
     61, 32,114, 97,100,105,117,115, 32,111,114, 32, 53, 10,112,
    111,108,121, 67,111,117,110,116, 32, 61, 32,112,111,108,121,
     67,111,117,110,116, 32,111,114, 32, 49, 54, 10,105,100, 32,
     61, 32,105,100, 32,111,114, 32, 45, 49, 10,112,111,115,105,
    116,105,111,110, 32, 61, 32,112,111,115,105,116,105,111,110,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,101,
     99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,114,
    111,116, 97,116,105,111,110, 32, 61, 32,114,111,116, 97,116,
    105,111,110, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48,
     41, 10,115, 99, 97,108,101, 32, 61, 32,115, 99, 97,108,101,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,101,
     99,116,111,114, 51,100, 40, 49, 44, 49, 44, 49, 41, 10,114,
    101,116,117,114,110, 32, 95, 97,100,100, 83,112,104,101,114,
    101, 83, 99,101,110,101, 78,111,100,101, 40,115,101,108,102,
     44, 32,114, 97,100,105,117,115, 44, 32,112,111,108,121, 67,
    111,117,110,116, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 44, 32,112,111,115,105,116,105,111,110, 44, 32,114,111,
    116, 97,116,105,111,110, 44, 32,115, 99, 97,108,101, 41, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,
    116,101, 70,108,121, 67,105,114, 99,108,101, 65,110,105,109,
     97,116,111,114, 32, 61, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114,
     46, 99,114,101, 97,116,101, 70,108,121, 67,105,114, 99,108,
    101, 65,110,105,109, 97,116,111,114, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 77, 97,110, 97,103,101,114, 58, 99,114,
    101, 97,116,101, 70,108,121, 67,105,114, 99,108,101, 65,110,
    105,109, 97,116,111,114, 40,118,101, 99,116,111,114, 49, 44,
     32,114, 97,100,105,117,115, 44, 32,115,112,101,101,100, 41,
     10,118,101, 99,116,111,114, 49, 32, 61, 32,118,101, 99,116,
    111,114, 49, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48,
     41, 10,114, 97,100,105,117,115, 32, 61, 32,114, 97,100,105,
    117,115, 32,111,114, 32, 48, 10,115,112,101,101,100, 32, 61,
     32,115,112,101,101,100, 32,111,114, 32, 48, 46, 48, 48, 49,
     10,114,101,116,117,114,110, 32, 95, 99,114,101, 97,116,101,
     70,108,121, 67,105,114, 99,108,101, 65,110,105,109, 97,116,
    111,114, 40,115,101,108,102, 44, 32,118,101, 99,116,111,114,
     49, 44, 32,114, 97,100,105,117,115, 44, 32,115,112,101,101,
    100, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,
    114,101, 97,116,101, 70,108,121, 83,116,114, 97,105,103,104,
    116, 65,110,105,109, 97,116,111,114, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 46, 99,114,101, 97,116,101, 70,108,121,
     83,116,114, 97,105,103,104,116, 65,110,105,109, 97,116,111,
    114, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110,
     97,103,101,114, 58, 99,114,101, 97,116,101, 70,108,121, 83,
    116,114, 97,105,103,104,116, 65,110,105,109, 97,116,111,114,
     40,118,101, 99,116,111,114, 49, 44, 32,118,101, 99,116,111,
    114, 50, 44, 32,116,105,109,101, 70,111,114, 87, 97,121, 44,
     32,108,111,111,112, 41, 10,118,101, 99,116,111,114, 49, 32,
     61, 32,118,101, 99,116,111,114, 49, 32,111,114, 32,105,114,
    114, 46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,100,
     40, 48, 44, 48, 44, 48, 41, 10,118,101, 99,116,111,114, 50,
     32, 61, 32,118,101, 99,116,111,114, 50, 32,111,114, 32,105,
    114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,
    100, 40, 48, 44, 48, 44, 48, 41, 10,116,105,109,101, 70,111,
    114, 87, 97,121, 32, 61, 32,116,105,109,101, 70,111,114, 87,
     97,121, 32,111,114, 32, 48, 10,108,111,111,112, 32, 61, 32,
    108,111,111,112, 32,111,114, 32,102, 97,108,115,101, 10,114,
    101,116,117,114,110, 32, 95, 99,114,101, 97,116,101, 70,108,
    121, 83,116,114, 97,105,103,104,116, 65,110,105,109, 97,116,
    111,114, 40,115,101,108,102, 44, 32,118,101, 99,116,111,114,
     49, 44, 32,118,101, 99,116,111,114, 50, 44, 32,116,105,109,
    101, 70,111,114, 87, 97,121, 44, 32,108,111,111,112, 41, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,
    116,101, 79, 99,116, 84,114,101,101, 84,114,105, 97,110,103,
    108,101, 83,101,108,101, 99,116,111,114, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77,
     97,110, 97,103,101,114, 46, 99,114,101, 97,116,101, 79, 99,
    116, 84,114,101,101, 84,114,105, 97,110,103,108,101, 83,101,
    108,101, 99,116,111,114, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,
    110,101, 77, 97,110, 97,103,101,114, 58, 99,114,101, 97,116,
    101, 79, 99,116, 84,114,101,101, 84,114,105, 97,110,103,108,
    101, 83,101,108,101, 99,116,111,114, 40,109,101,115,104, 44,
     32,110,111,100,101, 44, 32,109,105,110,105,109, 97,108, 80,
    111,108,121,115, 80,101,114, 78,111,100,101, 41, 10,109,105,
    110,105,109, 97,108, 80,111,108,121,115, 80,101,114, 78,111,
    100,101, 32, 61, 32,109,105,110,105,109, 97,108, 80,111,108,
    121,115, 80,101,114, 78,111,100,101, 32,111,114, 32, 48, 10,
    114,101,116,117,114,110, 32, 95, 99,114,101, 97,116,101, 79,
     99,116, 84,114,101,101, 84,114,105, 97,110,103,108,101, 83,
    101,108,101, 99,116,111,114, 40,115,101,108,102, 44, 32,109,
    101,115,104, 44, 32,110,111,100,101, 44, 32,109,105,110,105,
    109, 97,108, 80,111,108,121,115, 80,101,114, 78,111,100,101,
     41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,
    101, 97,116,101, 67,111,108,108,105,115,105,111,110, 82,101,
    115,112,111,110,115,101, 65,110,105,109, 97,116,111,114, 32,
     61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,
    101,110,101, 77, 97,110, 97,103,101,114, 46, 99,114,101, 97,
    116,101, 67,111,108,108,105,115,105,111,110, 82,101,115,112,
    111,110,115,101, 65,110,105,109, 97,116,111,114, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114,
     58, 99,114,101, 97,116,101, 67,111,108,108,105,115,105,111,
    110, 82,101,115,112,111,110,115,101, 65,110,105,109, 97,116,
    111,114, 40,119,111,114,108,100, 44, 32,115, 99,101,110,101,
     78,111,100,101, 44, 32,101,108,108,105,112,115,111,105,100,
     82, 97,100,105,117,115, 44, 32,103,114, 97,118,105,116,121,
     80,101,114, 83,101, 99,111,110,100, 44, 32,101,108,108,105,
    112,115,111,105,100, 84,114, 97,110,115,108, 97,116,105,111,
    110, 44, 32,115,108,105,100,105,110,103, 86, 97,108,117,101,
     41, 10,101,108,108,105,112,115,111,105,100, 82, 97,100,105,
    117,115, 32, 61, 32,101,108,108,105,112,115,111,105,100, 82,
     97,100,105,117,115, 32,111,114, 32,105,114,114, 46, 99,111,
    114,101, 46,118,101, 99,116,111,114, 51,100, 40, 51, 48, 44,
     54, 48, 44, 51, 48, 41, 10,103,114, 97,118,105,116,121, 80,
    101,114, 83,101, 99,111,110,100, 32, 61, 32,103,114, 97,118,
    105,116,121, 80,101,114, 83,101, 99,111,110,100, 32,111,114,
     32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,
    114, 51,100, 40, 48, 44, 45, 49, 48, 48, 44, 48, 41, 10,101,
    108,108,105,112,115,111,105,100, 84,114, 97,110,115,108, 97,
    116,105,111,110, 32, 61, 32,101,108,108,105,112,115,111,105,
    100, 84,114, 97,110,115,108, 97,116,105,111,110, 32,111,114,
     32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,111,
    114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,115,108,105,100,
    105,110,103, 86, 97,108,117,101, 32, 61, 32,115,108,105,100,
    105,110,103, 86, 97,108,117,101, 32,111,114, 32, 48, 46, 48,
     48, 48, 53, 10,114,101,116,117,114,110, 32, 95, 99,114,101,
     97,116,101, 67,111,108,108,105,115,105,111,110, 82,101,115,
    112,111,110,115,101, 65,110,105,109, 97,116,111,114, 40,115,
    101,108,102, 44, 32,119,111,114,108,100, 44, 32,115, 99,101,
    110,101, 78,111,100,101, 44, 32,101,108,108,105,112,115,111,
    105,100, 82, 97,100,105,117,115, 44, 32,103,114, 97,118,105,
    116,121, 80,101,114, 83,101, 99,111,110,100, 44, 32,101,108,
    108,105,112,115,111,105,100, 84,114, 97,110,115,108, 97,116,
    105,111,110, 44, 32,115,108,105,100,105,110,103, 86, 97,108,
    117,101, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 66,105,108,108, 98,111, 97,114,100, 83, 99,101,
    110,101, 78,111,100,101, 32, 61, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,
    101,114, 46, 97,100,100, 66,105,108,108, 98,111, 97,114,100,
     83, 99,101,110,101, 78,111,100,101, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 77, 97,110, 97,103,101,114, 58, 97,100,
    100, 66,105,108,108, 98,111, 97,114,100, 83, 99,101,110,101,
     78,111,100,101, 40,112, 97,114,101,110,116, 44, 32,115,105,
    122,101, 44, 32,112,111,115,105,116,105,111,110, 44, 32,105,
    100, 41, 10,112, 97,114,101,110,116, 32, 61, 32,112, 97,114,
    101,110,116, 32,111,114, 32,110,105,108, 10,115,105,122,101,
     32, 61, 32,115,105,122,101, 32,111,114, 32,105,114,114, 46,
     99,111,114,101, 46,100,105,109,101,110,115,105,111,110, 50,
    100, 40, 49, 48, 44, 49, 48, 41, 10,112,111,115,105,116,105,
    111,110, 32, 61, 32,112,111,115,105,116,105,111,110, 32,111,
    114, 32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,
    111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,105,100, 32,
     61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,101,116,117,
    114,110, 32, 95, 97,100,100, 66,105,108,108, 98,111, 97,114,
    100, 83, 99,101,110,101, 78,111,100,101, 40,115,101,108,102,
     44, 32,112, 97,114,101,110,116, 44, 32,115,105,122,101, 44,
     32,112,111,115,105,116,105,111,110, 44, 32,105,100, 32, 41,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100,
     72,105,108,108, 80,108, 97,110,101, 77,101,115,104, 32, 61,
     32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,
    110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100, 72,105,
    108,108, 80,108, 97,110,101, 77,101,115,104, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,101,
     46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114, 58,
     97,100,100, 72,105,108,108, 80,108, 97,110,101, 77,101,115,
    104, 40,110, 97,109,101, 44, 32,116,105,108,101, 83,105,122,
    101, 44, 32,116,105,108,101, 67,111,117,110,116, 44, 32,109,
     97,116,101,114,105, 97,108, 44, 32,104,105,108,108, 72,101,
    105,103,104,116, 44, 32, 99,111,117,110,116, 72,105,108,108,
    115, 44, 32,116,101,120,116,117,114,101, 82,101,112,101, 97,
    116, 67,111,117,110,116, 41, 10,116,105,108,101, 83,105,122,
    101, 32, 61, 32,116,105,108,101, 83,105,122,101, 32,111,114,
     32,105,114,114, 46, 99,111,114,101, 46,100,105,109,101,110,
    115,105,111,110, 50,100, 40, 48, 44, 48, 41, 10,116,105,108,
    101, 67,111,117,110,116, 32, 61, 32,116,105,108,101, 67,111,
    117,110,116, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,100,105,109,101,110,115,105,111,110, 50,100,115, 51, 50,
     40, 48, 44, 48, 41, 10,105,102, 32,116,111,108,117, 97, 46,
    116,121,112,101, 40,116,105,108,101, 67,111,117,110,116, 41,
     32, 61, 61, 32, 34,105,114,114, 58, 58, 99,111,114,101, 58,
     58,100,105,109,101,110,115,105,111,110, 50,100, 60,102, 51,
     50, 62, 34, 32,116,104,101,110, 10,116,105,108,101, 67,111,
    117,110,116, 32, 61, 32,105,114,114, 46, 99,111,114,101, 46,
    100,105,109,101,110,115,105,111,110, 50,100,115, 51, 50, 40,
    116,105,108,101, 67,111,117,110,116, 46, 87,105,100,116,104,
     44, 32,116,105,108,101, 67,111,117,110,116, 46, 72,101,105,
    103,104,116, 41, 10,101,110,100, 10,109, 97,116,101,114, 97,
    108, 32, 61, 32,109, 97,116,101,114,105, 97,108, 32,111,114,
     32,105,114,114, 46,118,105,100,101,111, 46, 83, 77, 97,116,
    101,114,105, 97,108, 40, 41, 10,104,105,108,108, 72,101,105,
    103,104,116, 32, 61, 32,104,105,108,108, 72,101,105,103,104,
    116, 32,111,114, 32, 48, 10, 99,111,117,110,116, 72,105,108,
    108,115, 32, 61, 32, 99,111,117,110,116, 72,105,108,108,115,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,100,105,
    109,101,110,115,105,111,110, 50,100, 40, 48, 44, 48, 41, 10,
    116,101,120,116,117,114,101, 82,101,112,101, 97,116, 67,111,
    117,110,116, 32, 61, 32,116,101,120,116,117,114,101, 82,101,
    112,101, 97,116, 67,111,117,110,116, 32,111,114, 32,105,114,
    114, 46, 99,111,114,101, 46,100,105,109,101,110,115,105,111,
    110, 50,100, 40, 49, 44, 49, 41, 10,108,111, 99, 97,108, 32,
    110,109, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,
    100, 72,105,108,108, 80,108, 97,110,101, 77,101,115,104, 40,
    115,101,108,102, 44, 32,110,109, 44, 32,116,105,108,101, 83,
    105,122,101, 44, 32,116,105,108,101, 67,111,117,110,116, 44,
     32,109, 97,116,101,114,105, 97,108, 44, 32,104,105,108,108,
     72,101,105,103,104,116, 44, 32, 99,111,117,110,116, 72,105,
    108,108,115, 44, 32,116,101,120,116,117,114,101, 82,101,112,
    101, 97,116, 67,111,117,110,116, 32, 41, 10,105,114,114, 46,
     99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,110,109, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 87, 97,116,101,114, 83,117,114,102, 97, 99,101,
     83, 99,101,110,101, 78,111,100,101, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 46, 97,100,100, 87, 97,116,101,114, 83,
    117,114,102, 97, 99,101, 83, 99,101,110,101, 78,111,100,101,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115,
     99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,
    103,101,114, 58, 97,100,100, 87, 97,116,101,114, 83,117,114,
    102, 97, 99,101, 83, 99,101,110,101, 78,111,100,101, 40,109,
    101,115,104, 44, 32,119, 97,118,101, 72,101,105,103,104,116,
     44, 32,119, 97,118,101, 83,112,101,101,100, 44, 32,119, 97,
    118,101, 76,101,110,103,116,104, 44, 32,112, 97,114,101,110,
    116, 44, 32,105,100, 44, 32,112,111,115,105,116,105,111,110,
     44, 32,114,111,116, 97,116,105,111,110, 44, 32,115, 99, 97,
    108,101, 41, 10,119, 97,118,101, 72,101,105,103,104,116, 32,
     61, 32,119, 97,118,101, 72,101,105,103,104,116, 32,111,114,
     32, 50, 10,119, 97,118,101, 83,112,101,101,100, 32, 61, 32,
    119, 97,118,101, 83,112,101,101,100, 32,111,114, 32, 51, 48,
     48, 10,119, 97,118,101, 76,101,110,103,116,104, 32, 61, 32,
    119, 97,118,101, 76,101,110,103,116,104, 32,111,114, 32, 49,
     48, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49,
     10,112,111,115,105,116,105,111,110, 32, 61, 32,112,111,115,
    105,116,105,111,110, 32,111,114, 32,105,114,114, 46, 99,111,
    114,101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48,
     44, 48, 41, 10,114,111,116, 97,116,105,111,110, 32, 61, 32,
    114,111,116, 97,116,105,111,110, 32,111,114, 32,105,114,114,
     46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,100, 40,
     48, 44, 48, 44, 48, 41, 10,115, 99, 97,108,101, 32, 61, 32,
    115, 99, 97,108,101, 32,111,114, 32,105,114,114, 46, 99,111,
    114,101, 46,118,101, 99,116,111,114, 51,100, 40, 49, 44, 49,
     44, 49, 41, 10,114,101,116,117,114,110, 32, 95, 97,100,100,
     87, 97,116,101,114, 83,117,114,102, 97, 99,101, 83, 99,101,
    110,101, 78,111,100,101, 40,115,101,108,102, 44, 32,109,101,
    115,104, 44, 32,119, 97,118,101, 72,101,105,103,104,116, 44,
     32,119, 97,118,101, 83,112,101,101,100, 44, 32,119, 97,118,
    101, 76,101,110,103,116,104, 44, 32,112, 97,114,101,110,116,
     44, 32,105,100, 44, 32,112,111,115,105,116,105,111,110, 44,
     32,114,111,116, 97,116,105,111,110, 44, 32,115, 99, 97,108,
    101, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,
    100,100, 80, 97,114,116,105, 99,108,101, 83,121,115,116,101,
    109, 83, 99,101,110,101, 78,111,100,101, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77,
     97,110, 97,103,101,114, 46, 97,100,100, 80, 97,114,116,105,
     99,108,101, 83,121,115,116,101,109, 83, 99,101,110,101, 78,
    111,100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77,
     97,110, 97,103,101,114, 58, 97,100,100, 80, 97,114,116,105,
     99,108,101, 83,121,115,116,101,109, 83, 99,101,110,101, 78,
    111,100,101, 40,119,105,116,104, 68,101,102, 97,117,108,116,
     69,109,105,116,116,101,114, 44, 32,112, 97,114,101,110,116,
     44, 32,105,100, 44, 32,112,111,115,105,116,105,111,110, 44,
     32,114,111,116, 97,116,105,111,110, 44, 32,115, 99, 97,108,
    101, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45,
     49, 10,112,111,115,105,116,105,111,110, 32, 61, 32,112,111,
    115,105,116,105,111,110, 32,111,114, 32,105,114,114, 46, 99,
    111,114,101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44,
     48, 44, 48, 41, 10,114,111,116, 97,116,105,111,110, 32, 61,
     32,114,111,116, 97,116,105,111,110, 32,111,114, 32,105,114,
    114, 46, 99,111,114,101, 46,118,101, 99,116,111,114, 51,100,
     40, 48, 44, 48, 44, 48, 41, 10,115, 99, 97,108,101, 32, 61,
     32,115, 99, 97,108,101, 32,111,114, 32,105,114,114, 46, 99,
    111,114,101, 46,118,101, 99,116,111,114, 51,100, 40, 49, 44,
     49, 44, 49, 41, 10,114,101,116,117,114,110, 32, 95, 97,100,
    100, 80, 97,114,116,105, 99,108,101, 83,121,115,116,101,109,
     83, 99,101,110,101, 78,111,100,101, 40,115,101,108,102, 44,
     32,119,105,116,104, 68,101,102, 97,117,108,116, 69,109,105,
    116,116,101,114, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 44, 32,112,111,115,105,116,105,111,110, 44, 32,114,111,
    116, 97,116,105,111,110, 44, 32,115, 99, 97,108,101, 41, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 83,
    107,121, 66,111,120, 83, 99,101,110,101, 78,111,100,101, 32,
     61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,
    101,110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100, 83,
    107,121, 66,111,120, 83, 99,101,110,101, 78,111,100,101, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,
    101,114, 58, 97,100,100, 83,107,121, 66,111,120, 83, 99,101,
    110,101, 78,111,100,101, 40,116,111,112, 44, 32, 98,111,116,
    116,111,109, 44, 32,108,101,102,116, 44, 32,114,105,103,104,
    116, 44, 32,102,114,111,110,116, 44, 32, 98, 97, 99,107, 44,
     32,112, 97,114,101,110,116, 44, 32,105,100, 41, 10,112, 97,
    114,101,110,116, 32, 61, 32,112, 97,114,101,110,116, 32,111,
    114, 32,110,105,108, 10,105,100, 32, 61, 32,105,100, 32,111,
    114, 32, 45, 49, 10,114,101,116,117,114,110, 32, 95, 97,100,
    100, 83,107,121, 66,111,120, 83, 99,101,110,101, 78,111,100,
    101, 40,115,101,108,102, 44, 32,116,111,112, 44, 32, 98,111,
    116,116,111,109, 44, 32,108,101,102,116, 44, 32,114,105,103,
    104,116, 44, 32,102,114,111,110,116, 44, 32, 98, 97, 99,107,
     44, 32,112, 97,114,101,110,116, 44, 32,105,100, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 83,107,
    121, 68,111,109,101, 83, 99,101,110,101, 78,111,100,101, 32,
     61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,
    101,110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100, 83,
    107,121, 68,111,109,101, 83, 99,101,110,101, 78,111,100,101,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115,
     99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,
    103,101,114, 58, 97,100,100, 83,107,121, 68,111,109,101, 83,
     99,101,110,101, 78,111,100,101, 40,116,101,120,116,117,114,
    101, 44, 32,104,111,114,105, 82,101,115, 44, 32,118,101,114,
    116, 82,101,115, 44, 32,116,101,120,116,117,114,101, 80,101,
    114, 99,101,110,116, 97,103,101, 44, 32,115,112,104,101,114,
    101, 80,101,114, 99,101,110,116, 97,103,101, 44, 32,112, 97,
    114,101,110,116, 44, 32,105,100, 41, 10,112, 97,114,101,110,
    116, 32, 61, 32,112, 97,114,101,110,116, 32,111,114, 32,110,
    105,108, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45,
     49, 10,114,101,116,117,114,110, 32, 95, 97,100,100, 83,107,
    121, 68,111,109,101, 83, 99,101,110,101, 78,111,100,101, 40,
    115,101,108,102, 44, 32,116,101,120,116,117,114,101, 44, 32,
    104,111,114,105, 82,101,115, 44, 32,118,101,114,116, 82,101,
    115, 44, 32,116,101,120,116,117,114,101, 80,101,114, 99,101,
    110,116, 97,103,101, 44, 32,115,112,104,101,114,101, 80,101,
    114, 99,101,110,116, 97,103,101, 44, 32,112, 97,114,101,110,
    116, 44, 32,105,100, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95, 97,100,100, 67, 97,109,101,114, 97, 83, 99,101,
    110,101, 78,111,100,101, 77, 97,121, 97, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77,
     97,110, 97,103,101,114, 46, 97,100,100, 67, 97,109,101,114,
     97, 83, 99,101,110,101, 78,111,100,101, 77, 97,121, 97, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,
    101,114, 58, 97,100,100, 67, 97,109,101,114, 97, 83, 99,101,
    110,101, 78,111,100,101, 77, 97,121, 97, 40,112, 97,114,101,
    110,116, 44, 32,114,111,116, 97,116,101, 83,112,101,101,100,
     44, 32,122,111,111,109, 83,112,101,101,100, 44, 32,116,114,
     97,110,115,108, 97,116,105,111,110, 83,112,101,101,100, 44,
     32,105,100, 41, 10,112, 97,114,101,110,116, 32, 61, 32,112,
     97,114,101,110,116, 32,111,114, 32,110,105,108, 10,114,111,
    116, 97,116,101, 83,112,101,101,100, 32, 61, 32,114,111,116,
     97,116,101, 83,112,101,101,100, 32,111,114, 32, 45, 49, 53,
     48, 48, 10,122,111,111,109, 83,112,101,101,100, 32, 61, 32,
    122,111,111,109, 83,112,101,101,100, 32,111,114, 32, 50, 48,
     48, 10,116,114, 97,110,115,108, 97,116,105,111,110, 83,112,
    101,101,100, 32, 61, 32,116,114, 97,110,115,108, 97,116,105,
    111,110, 83,112,101,101,100, 32,111,114, 32, 49, 53, 48, 48,
     10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,
    114,101,116,117,114,110, 32, 95, 97,100,100, 67, 97,109,101,
    114, 97, 83, 99,101,110,101, 78,111,100,101, 77, 97,121, 97,
     40,115,101,108,102, 44, 32,112, 97,114,101,110,116, 44, 32,
    114,111,116, 97,116,101, 83,112,101,101,100, 44, 32,122,111,
    111,109, 83,112,101,101,100, 44, 10,116,114, 97,110,115,108,
     97,116,105,111,110, 83,112,101,101,100, 44, 32,105,100, 41,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100,
     84,101,120,116, 83, 99,101,110,101, 78,111,100,101, 32, 61,
     32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,
    110,101, 77, 97,110, 97,103,101,114, 46, 97,100,100, 84,101,
    120,116, 83, 99,101,110,101, 78,111,100,101, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,101,
     46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114, 58,
     97,100,100, 84,101,120,116, 83, 99,101,110,101, 78,111,100,
    101, 40,102,111,110,116, 44, 32,116,101,120,116, 44, 32, 99,
    111,108,111,114, 44, 32,112, 97,114,101,110,116, 44, 32,112,
    111,115,105,116,105,111,110, 44, 32,105,100, 41, 10,112, 97,
    114,101,110,116, 32, 61, 32,112, 97,114,101,110,116, 32,111,
    114, 32,110,105,108, 10,116,101,120,116, 32, 61, 32,116,101,
    120,116, 32,111,114, 32, 34, 34, 10, 99,111,108,111,114, 32,
     61, 32, 99,111,108,111,114, 32,111,114, 32,105,114,114, 46,
    118,105,100,101,111, 46, 83, 67,111,108,111,114, 40, 49, 48,
     48, 44, 50, 53, 53, 44, 50, 53, 53, 44, 50, 53, 53, 41, 10,
    112,111,115,105,116,105,111,110, 32, 61, 32,112,111,115,105,
    116,105,111,110, 32,111,114, 32,105,114,114, 46, 99,111,114,
    101, 46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44,
     48, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45,
     49, 10,108,111, 99, 97,108, 32,116,120,116, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,101,120,116, 41, 10,108,
    111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100,
     84,101,120,116, 83, 99,101,110,101, 78,111,100,101, 40,115,
    101,108,102, 44, 32,102,111,110,116, 44, 32,116,120,116, 44,
     32, 99,111,108,111,114, 44, 32,112, 97,114,101,110,116, 44,
     32,112,111,115,105,116,105,111,110, 44, 32,105,100, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,120,
    116, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 77,101,
    115,104, 83, 99,101,110,101, 78,111,100,101, 32, 61, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101,
     77, 97,110, 97,103,101,114, 46, 97,100,100, 77,101,115,104,
     83, 99,101,110,101, 78,111,100,101, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 77, 97,110, 97,103,101,114, 58, 97,100,
    100, 77,101,115,104, 83, 99,101,110,101, 78,111,100,101, 40,
    109,101,115,104, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 44, 32,112,111,115,105,116,105,111,110, 44, 32,114,111,
    116, 97,116,105,111,110, 44, 32,115, 99, 97,108,101, 44, 32,
     97,100,100, 70,108, 97,103,115, 41, 10,105,100, 32, 61, 32,
    105,100, 32,111,114, 32, 45, 49, 10,112,111,115,105,116,105,
    111,110, 32, 61, 32,112,111,115,105,116,105,111,110, 32,111,
    114, 32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,
    111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,114,111,116,
     97,116,105,111,110, 32, 61, 32,114,111,116, 97,116,105,111,
    110, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,118,
    101, 99,116,111,114, 51,100, 40, 48, 44, 48, 44, 48, 41, 10,
    115, 99, 97,108,101, 32, 61, 32,115, 99, 97,108,101, 32,111,
    114, 32,105,114,114, 46, 99,111,114,101, 46,118,101, 99,116,
    111,114, 51,100, 40, 49, 44, 49, 44, 49, 41, 10, 97,100,100,
     70,108, 97,103,115, 32, 61, 32, 97,100,100, 70,108, 97,103,
    115, 32,111,114, 32,102, 97,108,115,101, 10,114,101,116,117,
    114,110, 32, 95, 97,100,100, 77,101,115,104, 83, 99,101,110,
    101, 78,111,100,101, 40,115,101,108,102, 44, 32,109,101,115,
    104, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 44, 32,
    112,111,115,105,116,105,111,110, 44, 32,114,111,116, 97,116,
    105,111,110, 44, 32,115, 99, 97,108,101, 44, 32,102, 97,108,
    115,101, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
    114,101,103,105,115,116,101,114, 78,111,100,101, 70,111,114,
     82,101,110,100,101,114,105,110,103, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 46,114,101,103,105,115,116,101,114, 78,
    111,100,101, 70,111,114, 82,101,110,100,101,114,105,110,103,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115,
     99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,
    103,101,114, 58,114,101,103,105,115,116,101,114, 78,111,100,
    101, 70,111,114, 82,101,110,100,101,114,105,110,103, 40,110,
    111,100,101, 44, 32,112, 97,115,115, 41, 10,112, 97,115,115,
     32, 61, 32,112, 97,115,115, 32,111,114, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 69, 83, 78, 82, 80, 95, 65, 85, 84,
     79, 77, 65, 84, 73, 67, 10,114,101,116,117,114,110, 32, 95,
    114,101,103,105,115,116,101,114, 78,111,100,101, 70,111,114,
     82,101,110,100,101,114,105,110,103, 40,115,101,108,102, 44,
     32,110,111,100,101, 44, 32,112, 97,115,115, 41, 10,101,110,
    100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,101,
     70,111,108,108,111,119, 83,112,108,105,110,101, 65,110,105,
    109, 97,116,111,114, 32, 61, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,
    114, 46, 99,114,101, 97,116,101, 70,111,108,108,111,119, 83,
    112,108,105,110,101, 65,110,105,109, 97,116,111,114, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,
    114, 58, 99,114,101, 97,116,101, 70,111,108,108,111,119, 83,
    112,108,105,110,101, 65,110,105,109, 97,116,111,114, 40,115,
    116, 97,114,116, 84,105,109,101, 44, 32,112,111,105,110,116,
    115, 44, 32,115,112,101,101,100, 44, 32,116,105,103,104,116,
    110,101,115,115, 41, 10,115,112,101,101,100, 32, 61, 32,115,
    112,101,101,100, 32,111,114, 32, 49, 46, 48, 10,116,105,103,
    104,116,110,101,115,115, 32, 61, 32,116,105,103,104,116,110,
    101,115,115, 32,111,114, 32, 48, 46, 53, 10,114,101,116,117,
    114,110, 32, 95, 99,114,101, 97,116,101, 70,111,108,108,111,
    119, 83,112,108,105,110,101, 65,110,105,109, 97,116,111,114,
     40,115,101,108,102, 44, 32,115,116, 97,114,116, 84,105,109,
    101, 44, 32,112,111,105,110,116,115, 44, 32,115,112,101,101,
    100, 44, 32,116,105,103,104,116,110,101,115,115, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,
    101, 84,101,120,116,117,114,101, 65,110,105,109, 97,116,111,
    114, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 77, 97,110, 97,103,101,114, 46, 99,114,
    101, 97,116,101, 84,101,120,116,117,114,101, 65,110,105,109,
     97,116,111,114, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101,
     77, 97,110, 97,103,101,114, 58, 99,114,101, 97,116,101, 84,
    101,120,116,117,114,101, 65,110,105,109, 97,116,111,114, 40,
    116,101,120,116,117,114,101,115, 44, 32,116,105,109,101, 80,
    101,114, 70,114, 97,109,101, 44, 32,108,111,111,112, 41, 10,
    105,102, 32,110,111,116, 32,108,111,111,112, 32,116,104,101,
    110, 32,108,111,111,112, 32, 61, 32,116,114,117,101, 32,101,
    110,100, 10,114,101,116,117,114,110, 32, 95, 99,114,101, 97,
    116,101, 84,101,120,116,117,114,101, 65,110,105,109, 97,116,
    111,114, 40,115,101,108,102, 44, 32,116,101,120,116,117,114,
    101,115, 44, 32,116,105,109,101, 80,101,114, 70,114, 97,109,
    101, 44, 32,108,111,111,112, 41, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95,103,101,116, 83, 99,101,110,101, 78,111,
    100,101, 84,121,112,101, 78, 97,109,101, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77,
     97,110, 97,103,101,114, 46,103,101,116, 83, 99,101,110,101,
     78,111,100,101, 84,121,112,101, 78, 97,109,101, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,101,114,
     58,103,101,116, 83, 99,101,110,101, 78,111,100,101, 84,121,
    112,101, 78, 97,109,101, 40,116, 41, 10,114,101,116,117,114,
    110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40, 95,103,101,116, 83, 99,101,110,101, 78,111,100,101,
     84,121,112,101, 78, 97,109,101, 40,115,101,108,102, 44, 32,
    116, 41, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
    115, 97,118,101, 83, 99,101,110,101, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,
    110, 97,103,101,114, 46,115, 97,118,101, 83, 99,101,110,101,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115,
     99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,
    103,101,114, 58,115, 97,118,101, 83, 99,101,110,101, 40,102,
     44, 32,117,115,101,114, 68, 97,116, 97, 83,101,114,105, 97,
    108,105,122,101,114, 41, 10,105,102, 32,116,121,112,101, 40,
    102, 41, 32, 61, 61, 32, 34,115,116,114,105,110,103, 34, 32,
    116,104,101,110, 10,108,111, 99, 97,108, 32,102,105,108,101,
    110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95, 99, 56, 95,112,116,114, 40,102, 41, 10,108,
    111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,115, 97,118,
    101, 83, 99,101,110,101, 40,115,101,108,102, 44, 32,102,105,
    108,101,110, 97,109,101, 44, 32,117,115,101,114, 68, 97,116,
     97, 83,101,114,105, 97,108,105,122,101,114, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99,
     56, 95,112,116,114, 40,102,105,108,101,110, 97,109,101, 41,
     10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,
     10,114,101,116,117,114,110, 32, 95,115, 97,118,101, 83, 99,
    101,110,101, 40,115,101,108,102, 44, 32,102, 44, 32,117,115,
    101,114, 68, 97,116, 97, 83,101,114,105, 97,108,105,122,101,
    114, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,108,
    111, 97,100, 83, 99,101,110,101, 32, 61, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110,
     97,103,101,114, 46,108,111, 97,100, 83, 99,101,110,101, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 73, 83, 99,101,110,101, 77, 97,110, 97,103,
    101,114, 58,115, 97,118,101, 83, 99,101,110,101, 40,102, 44,
     32,117,115,101,114, 68, 97,116, 97, 83,101,114,105, 97,108,
    105,122,101,114, 41, 10,105,102, 32,116,121,112,101, 40,102,
     41, 32, 61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,
    104,101,110, 10,108,111, 99, 97,108, 32,102,105,108,101,110,
     97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,
    116,111, 95, 99, 56, 95,112,116,114, 40,102, 41, 10,108,111,
     99, 97,108, 32,114,101,116, 32, 61, 32, 95,108,111, 97,100,
     83, 99,101,110,101, 40,115,101,108,102, 44, 32,102,105,108,
    101,110, 97,109,101, 44, 32,117,115,101,114, 68, 97,116, 97,
     83,101,114,105, 97,108,105,122,101,114, 41, 10,105,114,114,
     46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99, 56,
     95,112,116,114, 40,102,105,108,101,110, 97,109,101, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    114,101,116,117,114,110, 32, 95,108,111, 97,100, 83, 99,101,
    110,101, 40,115,101,108,102, 44, 32,102, 44, 32,117,115,101,
    114, 68, 97,116, 97, 83,101,114,105, 97,108,105,122,101,114,
     41, 10,101,110,100, 10,105,114,114, 46,115, 99,101,110,101,
     46, 67, 79, 76, 76, 65, 68, 65, 95, 67, 82, 69, 65, 84, 69,
     95, 83, 67, 69, 78, 69, 95, 73, 78, 83, 84, 65, 78, 67, 69,
     83, 32, 61, 32, 34, 67, 79, 76, 76, 65, 68, 65, 95, 67,114,
    101, 97,116,101, 83, 99,101,110,101, 73,110,115,116, 97,110,
     99,101,115, 34,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 29");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,115, 99,101,110,101, 46, 73, 82, 82, 95,
     83, 67, 69, 78, 69, 95, 77, 65, 78, 65, 71, 69, 82, 95, 73,
     83, 95, 69, 68, 73, 84, 79, 82, 32, 61, 32, 34, 73, 82, 82,
     95, 69,100,105,116,111,114, 34,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 30");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaISceneNode","irr::scene::IrrLuaISceneNode","irr::scene::ISceneNode",tolua_collect_irr__scene__IrrLuaISceneNode);
    #else
    tolua_cclass(tolua_S,"IrrLuaISceneNode","irr::scene::IrrLuaISceneNode","irr::scene::ISceneNode",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaISceneNode");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaISceneNode_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaISceneNode_delete00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IrrLuaISceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IrrLuaISceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IrrLuaISceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IrrLuaISceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IrrLuaISceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IrrLuaISceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IrrLuaISceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IrrLuaISceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IrrLuaISceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaISceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaISceneNode_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaISceneNode_GetProxy00);
     tolua_function(tolua_S,"get_Name",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Name00);
     tolua_function(tolua_S,"set_Name",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Name00);
     tolua_function(tolua_S,"get_AbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AbsoluteTransformation00);
     tolua_function(tolua_S,"set_AbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AbsoluteTransformation00);
     tolua_function(tolua_S,"get_RelativeTranslation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeTranslation00);
     tolua_function(tolua_S,"set_RelativeTranslation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeTranslation00);
     tolua_function(tolua_S,"get_RelativeRotation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeRotation00);
     tolua_function(tolua_S,"set_RelativeRotation",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeRotation00);
     tolua_function(tolua_S,"get_RelativeScale",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_RelativeScale00);
     tolua_function(tolua_S,"set_RelativeScale",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_RelativeScale00);
     tolua_function(tolua_S,"get_Parent",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Parent00);
     tolua_function(tolua_S,"set_Parent",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Parent00);
     tolua_function(tolua_S,"get_Children",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Children00);
     tolua_function(tolua_S,"set_Children",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Children00);
     tolua_function(tolua_S,"get_Animators",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_Animators00);
     tolua_function(tolua_S,"set_Animators",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_Animators00);
     tolua_function(tolua_S,"get_ID",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_ID00);
     tolua_function(tolua_S,"set_ID",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_ID00);
     tolua_function(tolua_S,"get_SceneManager",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_SceneManager00);
     tolua_function(tolua_S,"set_SceneManager",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_SceneManager00);
     tolua_function(tolua_S,"get_TriangleSelector",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_TriangleSelector00);
     tolua_function(tolua_S,"set_TriangleSelector",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_TriangleSelector00);
     tolua_function(tolua_S,"get_AutomaticCullingEnabled",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_AutomaticCullingEnabled00);
     tolua_function(tolua_S,"set_AutomaticCullingEnabled",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_AutomaticCullingEnabled00);
     tolua_function(tolua_S,"get_DebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_DebugDataVisible00);
     tolua_function(tolua_S,"set_DebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_DebugDataVisible00);
     tolua_function(tolua_S,"get_IsVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_get_IsVisible00);
     tolua_function(tolua_S,"set_IsVisible",tolua_IrrLua_irr_scene_IrrLuaISceneNode_set_IsVisible00);
     tolua_variable(tolua_S,"Name",tolua_get_irr__scene__IrrLuaISceneNode_Name,tolua_set_irr__scene__IrrLuaISceneNode_Name);
     tolua_variable(tolua_S,"AbsoluteTransformation",tolua_get_irr__scene__IrrLuaISceneNode_AbsoluteTransformation,tolua_set_irr__scene__IrrLuaISceneNode_AbsoluteTransformation);
     tolua_variable(tolua_S,"RelativeTranslation",tolua_get_irr__scene__IrrLuaISceneNode_RelativeTranslation,tolua_set_irr__scene__IrrLuaISceneNode_RelativeTranslation);
     tolua_variable(tolua_S,"RelativeRotation",tolua_get_irr__scene__IrrLuaISceneNode_RelativeRotation,tolua_set_irr__scene__IrrLuaISceneNode_RelativeRotation);
     tolua_variable(tolua_S,"RelativeScale",tolua_get_irr__scene__IrrLuaISceneNode_RelativeScale,tolua_set_irr__scene__IrrLuaISceneNode_RelativeScale);
     tolua_variable(tolua_S,"Parent",tolua_get_irr__scene__IrrLuaISceneNode_Parent_ptr,tolua_set_irr__scene__IrrLuaISceneNode_Parent_ptr);
     tolua_variable(tolua_S,"Children",tolua_get_irr__scene__IrrLuaISceneNode_Children,tolua_set_irr__scene__IrrLuaISceneNode_Children);
     tolua_variable(tolua_S,"Animators",tolua_get_irr__scene__IrrLuaISceneNode_Animators,tolua_set_irr__scene__IrrLuaISceneNode_Animators);
     tolua_variable(tolua_S,"ID",tolua_get_irr__scene__IrrLuaISceneNode_ID,tolua_set_irr__scene__IrrLuaISceneNode_ID);
     tolua_variable(tolua_S,"SceneManager",tolua_get_irr__scene__IrrLuaISceneNode_SceneManager_ptr,tolua_set_irr__scene__IrrLuaISceneNode_SceneManager_ptr);
     tolua_variable(tolua_S,"TriangleSelector",tolua_get_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr,tolua_set_irr__scene__IrrLuaISceneNode_TriangleSelector_ptr);
     tolua_variable(tolua_S,"AutomaticCullingEnabled",tolua_get_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled,tolua_set_irr__scene__IrrLuaISceneNode_AutomaticCullingEnabled);
     tolua_variable(tolua_S,"DebugDataVisible",tolua_get_irr__scene__IrrLuaISceneNode_DebugDataVisible,tolua_set_irr__scene__IrrLuaISceneNode_DebugDataVisible);
     tolua_variable(tolua_S,"IsVisible",tolua_get_irr__scene__IrrLuaISceneNode_IsVisible,tolua_set_irr__scene__IrrLuaISceneNode_IsVisible);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,115, 99,101,110,101,110,111,100,
    101,112,114,111,120,121, 32, 61, 32,123,125, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,101,
     46, 99,114,101, 97,116,101, 73, 83, 99,101,110,101, 78,111,
    100,101, 40,112, 97,114,101,110,116, 44, 32,109,103,114, 44,
     32,105,100, 44, 32,100,101,102, 41, 10,108,111, 99, 97,108,
     32,111, 32, 61, 32,123,125, 10,102,111,114, 32,105, 44,118,
     32,105,110, 32,112, 97,105,114,115, 40,100,101,102, 41, 32,
    100,111, 32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,100,
     10,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117,
     97, 73, 83, 99,101,110,101, 78,111,100,101, 58,110,101,119,
     40,112, 97,114,101,110,116, 44, 32,109,103,114, 44, 32,105,
    100, 41, 10,116,111,108,117, 97, 46,105,110,104,101,114,105,
    116, 40,111, 44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 41, 10,116,111,108,117, 97, 46,116, 97,107,101,111,119,
    110,101,114,115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,
    105,110,100,101,120, 32, 61, 32,102,117,110, 99,116,105,111,
    110, 32, 40,116, 44, 32,107, 41, 32,114,101,116,117,114,110,
     32,114, 97,119,103,101,116, 40,116, 44, 32, 34, 95, 95, 99,
     95, 99,108, 97,115,115, 34, 41, 91,107, 93, 32,101,110,100,
     10,115,101,116,109,101,116, 97,116, 97, 98,108,101, 40,111,
     44, 32,111, 41, 10,105,114,114, 46, 95, 95,115, 99,101,110,
    101,110,111,100,101,112,114,111,120,121, 91,111, 58, 71,101,
    116, 80,114,111,120,121, 40, 41, 93, 32, 61, 32,111, 10,114,
    101,116,117,114,110, 32,111, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95,103,101,116, 78, 97,109,101, 32, 61, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97,
     73, 83, 99,101,110,101, 78,111,100,101, 46,103,101,116, 78,
     97,109,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97, 73,
     83, 99,101,110,101, 78,111,100,101, 58,103,101,116, 78, 97,
    109,101, 40, 41, 10,114,101,116,117,114,110, 32,105,114,114,
     46, 99, 97,115,116, 46, 99, 56, 95,112,116,114, 95,116,111,
     95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,
    116, 78, 97,109,101, 40,115,101,108,102, 41, 41, 10,101,110,
    100, 10,108,111, 99, 97,108, 32, 95,115,101,116, 78, 97,109,
    101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
    114,114, 76,117, 97, 73, 83, 99,101,110,101, 78,111,100,101,
     46,115,101,116, 78, 97,109,101, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,114,
    114, 76,117, 97, 73, 83, 99,101,110,101, 78,111,100,101, 58,
    115,101,116, 78, 97,109,101, 40,110, 41, 10,108,111, 99, 97,
    108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,110, 41,
     10, 95,115,101,116, 78, 97,109,101, 40,115,101,108,102, 44,
     32,110, 97,109,101, 41, 10,105,114,114, 46, 99, 97,115,116,
     46,100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,
    110, 97,109,101, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 31");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_function(tolua_S,"IrrLuaAddCameraSceneNodeFPS",tolua_IrrLua_irr_scene_IrrLuaAddCameraSceneNodeFPS00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ISceneCollisionManager","irr::scene::ISceneCollisionManager","irr::IUnknown",tolua_collect_irr__scene__ISceneCollisionManager);
    #else
    tolua_cclass(tolua_S,"ISceneCollisionManager","irr::scene::ISceneCollisionManager","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ISceneCollisionManager");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ISceneCollisionManager_delete00);
     tolua_function(tolua_S,"getCollisionPoint",tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionPoint00);
     tolua_function(tolua_S,"getCollisionResultPosition",tolua_IrrLua_irr_scene_ISceneCollisionManager_getCollisionResultPosition00);
     tolua_function(tolua_S,"getRayFromScreenCoordinates",tolua_IrrLua_irr_scene_ISceneCollisionManager_getRayFromScreenCoordinates00);
     tolua_function(tolua_S,"getScreenCoordinatesFrom3DPosition",tolua_IrrLua_irr_scene_ISceneCollisionManager_getScreenCoordinatesFrom3DPosition00);
     tolua_function(tolua_S,"getSceneNodeFromScreenCoordinatesBB",tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB00);
     tolua_function(tolua_S,"getSceneNodeFromRayBB",tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB00);
     tolua_function(tolua_S,"getSceneNodeFromRayBB",tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromRayBB01);
     tolua_function(tolua_S,"getSceneNodeFromCameraBB",tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB00);
     tolua_function(tolua_S,"getSceneNodeFromCameraBB",tolua_IrrLua_irr_scene_ISceneCollisionManager_getSceneNodeFromCameraBB01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ISceneCollisionManager_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ISceneCollisionManager_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ISceneCollisionManager_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ISceneNode","irr::scene::ISceneNode","irr::io::IAttributeExchangingObject",tolua_collect_irr__scene__ISceneNode);
    #else
    tolua_cclass(tolua_S,"ISceneNode","irr::scene::ISceneNode","irr::io::IAttributeExchangingObject",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ISceneNode");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ISceneNode_delete00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_ISceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_ISceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_ISceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_ISceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_ISceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ISceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_ISceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_ISceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_ISceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_ISceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_ISceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_ISceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_ISceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_ISceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_ISceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_ISceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_ISceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_ISceneNode_addAnimator00);
     tolua_function(tolua_S,"getAnimators",tolua_IrrLua_irr_scene_ISceneNode_getAnimators00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_ISceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_ISceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_ISceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_ISceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_ISceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_ISceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_ISceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_ISceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_ISceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_ISceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_ISceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_ISceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_ISceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_ISceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_ISceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_ISceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_ISceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_ISceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_ISceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_ISceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_ISceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_ISceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_ISceneNode_getParent00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_scene_ISceneNode_getType00);
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes00);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes00);
     tolua_function(tolua_S,"setIsDebugObject",tolua_IrrLua_irr_scene_ISceneNode_setIsDebugObject00);
     tolua_function(tolua_S,"isDebugObject",tolua_IrrLua_irr_scene_ISceneNode_isDebugObject00);
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_scene_ISceneNode_serializeAttributes01);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_scene_ISceneNode_deserializeAttributes01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ISceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ISceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ISceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 78, 97,109,101,
     32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 78,111,100,101, 46,103,101,116, 78, 97,109,
    101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 78,111,100,
    101, 58,103,101,116, 78, 97,109,101, 40, 41, 10,114,101,116,
    117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46, 99, 56,
     95,112,116,114, 95,116,111, 95,115,116,100, 95,115,116,114,
    105,110,103, 40, 95,103,101,116, 78, 97,109,101, 40,115,101,
    108,102, 41, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95,115,101,116, 78, 97,109,101, 32, 61, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 78,111,100,
    101, 46,115,101,116, 78, 97,109,101, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 78,111,100,101, 58,115,101,116, 78, 97,
    109,101, 40,110, 41, 10,108,111, 99, 97,108, 32,110, 97,109,
    101, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111,
     95, 99, 56, 95,112,116,114, 40,110, 41, 10, 95,115,101,116,
     78, 97,109,101, 40,115,101,108,102, 44, 32,110, 97,109,101,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41,
     10,101,110,100, 10,105,114,114, 46,115, 99,101,110,101, 46,
     73, 83, 99,101,110,101, 78,111,100,101, 46, 95, 95,101,113,
     32, 61, 32,110,105,108,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 32");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"ISceneUserDataSerializer","irr::scene::ISceneUserDataSerializer","",NULL);
    tolua_beginmodule(tolua_S,"ISceneUserDataSerializer");
     tolua_function(tolua_S,"OnReadUserData",tolua_IrrLua_irr_scene_ISceneUserDataSerializer_OnReadUserData00);
     tolua_function(tolua_S,"createUserData",tolua_IrrLua_irr_scene_ISceneUserDataSerializer_createUserData00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"ESNT_CUBE",irr::scene::ESNT_CUBE);
    tolua_constant(tolua_S,"ESNT_SPHERE",irr::scene::ESNT_SPHERE);
    tolua_constant(tolua_S,"ESNT_TEXT",irr::scene::ESNT_TEXT);
    tolua_constant(tolua_S,"ESNT_WATER_SURFACE",irr::scene::ESNT_WATER_SURFACE);
    tolua_constant(tolua_S,"ESNT_TERRAIN",irr::scene::ESNT_TERRAIN);
    tolua_constant(tolua_S,"ESNT_SKY_BOX",irr::scene::ESNT_SKY_BOX);
    tolua_constant(tolua_S,"ESNT_SHADOW_VOLUME",irr::scene::ESNT_SHADOW_VOLUME);
    tolua_constant(tolua_S,"ESNT_OCT_TREE",irr::scene::ESNT_OCT_TREE);
    tolua_constant(tolua_S,"ESNT_MESH",irr::scene::ESNT_MESH);
    tolua_constant(tolua_S,"ESNT_LIGHT",irr::scene::ESNT_LIGHT);
    tolua_constant(tolua_S,"ESNT_EMPTY",irr::scene::ESNT_EMPTY);
    tolua_constant(tolua_S,"ESNT_DUMMY_TRANSFORMATION",irr::scene::ESNT_DUMMY_TRANSFORMATION);
    tolua_constant(tolua_S,"ESNT_CAMERA",irr::scene::ESNT_CAMERA);
    tolua_constant(tolua_S,"ESNT_CAMERA_MAYA",irr::scene::ESNT_CAMERA_MAYA);
    tolua_constant(tolua_S,"ESNT_CAMERA_FPS",irr::scene::ESNT_CAMERA_FPS);
    tolua_constant(tolua_S,"ESNT_BILLBOARD",irr::scene::ESNT_BILLBOARD);
    tolua_constant(tolua_S,"ESNT_ANIMATED_MESH",irr::scene::ESNT_ANIMATED_MESH);
    tolua_constant(tolua_S,"ESNT_PARTICLE_SYSTEM",irr::scene::ESNT_PARTICLE_SYSTEM);
    tolua_constant(tolua_S,"ESNT_COUNT",irr::scene::ESNT_COUNT);
    tolua_constant(tolua_S,"ESNT_UNKNOWN",irr::scene::ESNT_UNKNOWN);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IAnimatedMeshSceneNode","irr::scene::IAnimatedMeshSceneNode","irr::scene::ISceneNode",tolua_collect_irr__scene__IAnimatedMeshSceneNode);
    #else
    tolua_cclass(tolua_S,"IAnimatedMeshSceneNode","irr::scene::IAnimatedMeshSceneNode","irr::scene::ISceneNode",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IAnimatedMeshSceneNode");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_delete00);
     tolua_function(tolua_S,"setCurrentFrame",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setCurrentFrame00);
     tolua_function(tolua_S,"setFrameLoop",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setFrameLoop00);
     tolua_function(tolua_S,"setAnimationSpeed",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationSpeed00);
     tolua_function(tolua_S,"addShadowVolumeSceneNode",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addShadowVolumeSceneNode00);
     tolua_function(tolua_S,"getMS3DJointNode",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMS3DJointNode00);
     tolua_function(tolua_S,"getXJointNode",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getXJointNode00);
     tolua_function(tolua_S,"setMD2Animation",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMD2Animation00);
     tolua_function(tolua_S,"getFrameNr",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getFrameNr00);
     tolua_function(tolua_S,"setLoopMode",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setLoopMode00);
     tolua_function(tolua_S,"setAnimationEndCallback",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAnimationEndCallback00);
     tolua_function(tolua_S,"setReadOnlyMaterials",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setReadOnlyMaterials00);
     tolua_function(tolua_S,"isReadOnlyMaterials",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isReadOnlyMaterials00);
     tolua_function(tolua_S,"setMesh",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMesh00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IAnimatedMeshSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
    tolua_cclass(tolua_S,"IAnimationEndCallBack","irr::scene::IAnimationEndCallBack","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"IAnimationEndCallBack");
     tolua_function(tolua_S,"OnAnimationEnd",tolua_IrrLua_irr_scene_IAnimationEndCallBack_OnAnimationEnd00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 83,104, 97,100,
    111,119, 86,111,108,117,109,101, 83, 99,101,110,101, 78,111,
    100,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46,
     73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 83, 99,
    101,110,101, 78,111,100,101, 46, 97,100,100, 83,104, 97,100,
    111,119, 86,111,108,117,109,101, 83, 99,101,110,101, 78,111,
    100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 65,110,105,109, 97,116,101,
    100, 77,101,115,104, 83, 99,101,110,101, 78,111,100,101, 58,
     97,100,100, 83,104, 97,100,111,119, 86,111,108,117,109,101,
     83, 99,101,110,101, 78,111,100,101, 40,105,100, 44, 32,122,
    102, 97,105,108,109,101,116,104,111,100, 44, 32,122,105,110,
    102,105,110,105,116,121, 41, 10,105,100, 32, 61, 32,105,100,
     32,111,114, 32, 45, 49, 10,105,102, 32,122,102, 97,105,108,
    109,101,116,104,111,100, 32, 61, 61, 32,110,105,108, 32,116,
    104,101,110, 32,122,102, 97,105,108,109,101,116,104,111,100,
     32, 61, 32,116,114,117,101, 32,101,110,100, 10,122,105,110,
    102,105,110,105,116,121, 32, 61, 32,122,105,110,102,105,110,
    105,116,121, 32,111,114, 32, 49, 48, 48, 48, 48, 10,114,101,
    116,117,114,110, 32, 95, 97,100,100, 83,104, 97,100,111,119,
     86,111,108,117,109,101, 83, 99,101,110,101, 78,111,100,101,
     40,115,101,108,102, 44, 32,105,100, 44, 32,122,102, 97,105,
    108,109,101,116,104,111,100, 44, 32,122,105,110,102,105,110,
    105,116,121, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 33");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"ESNAT_FLY_CIRCLE",irr::scene::ESNAT_FLY_CIRCLE);
    tolua_constant(tolua_S,"ESNAT_FLY_STRAIGHT",irr::scene::ESNAT_FLY_STRAIGHT);
    tolua_constant(tolua_S,"ESNAT_FOLLOW_SPLINE",irr::scene::ESNAT_FOLLOW_SPLINE);
    tolua_constant(tolua_S,"ESNAT_ROTATION",irr::scene::ESNAT_ROTATION);
    tolua_constant(tolua_S,"ESNAT_TEXTURE",irr::scene::ESNAT_TEXTURE);
    tolua_constant(tolua_S,"ESNAT_DELETION",irr::scene::ESNAT_DELETION);
    tolua_constant(tolua_S,"ESNAT_COLLISION_RESPONSE",irr::scene::ESNAT_COLLISION_RESPONSE);
    tolua_constant(tolua_S,"ESNAT_COUNT",irr::scene::ESNAT_COUNT);
    tolua_constant(tolua_S,"ESNAT_UNKNOWN",irr::scene::ESNAT_UNKNOWN);
    tolua_constant(tolua_S,"ESNAT_FORCE_32_BIT",irr::scene::ESNAT_FORCE_32_BIT);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IrrLuaIAnimationEndCallBack","irr::scene::IrrLuaIAnimationEndCallBack","irr::scene::IAnimationEndCallBack",NULL);
    tolua_beginmodule(tolua_S,"IrrLuaIAnimationEndCallBack");
     tolua_function(tolua_S,"OnAnimationEnd",tolua_IrrLua_irr_scene_IrrLuaIAnimationEndCallBack_OnAnimationEnd00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIAnimatedMeshSceneNode","irr::scene::IrrLuaIAnimatedMeshSceneNode","irr::scene::IAnimatedMeshSceneNode",tolua_collect_irr__scene__IrrLuaIAnimatedMeshSceneNode);
    #else
    tolua_cclass(tolua_S,"IrrLuaIAnimatedMeshSceneNode","irr::scene::IrrLuaIAnimatedMeshSceneNode","irr::scene::IAnimatedMeshSceneNode",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIAnimatedMeshSceneNode");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_delete00);
     tolua_function(tolua_S,"setCurrentFrame",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setCurrentFrame00);
     tolua_function(tolua_S,"setFrameLoop",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setFrameLoop00);
     tolua_function(tolua_S,"setAnimationSpeed",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationSpeed00);
     tolua_function(tolua_S,"addShadowVolumeSceneNode",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addShadowVolumeSceneNode00);
     tolua_function(tolua_S,"getMS3DJointNode",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMS3DJointNode00);
     tolua_function(tolua_S,"getXJointNode",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getXJointNode00);
     tolua_function(tolua_S,"setMD2Animation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMD2Animation00);
     tolua_function(tolua_S,"getFrameNr",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getFrameNr00);
     tolua_function(tolua_S,"setLoopMode",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setLoopMode00);
     tolua_function(tolua_S,"setAnimationEndCallback",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAnimationEndCallback00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_GetProxy00);
     tolua_function(tolua_S,"get_Name",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Name00);
     tolua_function(tolua_S,"set_Name",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Name00);
     tolua_function(tolua_S,"get_AbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AbsoluteTransformation00);
     tolua_function(tolua_S,"set_AbsoluteTransformation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AbsoluteTransformation00);
     tolua_function(tolua_S,"get_RelativeTranslation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeTranslation00);
     tolua_function(tolua_S,"set_RelativeTranslation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeTranslation00);
     tolua_function(tolua_S,"get_RelativeRotation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeRotation00);
     tolua_function(tolua_S,"set_RelativeRotation",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeRotation00);
     tolua_function(tolua_S,"get_RelativeScale",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_RelativeScale00);
     tolua_function(tolua_S,"set_RelativeScale",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_RelativeScale00);
     tolua_function(tolua_S,"get_Parent",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Parent00);
     tolua_function(tolua_S,"set_Parent",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Parent00);
     tolua_function(tolua_S,"get_Children",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Children00);
     tolua_function(tolua_S,"set_Children",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Children00);
     tolua_function(tolua_S,"get_Animators",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_Animators00);
     tolua_function(tolua_S,"set_Animators",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_Animators00);
     tolua_function(tolua_S,"get_ID",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_ID00);
     tolua_function(tolua_S,"set_ID",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_ID00);
     tolua_function(tolua_S,"get_SceneManager",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_SceneManager00);
     tolua_function(tolua_S,"set_SceneManager",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_SceneManager00);
     tolua_function(tolua_S,"get_TriangleSelector",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_TriangleSelector00);
     tolua_function(tolua_S,"set_TriangleSelector",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_TriangleSelector00);
     tolua_function(tolua_S,"get_AutomaticCullingEnabled",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_AutomaticCullingEnabled00);
     tolua_function(tolua_S,"set_AutomaticCullingEnabled",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_AutomaticCullingEnabled00);
     tolua_function(tolua_S,"get_DebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_DebugDataVisible00);
     tolua_function(tolua_S,"set_DebugDataVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_DebugDataVisible00);
     tolua_function(tolua_S,"get_IsVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_get_IsVisible00);
     tolua_function(tolua_S,"set_IsVisible",tolua_IrrLua_irr_scene_IrrLuaIAnimatedMeshSceneNode_set_IsVisible00);
     tolua_variable(tolua_S,"Name",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Name);
     tolua_variable(tolua_S,"AbsoluteTransformation",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AbsoluteTransformation);
     tolua_variable(tolua_S,"RelativeTranslation",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeTranslation);
     tolua_variable(tolua_S,"RelativeRotation",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeRotation);
     tolua_variable(tolua_S,"RelativeScale",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_RelativeScale);
     tolua_variable(tolua_S,"Parent",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Parent_ptr);
     tolua_variable(tolua_S,"Children",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Children);
     tolua_variable(tolua_S,"Animators",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_Animators);
     tolua_variable(tolua_S,"ID",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_ID);
     tolua_variable(tolua_S,"SceneManager",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_SceneManager_ptr);
     tolua_variable(tolua_S,"TriangleSelector",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_TriangleSelector_ptr);
     tolua_variable(tolua_S,"AutomaticCullingEnabled",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_AutomaticCullingEnabled);
     tolua_variable(tolua_S,"DebugDataVisible",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_DebugDataVisible);
     tolua_variable(tolua_S,"IsVisible",tolua_get_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible,tolua_set_irr__scene__IrrLuaIAnimatedMeshSceneNode_IsVisible);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105, 97,110,105,109, 97,116,101,
    100,109,101,115,104,115, 99,101,110,101,110,111,100,101,112,
    114,111,120,121, 32, 61, 32,123,125, 10,108,111, 99, 97,108,
     32, 95, 97,100,100, 83,104, 97,100,111,119, 86,111,108,117,
    109,101, 83, 99,101,110,101, 78,111,100,101, 32, 61, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97,
     73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 83, 99,
    101,110,101, 78,111,100,101, 46, 97,100,100, 83,104, 97,100,
    111,119, 86,111,108,117,109,101, 83, 99,101,110,101, 78,111,
    100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97, 73, 65,
    110,105,109, 97,116,101,100, 77,101,115,104, 83, 99,101,110,
    101, 78,111,100,101, 58, 97,100,100, 83,104, 97,100,111,119,
     86,111,108,117,109,101, 83, 99,101,110,101, 78,111,100,101,
     40,105,100, 44, 32,122,102, 97,105,108,109,101,116,104,111,
    100, 44, 32,122,105,110,102,105,110,105,116,121, 41, 10,105,
    100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,105,102,
     32,122,102, 97,105,108,109,101,116,104,111,100, 32, 61, 61,
     32,110,105,108, 32,116,104,101,110, 32,122,102, 97,105,108,
    109,101,116,104,111,100, 32, 61, 32,116,114,117,101, 32,101,
    110,100, 10,122,105,110,102,105,110,105,116,121, 32, 61, 32,
    122,105,110,102,105,110,105,116,121, 32,111,114, 32, 49, 48,
     48, 48, 48, 10,114,101,116,117,114,110, 32, 95, 97,100,100,
     83,104, 97,100,111,119, 86,111,108,117,109,101, 83, 99,101,
    110,101, 78,111,100,101, 40,115,101,108,102, 44, 32,105,100,
     44, 32,122,102, 97,105,108,109,101,116,104,111,100, 44, 32,
    122,105,110,102,105,110,105,116,121, 41, 10,101,110,100, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,
    101,110,101, 46, 99,114,101, 97,116,101, 73, 65,110,105,109,
     97,116,101,100, 77,101,115,104, 83, 99,101,110,101, 78,111,
    100,101, 40,112, 97,114,101,110,116, 44, 32,109,103,114, 44,
     32,105,100, 44, 32,100,101,102, 41, 10,108,111, 99, 97,108,
     32,111, 32, 61, 32,123,125, 10,102,111,114, 32,105, 44,118,
     32,105,110, 32,112, 97,105,114,115, 40,100,101,102, 41, 32,
    100,111, 32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,100,
     10,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117,
     97, 73, 65,110,105,109, 97,116,101,100, 77,101,115,104, 83,
     99,101,110,101, 78,111,100,101, 58,110,101,119, 40, 41, 10,
    116,111,108,117, 97, 46,105,110,104,101,114,105,116, 40,111,
     44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 41, 10,
    116,111,108,117, 97, 46,116, 97,107,101,111,119,110,101,114,
    115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,110,100,
    101,120, 32, 61, 32,102,117,110, 99,116,105,111,110, 32, 40,
    116, 44, 32,107, 41, 32,114,101,116,117,114,110, 32,114, 97,
    119,103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,108, 97,
    115,115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,101,116,
    109,101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,111, 41,
     10,105,114,114, 46, 95, 95,105, 97,110,105,109, 97,116,101,
    100,109,101,115,104,115, 99,101,110,101,110,111,100,101,112,
    114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 58, 71,101,116, 80,114,111,120,121, 40, 41, 93, 32, 61,
     32,111, 10,114,101,116,117,114,110, 32,111, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 34");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IDummyTransformationSceneNode","irr::scene::IDummyTransformationSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"IDummyTransformationSceneNode");
     tolua_function(tolua_S,"getRelativeTransformationMatrix",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformationMatrix00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IDummyTransformationSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ICameraSceneNode","irr::scene::ICameraSceneNode","irr::scene::ISceneNode",tolua_collect_irr__scene__ICameraSceneNode);
    #else
    tolua_cclass(tolua_S,"ICameraSceneNode","irr::scene::ICameraSceneNode","irr::scene::ISceneNode",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ICameraSceneNode");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ICameraSceneNode_delete00);
     tolua_function(tolua_S,"setProjectionMatrix",tolua_IrrLua_irr_scene_ICameraSceneNode_setProjectionMatrix00);
     tolua_function(tolua_S,"getProjectionMatrix",tolua_IrrLua_irr_scene_ICameraSceneNode_getProjectionMatrix00);
     tolua_function(tolua_S,"getViewMatrix",tolua_IrrLua_irr_scene_ICameraSceneNode_getViewMatrix00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent00);
     tolua_function(tolua_S,"setTarget",tolua_IrrLua_irr_scene_ICameraSceneNode_setTarget00);
     tolua_function(tolua_S,"getTarget",tolua_IrrLua_irr_scene_ICameraSceneNode_getTarget00);
     tolua_function(tolua_S,"setUpVector",tolua_IrrLua_irr_scene_ICameraSceneNode_setUpVector00);
     tolua_function(tolua_S,"getUpVector",tolua_IrrLua_irr_scene_ICameraSceneNode_getUpVector00);
     tolua_function(tolua_S,"getNearValue",tolua_IrrLua_irr_scene_ICameraSceneNode_getNearValue00);
     tolua_function(tolua_S,"getFarValue",tolua_IrrLua_irr_scene_ICameraSceneNode_getFarValue00);
     tolua_function(tolua_S,"getAspectRatio",tolua_IrrLua_irr_scene_ICameraSceneNode_getAspectRatio00);
     tolua_function(tolua_S,"getFOV",tolua_IrrLua_irr_scene_ICameraSceneNode_getFOV00);
     tolua_function(tolua_S,"setNearValue",tolua_IrrLua_irr_scene_ICameraSceneNode_setNearValue00);
     tolua_function(tolua_S,"setFarValue",tolua_IrrLua_irr_scene_ICameraSceneNode_setFarValue00);
     tolua_function(tolua_S,"setAspectRatio",tolua_IrrLua_irr_scene_ICameraSceneNode_setAspectRatio00);
     tolua_function(tolua_S,"setFOV",tolua_IrrLua_irr_scene_ICameraSceneNode_setFOV00);
     tolua_function(tolua_S,"getViewFrustrum",tolua_IrrLua_irr_scene_ICameraSceneNode_getViewFrustrum00);
     tolua_function(tolua_S,"setInputReceiverEnabled",tolua_IrrLua_irr_scene_ICameraSceneNode_setInputReceiverEnabled00);
     tolua_function(tolua_S,"isInputReceiverEnabled",tolua_IrrLua_irr_scene_ICameraSceneNode_isInputReceiverEnabled00);
     tolua_function(tolua_S,"isOrthogonal",tolua_IrrLua_irr_scene_ICameraSceneNode_isOrthogonal00);
     tolua_function(tolua_S,"setIsOrthogonal",tolua_IrrLua_irr_scene_ICameraSceneNode_setIsOrthogonal00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_ICameraSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_ICameraSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_ICameraSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_ICameraSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_ICameraSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ICameraSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_ICameraSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_ICameraSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_ICameraSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_ICameraSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_ICameraSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_ICameraSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_ICameraSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_ICameraSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_ICameraSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_ICameraSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_ICameraSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_ICameraSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_ICameraSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_ICameraSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_ICameraSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_ICameraSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_ICameraSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_ICameraSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_ICameraSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_ICameraSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_ICameraSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_ICameraSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_ICameraSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_ICameraSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_ICameraSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_ICameraSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_ICameraSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_ICameraSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_ICameraSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_ICameraSceneNode_getParent00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_scene_ICameraSceneNode_OnEvent01);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ICameraSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ICameraSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ICameraSceneNode_getDebugName00);
     tolua_variable(tolua_S,"__irr__IEventReceiver__",tolua_get_irr__scene__ICameraSceneNode___irr__IEventReceiver__,NULL);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"ILightSceneNode","irr::scene::ILightSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"ILightSceneNode");
     tolua_function(tolua_S,"getLightData",tolua_IrrLua_irr_scene_ILightSceneNode_getLightData00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_ILightSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_ILightSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_ILightSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_ILightSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_ILightSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ILightSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_ILightSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_ILightSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_ILightSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_ILightSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_ILightSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_ILightSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_ILightSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_ILightSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_ILightSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_ILightSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_ILightSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_ILightSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_ILightSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_ILightSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_ILightSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_ILightSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_ILightSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_ILightSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_ILightSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_ILightSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_ILightSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_ILightSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_ILightSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_ILightSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_ILightSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_ILightSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_ILightSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_ILightSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_ILightSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_ILightSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_ILightSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_ILightSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ILightSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ILightSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ILightSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ISceneNodeAnimator","irr::scene::ISceneNodeAnimator","irr::io::IAttributeExchangingObject",tolua_collect_irr__scene__ISceneNodeAnimator);
    #else
    tolua_cclass(tolua_S,"ISceneNodeAnimator","irr::scene::ISceneNodeAnimator","irr::io::IAttributeExchangingObject",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ISceneNodeAnimator");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ISceneNodeAnimator_delete00);
     tolua_function(tolua_S,"animateNode",tolua_IrrLua_irr_scene_ISceneNodeAnimator_animateNode00);
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_scene_ISceneNodeAnimator_serializeAttributes00);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_scene_ISceneNodeAnimator_deserializeAttributes00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ISceneNodeAnimator_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ISceneNodeAnimator_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ISceneNodeAnimator_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaISceneNodeAnimator","irr::scene::IrrLuaISceneNodeAnimator","irr::scene::ISceneNodeAnimator",tolua_collect_irr__scene__IrrLuaISceneNodeAnimator);
    #else
    tolua_cclass(tolua_S,"IrrLuaISceneNodeAnimator","irr::scene::IrrLuaISceneNodeAnimator","irr::scene::ISceneNodeAnimator",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaISceneNodeAnimator");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_delete00);
     tolua_function(tolua_S,"animateNode",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_animateNode00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimator_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,115, 99,101,110,101,110,111,
    100,101, 97,110,105,109, 97,116,111,114,112,114,111,120,121,
     32, 61, 32,123,125, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 99,114,101, 97,116,
    101, 73, 83, 99,101,110,101, 78,111,100,101, 65,110,105,109,
     97,116,111,114, 40,100,101,102, 41, 10,108,111, 99, 97,108,
     32,111, 32, 61, 32,123,125, 10,102,111,114, 32,105, 44,118,
     32,105,110, 32,112, 97,105,114,115, 40,100,101,102, 41, 32,
    100,111, 32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,100,
     10,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61, 32,
    105,114,114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117,
     97, 73, 83, 99,101,110,101, 78,111,100,101, 65,110,105,109,
     97,116,111,114, 58,110,101,119, 40, 41, 10,116,111,108,117,
     97, 46,105,110,104,101,114,105,116, 40,111, 44, 32,111, 46,
     95, 95, 99, 95, 99,108, 97,115,115, 41, 10,116,111,108,117,
     97, 46,116, 97,107,101,111,119,110,101,114,115,104,105,112,
     40,111, 41, 10,111, 46, 95, 95,105,110,100,101,120, 32, 61,
     32,102,117,110, 99,116,105,111,110, 32, 40,116, 44, 32,107,
     41, 32,114,101,116,117,114,110, 32,114, 97,119,103,101,116,
     40,116, 44, 34, 95, 95, 99, 95, 99,108, 97,115,115, 34, 41,
     91,107, 93, 32,101,110,100, 10,115,101,116,109,101,116, 97,
    116, 97, 98,108,101, 40,111, 44, 32,111, 41, 10,105,114,114,
     46, 95, 95,105,115, 99,101,110,101,110,111,100,101, 97,110,
    105,109, 97,116,111,114,112,114,111,120,121, 91,111, 46, 95,
     95, 99, 95, 99,108, 97,115,115, 58, 71,101,116, 80,114,111,
    120,121, 40, 41, 93, 32, 61, 32,111, 10,114,101,116,117,114,
    110, 32,111, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 35");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimator",tolua_collect_irr__scene__ISceneNodeAnimatorCollisionResponse);
    #else
    tolua_cclass(tolua_S,"ISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimator",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ISceneNodeAnimatorCollisionResponse");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_delete00);
     tolua_function(tolua_S,"isFalling",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_isFalling00);
     tolua_function(tolua_S,"setEllipsoidRadius",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00);
     tolua_function(tolua_S,"getEllipsoidRadius",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00);
     tolua_function(tolua_S,"setGravity",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setGravity00);
     tolua_function(tolua_S,"getGravity",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getGravity00);
     tolua_function(tolua_S,"setEllipsoidTranslation",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00);
     tolua_function(tolua_S,"getEllipsoidTranslation",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00);
     tolua_function(tolua_S,"setWorld",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_setWorld00);
     tolua_function(tolua_S,"getWorld",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getWorld00);
     tolua_function(tolua_S,"animateNode",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_animateNode00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ISceneNodeAnimatorCollisionResponse_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaISceneNodeAnimatorCollisionResponse","irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimatorCollisionResponse",tolua_collect_irr__scene__IrrLuaISceneNodeAnimatorCollisionResponse);
    #else
    tolua_cclass(tolua_S,"IrrLuaISceneNodeAnimatorCollisionResponse","irr::scene::IrrLuaISceneNodeAnimatorCollisionResponse","irr::scene::ISceneNodeAnimatorCollisionResponse",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaISceneNodeAnimatorCollisionResponse");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_delete00);
     tolua_function(tolua_S,"isFalling",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_isFalling00);
     tolua_function(tolua_S,"setEllipsoidRadius",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidRadius00);
     tolua_function(tolua_S,"getEllipsoidRadius",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidRadius00);
     tolua_function(tolua_S,"setGravity",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setGravity00);
     tolua_function(tolua_S,"getGravity",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getGravity00);
     tolua_function(tolua_S,"setEllipsoidTranslation",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation00);
     tolua_function(tolua_S,"getEllipsoidTranslation",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation00);
     tolua_function(tolua_S,"setWorld",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_setWorld00);
     tolua_function(tolua_S,"getWorld",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_getWorld00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaISceneNodeAnimatorCollisionResponse_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,115, 99,101,110,101,110,111,
    100,101, 97,110,105,109, 97,116,111,114, 99,111,108,108,105,
    115,105,111,110,114,101,115,112,111,110,115,101,112,114,111,
    120,121, 32, 61, 32,123,125, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,115, 99,101,110,101, 46, 99,114,101,
     97,116,101, 73, 83, 99,101,110,101, 78,111,100,101, 65,110,
    105,109, 97,116,111,114, 67,111,108,108,105,115,105,111,110,
     82,101,115,112,111,110,115,101, 40,100,101,102, 41, 10,108,
    111, 99, 97,108, 32,111, 32, 61, 32,123,125, 10,102,111,114,
     32,105, 44,118, 32,105,110, 32,112, 97,105,114,115, 40,100,
    101,102, 41, 32,100,111, 32,111, 91,105, 93, 32, 61, 32,118,
     32,101,110,100, 10,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
    114,114, 76,117, 97, 73, 83, 99,101,110,101, 78,111,100,101,
     65,110,105,109, 97,116,111,114, 67,111,108,108,105,115,105,
    111,110, 82,101,115,112,111,110,115,101, 58,110,101,119, 40,
     41, 10,116,111,108,117, 97, 46,105,110,104,101,114,105,116,
     40,111, 44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115,
     41, 10,116,111,108,117, 97, 46,116, 97,107,101,111,119,110,
    101,114,115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,
    110,100,101,120, 32, 61, 32,102,117,110, 99,116,105,111,110,
     32, 40,116, 44, 32,107, 41, 32,114,101,116,117,114,110, 32,
    114, 97,119,103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,
    108, 97,115,115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,
    101,116,109,101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,
    111, 41, 10,105,114,114, 46, 95, 95,105,115, 99,101,110,101,
    110,111,100,101, 97,110,105,109, 97,116,111,114, 99,111,108,
    108,105,115,105,111,110,114,101,115,112,111,110,115,101,112,
    114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,108, 97,115,
    115, 58, 71,101,116, 80,114,111,120,121, 40, 41, 93, 32, 61,
     32,111, 10,114,101,116,117,114,110, 32,111, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 36");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"EPET_POINT",irr::scene::EPET_POINT);
    tolua_constant(tolua_S,"EPET_BOX",irr::scene::EPET_BOX);
    tolua_constant(tolua_S,"EPET_COUNT",irr::scene::EPET_COUNT);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IParticleEmitter","irr::scene::IParticleEmitter","irr::IUnknown",tolua_collect_irr__scene__IParticleEmitter);
    #else
    tolua_cclass(tolua_S,"IParticleEmitter","irr::scene::IParticleEmitter","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IParticleEmitter");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IParticleEmitter_delete00);
     tolua_function(tolua_S,"emitt",tolua_IrrLua_irr_scene_IParticleEmitter_emitt00);
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_scene_IParticleEmitter_serializeAttributes00);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_scene_IParticleEmitter_deserializeAttributes00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_scene_IParticleEmitter_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IParticleEmitter_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IParticleEmitter_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IParticleEmitter_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,115, 99,101,110,101, 46, 80, 97,114,116,
    105, 99,108,101, 69,109,105,116,116,101,114, 84,121,112,101,
     78, 97,109,101,115, 32, 61, 32,123, 32, 34, 80,111,105,110,
    116, 34, 44, 32, 34, 66,111,120, 34, 32,125,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 37");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"EPAT_NONE",irr::scene::EPAT_NONE);
    tolua_constant(tolua_S,"EPAT_FADE_OUT",irr::scene::EPAT_FADE_OUT);
    tolua_constant(tolua_S,"EPAT_GRAVITY",irr::scene::EPAT_GRAVITY);
    tolua_constant(tolua_S,"EPAT_COUNT",irr::scene::EPAT_COUNT);
    tolua_cclass(tolua_S,"IParticleAffector","irr::scene::IParticleAffector","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"IParticleAffector");
     tolua_function(tolua_S,"affect",tolua_IrrLua_irr_scene_IParticleAffector_affect00);
     tolua_function(tolua_S,"serializeAttributes",tolua_IrrLua_irr_scene_IParticleAffector_serializeAttributes00);
     tolua_function(tolua_S,"deserializeAttributes",tolua_IrrLua_irr_scene_IParticleAffector_deserializeAttributes00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_scene_IParticleAffector_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IParticleAffector_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IParticleAffector_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IParticleAffector_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,115, 99,101,110,101, 46, 80, 97,114,116,
    105, 99,108,101, 65,102,102,101, 99,116,111,114, 84,121,112,
    101, 78, 97,109,101,115, 32, 61, 32,123, 34, 78,111,110,101,
     34, 44, 32, 34, 70, 97,100,101,111,117,116, 34, 44, 32, 34,
     71,114, 97,118,105,116,121, 34,125,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 38");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIParticleAffector","irr::scene::IrrLuaIParticleAffector","irr::scene::IParticleAffector",tolua_collect_irr__scene__IrrLuaIParticleAffector);
    #else
    tolua_cclass(tolua_S,"IrrLuaIParticleAffector","irr::scene::IrrLuaIParticleAffector","irr::scene::IParticleAffector",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIParticleAffector");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_delete00);
     tolua_function(tolua_S,"affect",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_affect00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_scene_IrrLuaIParticleAffector_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,112, 97,114,116,105, 99,108,
    101, 97,102,102,101, 99,116,111,114,112,114,111,120,121, 32,
     61, 32,123,125, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,115, 99,101,110,101, 46, 99,114,101, 97,116,101,
     73, 80, 97,114,116,105, 99,108,101, 65,102,102,101, 99,116,
    111,114, 40,100,101,102, 41, 10,108,111, 99, 97,108, 32,111,
     32, 61, 32,123,125, 10,102,111,114, 32,105, 44,118, 32,105,
    110, 32,112, 97,105,114,115, 40,100,101,102, 41, 32,100,111,
     32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,100, 10,111,
     46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73,114,114, 76,117, 97, 73,
     80, 97,114,116,105, 99,108,101, 65,102,102,101, 99,116,111,
    114, 58,110,101,119, 40, 41, 10,116,111,108,117, 97, 46,105,
    110,104,101,114,105,116, 40,111, 44, 32,111, 46, 95, 95, 99,
     95, 99,108, 97,115,115, 41, 10,116,111,108,117, 97, 46,116,
     97,107,101,111,119,110,101,114,115,104,105,112, 40,111, 41,
     10,111, 46, 95, 95,105,110,100,101,120, 32, 61, 32,102,117,
    110, 99,116,105,111,110, 32, 40,116, 44, 32,107, 41, 32,114,
    101,116,117,114,110, 32,114, 97,119,103,101,116, 40,116, 44,
     34, 95, 95, 99, 95, 99,108, 97,115,115, 34, 41, 91,107, 93,
     32,101,110,100, 10,115,101,116,109,101,116, 97,116, 97, 98,
    108,101, 40,111, 44, 32,111, 41, 10,105,114,114, 46, 95, 95,
    105,112, 97,114,116,105, 99,108,101, 97,102,102,101, 99,116,
    111,114,112,114,111,120,121, 91,111, 46, 95, 95, 99, 95, 99,
    108, 97,115,115, 58, 71,101,116, 80,114,111,120,121, 40, 41,
     93, 32, 61, 32,111, 10,114,101,116,117,114,110, 32,111, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 39");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IParticleSystemSceneNode","irr::scene::IParticleSystemSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"IParticleSystemSceneNode");
     tolua_function(tolua_S,"setParticleSize",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticleSize00);
     tolua_function(tolua_S,"setParticlesAreGlobal",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParticlesAreGlobal00);
     tolua_function(tolua_S,"setEmitter",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setEmitter00);
     tolua_function(tolua_S,"addAffector",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAffector00);
     tolua_function(tolua_S,"removeAllAffectors",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAllAffectors00);
     tolua_function(tolua_S,"createPointEmitter",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createPointEmitter00);
     tolua_function(tolua_S,"createBoxEmitter",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createBoxEmitter00);
     tolua_function(tolua_S,"createFadeOutParticleAffector",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createFadeOutParticleAffector00);
     tolua_function(tolua_S,"createGravityAffector",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_createGravityAffector00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IParticleSystemSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,101, 66,
    111,120, 69,109,105,116,116,101,114, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 80, 97,114,116,105, 99,108,
    101, 83,121,115,116,101,109, 83, 99,101,110,101, 78,111,100,
    101, 46, 99,114,101, 97,116,101, 66,111,120, 69,109,105,116,
    116,101,114, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 80, 97,114,116,105, 99,
    108,101, 83,121,115,116,101,109, 83, 99,101,110,101, 78,111,
    100,101, 58, 99,114,101, 97,116,101, 66,111,120, 69,109,105,
    116,116,101,114, 40, 98,111,120, 44, 32,100,105,114,101, 99,
    116,105,111,110, 44, 32,109,105,110, 80, 97,114,116,105, 99,
    108,101,115, 80,101,114, 83,101, 99,111,110,100, 44, 10,109,
     97,120, 80, 97,114,116,105, 99,108,101,115, 80,101,114, 83,
    101, 99,111,110,100, 44, 32,109,105,110, 83,116, 97,114,116,
     67,111,108,111,114, 44, 32,109, 97,120, 83,116, 97,114,116,
     67,111,108,111,114, 44, 10,108,105,102,101, 84,105,109,101,
     77,105,110, 44, 32,108,105,102,101, 84,105,109,101, 77, 97,
    120, 44, 32,109, 97,120, 65,110,103,108,101, 68,101,103,114,
    101,101,115, 41, 10, 98,111,120, 32, 61, 32, 98,111,120, 32,
    111,114, 32,105,114,114, 46, 99,111,114,101, 46, 97, 97, 98,
     98,111,120, 51,100, 40, 45, 49, 48, 44, 50, 56, 44, 45, 49,
     48, 44, 49, 48, 44, 51, 48, 44, 49, 48, 41, 10,100,105,114,
    101, 99,116,105,111,110, 32, 61, 32,100,105,114,101, 99,116,
    105,111,110, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,118,101, 99,116,111,114, 51,100, 40, 48, 44, 48, 46, 51,
     44, 32, 48, 41, 10,109,105,110, 80, 97,114,116,105, 99,108,
    101,115, 80,101,114, 83,101, 99,111,110,100, 32, 61, 32,109,
    105,110, 80, 97,114,116,105, 99,108,101,115, 80,101,114, 83,
    101, 99,111,110,100, 32,111,114, 32, 53, 10,109, 97,120, 80,
     97,114,116,105, 99,108,101,115, 80,101,114, 83,101, 99,111,
    110,100, 32, 61, 32,109, 97,120, 80, 97,114,116,105, 99,108,
    101,115, 80,101,114, 83,101, 99,111,110,100, 32,111,114, 32,
     49, 48, 10,109,105,110, 83,116, 97,114,116, 67,111,108,111,
    114, 32, 61, 32,109,105,110, 83,116, 97,114,116, 67,111,108,
    111,114, 32,111,114, 32,105,114,114, 46,118,105,100,101,111,
     46, 83, 67,111,108,111,114, 40, 50, 53, 53, 44, 48, 44, 48,
     44, 48, 41, 10,109, 97,120, 83,116, 97,114,116, 67,111,108,
    111,114, 32, 61, 32,109, 97,120, 83,116, 97,114,116, 67,111,
    108,111,114, 32,111,114, 32,105,114,114, 46,118,105,100,101,
    111, 46, 83, 67,111,108,111,114, 40, 50, 53, 53, 44, 50, 53,
     53, 44, 50, 53, 53, 44, 50, 53, 53, 41, 10,108,105,102,101,
     84,105,109,101, 77,105,110, 32, 61, 32,108,105,102,101, 84,
    105,109,101, 77,105,110, 32,111,114, 32, 50, 48, 48, 48, 10,
    108,105,102,101, 84,105,109,101, 77, 97,120, 32, 61, 32,108,
    105,102,101, 84,105,109,101, 77, 97,120, 32,111,114, 32, 52,
     48, 48, 48, 10,109, 97,120, 65,110,103,108,101, 68,101,103,
    114,101,101,115, 32, 61, 32,109, 97,120, 65,110,103,108,101,
     68,101,103,114,101,101,115, 32,111,114, 32, 48, 10,114,101,
    116,117,114,110, 32, 95, 99,114,101, 97,116,101, 66,111,120,
     69,109,105,116,116,101,114, 40,115,101,108,102, 44, 32, 98,
    111,120, 44, 32,100,105,114,101, 99,116,105,111,110, 44, 32,
    109,105,110, 80, 97,114,116,105, 99,108,101,115, 80,101,114,
     83,101, 99,111,110,100, 44, 10,109, 97,120, 80, 97,114,116,
    105, 99,108,101,115, 80,101,114, 83,101, 99,111,110,100, 44,
     32,109,105,110, 83,116, 97,114,116, 67,111,108,111,114, 44,
     32,109, 97,120, 83,116, 97,114,116, 67,111,108,111,114, 44,
     10,108,105,102,101, 84,105,109,101, 77,105,110, 44, 32,108,
    105,102,101, 84,105,109,101, 77, 97,120, 44, 10,109, 97,120,
     65,110,103,108,101, 68,101,103,114,101,101,115, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,
    101, 70, 97,100,101, 79,117,116, 80, 97,114,116,105, 99,108,
    101, 65,102,102,101, 99,116,111,114, 32, 61, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 80, 97,114,116,105, 99,108,
    101, 83,121,115,116,101,109, 83, 99,101,110,101, 78,111,100,
    101, 46, 99,114,101, 97,116,101, 70, 97,100,101, 79,117,116,
     80, 97,114,116,105, 99,108,101, 65,102,102,101, 99,116,111,
    114, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    115, 99,101,110,101, 46, 73, 80, 97,114,116,105, 99,108,101,
     83,121,115,116,101,109, 83, 99,101,110,101, 78,111,100,101,
     58, 99,114,101, 97,116,101, 70, 97,100,101, 79,117,116, 80,
     97,114,116,105, 99,108,101, 65,102,102,101, 99,116,111,114,
     40,116, 97,114,103,101,116, 67,111,108,111,114, 44, 32,116,
    105,109,101, 78,101,101,100,101,100, 84,111, 70, 97,100,101,
     79,117,116, 41, 10,116, 97,114,103,101,116, 67,111,108,111,
    114, 32, 61, 32,116, 97,114,103,101,116, 67,111,108,111,114,
     32,111,114, 32,105,114,114, 46,118,105,100,101,111, 46, 83,
     67,111,108,111,114, 40, 48, 44, 48, 44, 48, 44, 48, 41, 10,
    116,105,109,101, 78,101,101,100,101,100, 84,111, 70, 97,100,
    101, 79,117,116, 32, 61, 32, 84,105,109,101, 78,101,101,100,
    101,100, 84,111, 70, 97,100,101, 79,117,116, 32,111,114, 32,
     49, 48, 48, 48, 10,114,101,116,117,114,110, 32, 95, 99,114,
    101, 97,116,101, 70, 97,100,101, 79,117,116, 80, 97,114,116,
    105, 99,108,101, 65,102,102,101, 99,116,111,114, 40,115,101,
    108,102, 44, 32,116, 97,114,103,101,116, 67,111,108,111,114,
     44, 32,116,105,109,101, 78,101,101,100,101,100, 84,111, 70,
     97,100,101, 79,117,116, 41, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95,115,101,116, 80, 97,114,116,105, 99,108,101,
     83,105,122,101, 32, 61, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 80, 97,114,116,105, 99,108,101, 83,121,115,116,
    101,109, 83, 99,101,110,101, 78,111,100,101, 46,115,101,116,
     80, 97,114,116,105, 99,108,101, 83,105,122,101, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,115, 99,101,110,
    101, 46, 73, 80, 97,114,116,105, 99,108,101, 83,121,115,116,
    101,109, 83, 99,101,110,101, 78,111,100,101, 58,115,101,116,
     80, 97,114,116,105, 99,108,101, 83,105,122,101, 40,115,105,
    122,101, 41, 10,114,101,116,117,114,110, 32, 95,115,101,116,
     80, 97,114,116,105, 99,108,101, 83,105,122,101, 40,115,101,
    108,102, 44, 32,115,105,122,101, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 40");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_constant(tolua_S,"ETPS_9",irr::scene::ETPS_9);
    tolua_constant(tolua_S,"ETPS_17",irr::scene::ETPS_17);
    tolua_constant(tolua_S,"ETPS_33",irr::scene::ETPS_33);
    tolua_constant(tolua_S,"ETPS_65",irr::scene::ETPS_65);
    tolua_constant(tolua_S,"ETPS_129",irr::scene::ETPS_129);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"ITerrainSceneNode","irr::scene::ITerrainSceneNode","irr::scene::ISceneNode",tolua_collect_irr__scene__ITerrainSceneNode);
    #else
    tolua_cclass(tolua_S,"ITerrainSceneNode","irr::scene::ITerrainSceneNode","irr::scene::ISceneNode",NULL);
    #endif
    tolua_beginmodule(tolua_S,"ITerrainSceneNode");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_scene_ITerrainSceneNode_delete00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox01);
     tolua_function(tolua_S,"getIndexCount",tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndexCount00);
     tolua_function(tolua_S,"getMesh",tolua_IrrLua_irr_scene_ITerrainSceneNode_getMesh00);
     tolua_function(tolua_S,"getMeshBufferForLOD",tolua_IrrLua_irr_scene_ITerrainSceneNode_getMeshBufferForLOD00);
     tolua_function(tolua_S,"getIndicesForPatch",tolua_IrrLua_irr_scene_ITerrainSceneNode_getIndicesForPatch00);
     tolua_function(tolua_S,"getCurrentLODOfPatches",tolua_IrrLua_irr_scene_ITerrainSceneNode_getCurrentLODOfPatches00);
     tolua_function(tolua_S,"setLODOfPatch",tolua_IrrLua_irr_scene_ITerrainSceneNode_setLODOfPatch00);
     tolua_function(tolua_S,"getTerrainCenter",tolua_IrrLua_irr_scene_ITerrainSceneNode_getTerrainCenter00);
     tolua_function(tolua_S,"setCameraMovementDelta",tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraMovementDelta00);
     tolua_function(tolua_S,"setCameraRotationDelta",tolua_IrrLua_irr_scene_ITerrainSceneNode_setCameraRotationDelta00);
     tolua_function(tolua_S,"setDynamicSelectorUpdate",tolua_IrrLua_irr_scene_ITerrainSceneNode_setDynamicSelectorUpdate00);
     tolua_function(tolua_S,"overrideLODDistance",tolua_IrrLua_irr_scene_ITerrainSceneNode_overrideLODDistance00);
     tolua_function(tolua_S,"scaleTexture",tolua_IrrLua_irr_scene_ITerrainSceneNode_scaleTexture00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_ITerrainSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_ITerrainSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_ITerrainSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_ITerrainSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ITerrainSceneNode_getBoundingBox02);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_ITerrainSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_ITerrainSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_ITerrainSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_ITerrainSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_ITerrainSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_ITerrainSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_ITerrainSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_ITerrainSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_ITerrainSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_ITerrainSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_ITerrainSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_ITerrainSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_ITerrainSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_ITerrainSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_ITerrainSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_ITerrainSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_ITerrainSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_ITerrainSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_ITerrainSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_ITerrainSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_ITerrainSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_ITerrainSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_ITerrainSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_ITerrainSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_ITerrainSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_ITerrainSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_ITerrainSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_ITerrainSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_ITerrainSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ITerrainSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ITerrainSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ITerrainSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"ITextSceneNode","irr::scene::ITextSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"ITextSceneNode");
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_scene_ITextSceneNode_setText00);
     tolua_function(tolua_S,"setTextColor",tolua_IrrLua_irr_scene_ITextSceneNode_setTextColor00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_ITextSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_ITextSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_ITextSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_ITextSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_ITextSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_ITextSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_ITextSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_ITextSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_ITextSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_ITextSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_ITextSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_ITextSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_ITextSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_ITextSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_ITextSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_ITextSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_ITextSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_ITextSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_ITextSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_ITextSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_ITextSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_ITextSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_ITextSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_ITextSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_ITextSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_ITextSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_ITextSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_ITextSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_ITextSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_ITextSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_ITextSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_ITextSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_ITextSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_ITextSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_ITextSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_ITextSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_ITextSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_ITextSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_ITextSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_ITextSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_ITextSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"IBillboardSceneNode","irr::scene::IBillboardSceneNode","irr::scene::ISceneNode",NULL);
    tolua_beginmodule(tolua_S,"IBillboardSceneNode");
     tolua_function(tolua_S,"setSize",tolua_IrrLua_irr_scene_IBillboardSceneNode_setSize00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_scene_IBillboardSceneNode_getSize00);
     tolua_function(tolua_S,"OnPreRender",tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPreRender00);
     tolua_function(tolua_S,"OnPostRender",tolua_IrrLua_irr_scene_IBillboardSceneNode_OnPostRender00);
     tolua_function(tolua_S,"render",tolua_IrrLua_irr_scene_IBillboardSceneNode_render00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_scene_IBillboardSceneNode_getName00);
     tolua_function(tolua_S,"setName",tolua_IrrLua_irr_scene_IBillboardSceneNode_setName00);
     tolua_function(tolua_S,"getBoundingBox",tolua_IrrLua_irr_scene_IBillboardSceneNode_getBoundingBox00);
     tolua_function(tolua_S,"getTransformedBoundingBox",tolua_IrrLua_irr_scene_IBillboardSceneNode_getTransformedBoundingBox00);
     tolua_function(tolua_S,"getAbsoluteTransformation",tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsoluteTransformation00);
     tolua_function(tolua_S,"getRelativeTransformation",tolua_IrrLua_irr_scene_IBillboardSceneNode_getRelativeTransformation00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_scene_IBillboardSceneNode_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_scene_IBillboardSceneNode_setVisible00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_scene_IBillboardSceneNode_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_scene_IBillboardSceneNode_setID00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_scene_IBillboardSceneNode_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_scene_IBillboardSceneNode_removeChild00);
     tolua_function(tolua_S,"removeAll",tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAll00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_scene_IBillboardSceneNode_remove00);
     tolua_function(tolua_S,"addAnimator",tolua_IrrLua_irr_scene_IBillboardSceneNode_addAnimator00);
     tolua_function(tolua_S,"removeAnimator",tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimator00);
     tolua_function(tolua_S,"removeAnimators",tolua_IrrLua_irr_scene_IBillboardSceneNode_removeAnimators00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterial00);
     tolua_function(tolua_S,"getMaterialCount",tolua_IrrLua_irr_scene_IBillboardSceneNode_getMaterialCount00);
     tolua_function(tolua_S,"setMaterialFlag",tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialFlag00);
     tolua_function(tolua_S,"setMaterialTexture",tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialTexture00);
     tolua_function(tolua_S,"setMaterialType",tolua_IrrLua_irr_scene_IBillboardSceneNode_setMaterialType00);
     tolua_function(tolua_S,"getScale",tolua_IrrLua_irr_scene_IBillboardSceneNode_getScale00);
     tolua_function(tolua_S,"setScale",tolua_IrrLua_irr_scene_IBillboardSceneNode_setScale00);
     tolua_function(tolua_S,"getRotation",tolua_IrrLua_irr_scene_IBillboardSceneNode_getRotation00);
     tolua_function(tolua_S,"setRotation",tolua_IrrLua_irr_scene_IBillboardSceneNode_setRotation00);
     tolua_function(tolua_S,"getPosition",tolua_IrrLua_irr_scene_IBillboardSceneNode_getPosition00);
     tolua_function(tolua_S,"setPosition",tolua_IrrLua_irr_scene_IBillboardSceneNode_setPosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_scene_IBillboardSceneNode_getAbsolutePosition00);
     tolua_function(tolua_S,"setAutomaticCulling",tolua_IrrLua_irr_scene_IBillboardSceneNode_setAutomaticCulling00);
     tolua_function(tolua_S,"getAutomaticCulling",tolua_IrrLua_irr_scene_IBillboardSceneNode_getAutomaticCulling00);
     tolua_function(tolua_S,"setDebugDataVisible",tolua_IrrLua_irr_scene_IBillboardSceneNode_setDebugDataVisible00);
     tolua_function(tolua_S,"isDebugDataVisible",tolua_IrrLua_irr_scene_IBillboardSceneNode_isDebugDataVisible00);
     tolua_function(tolua_S,"setParent",tolua_IrrLua_irr_scene_IBillboardSceneNode_setParent00);
     tolua_function(tolua_S,"getTriangleSelector",tolua_IrrLua_irr_scene_IBillboardSceneNode_getTriangleSelector00);
     tolua_function(tolua_S,"setTriangleSelector",tolua_IrrLua_irr_scene_IBillboardSceneNode_setTriangleSelector00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_scene_IBillboardSceneNode_updateAbsolutePosition00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_scene_IBillboardSceneNode_getParent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_scene_IBillboardSceneNode_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_scene_IBillboardSceneNode_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_scene_IBillboardSceneNode_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"ISceneNodeFactory","irr::scene::ISceneNodeFactory","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"ISceneNodeFactory");
     tolua_function(tolua_S,"addSceneNode",tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode00);
     tolua_function(tolua_S,"addSceneNode",tolua_IrrLua_irr_scene_ISceneNodeFactory_addSceneNode01);
     tolua_function(tolua_S,"getCreatableSceneNodeTypeCount",tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreatableSceneNodeTypeCount00);
     tolua_function(tolua_S,"getCreateableSceneNodeType",tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeType00);
     tolua_function(tolua_S,"getCreateableSceneNodeTypeName",tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName00);
     tolua_function(tolua_S,"getCreateableSceneNodeTypeName",tolua_IrrLua_irr_scene_ISceneNodeFactory_getCreateableSceneNodeTypeName01);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 83, 99,101,110,
    101, 78,111,100,101, 32, 61, 32,105,114,114, 46,115, 99,101,
    110,101, 46, 73, 83, 99,101,110,101, 78,111,100,101, 70, 97,
     99,116,111,114,121, 46, 97,100,100, 83, 99,101,110,101, 78,
    111,100,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 78,
    111,100,101, 70, 97, 99,116,111,114,121, 58, 97,100,100, 83,
     99,101,110,101, 78,111,100,101, 40,116,121,112,101, 78, 97,
    109,101, 44, 32,112, 97,114,101,110,116, 41, 10,108,111, 99,
     97,108, 32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95, 99, 56, 95,112,116,114, 40,116,121,112,101,
     78, 97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95, 97,100,100, 83, 99,101,110,101, 78,111,100,
    101, 40,115,101,108,102, 44, 32,110, 44, 32,112, 97,114,101,
    110,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95,103,101,116, 67,114,101, 97,116,
    101, 97, 98,108,101, 83, 99,101,110,101, 78,111,100,101, 84,
    121,112,101, 78, 97,109,101, 32, 61, 32,105,114,114, 46,115,
     99,101,110,101, 46, 73, 83, 99,101,110,101, 78,111,100,101,
     70, 97, 99,116,111,114,121, 46,103,101,116, 67,114,101, 97,
    116,101, 97, 98,108,101, 83, 99,101,110,101, 78,111,100,101,
     84,121,112,101, 78, 97,109,101, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 78,111,100,101, 70, 97, 99,116,111,114,121,
     58,103,101,116, 67,114,101, 97,116,101, 97, 98,108,101, 83,
     99,101,110,101, 78,111,100,101, 84,121,112,101, 78, 97,109,
    101, 40, 97, 41, 10,114,101,116,117,114,110, 32,105,114,114,
     46, 99, 97,115,116, 46, 99, 56, 95,112,116,114, 95,116,111,
     95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,
    116, 67,114,101, 97,116,101, 97, 98,108,101, 83, 99,101,110,
    101, 78,111,100,101, 84,121,112,101, 78, 97,109,101, 40,115,
    101,108,102, 44, 32, 97, 41, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 41");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
    tolua_cclass(tolua_S,"ISceneNodeAnimatorFactory","irr::scene::ISceneNodeAnimatorFactory","irr::IUnknown",NULL);
    tolua_beginmodule(tolua_S,"ISceneNodeAnimatorFactory");
     tolua_function(tolua_S,"createSceneNodeAnimator",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator00);
     tolua_function(tolua_S,"createSceneNodeAnimator",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_createSceneNodeAnimator01);
     tolua_function(tolua_S,"getCreatableSceneNodeAnimatorTypeCount",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreatableSceneNodeAnimatorTypeCount00);
     tolua_function(tolua_S,"getCreateableSceneNodeAnimatorType",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorType00);
     tolua_function(tolua_S,"getCreateableSceneNodeAnimatorTypeName",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName00);
     tolua_function(tolua_S,"getCreateableSceneNodeAnimatorTypeName",tolua_IrrLua_irr_scene_ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName01);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,101, 83,
     99,101,110,101, 78,111,100,101, 65,110,105,109, 97,116,111,
    114, 32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73,
     83, 99,101,110,101, 78,111,100,101, 65,110,105,109, 97,116,
    111,114, 70, 97, 99,116,111,114,121, 46, 99,114,101, 97,116,
    101, 83, 99,101,110,101, 78,111,100,101, 65,110,105,109, 97,
    116,111,114, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 78,
    111,100,101, 65,110,105,109, 97,116,111,114, 70, 97, 99,116,
    111,114,121, 58, 99,114,101, 97,116,101, 83, 99,101,110,101,
     78,111,100,101, 65,110,105,109, 97,116,111,114, 40,116,121,
    112,101, 78, 97,109,101, 44, 32,116, 97,114,103,101,116, 41,
     10,108,111, 99, 97,108, 32,110, 32, 61, 32,105,114,114, 46,
     99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,
    116,121,112,101, 78, 97,109,101, 41, 10,108,111, 99, 97,108,
     32,114,101,116, 32, 61, 32, 95, 99,114,101, 97,116,101, 83,
     99,101,110,101, 78,111,100,101, 65,110,105,109, 97,116,111,
    114, 40,115,101,108,102, 44, 32,110, 44, 32,116, 97,114,103,
    101,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95, 99, 56, 95,112,116,114, 40,110, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95,103,101,116, 67,114,101, 97,116,
    101, 97, 98,108,101, 83, 99,101,110,101, 78,111,100,101, 65,
    110,105,109, 97,116,111,114, 84,121,112,101, 78, 97,109,101,
     32, 61, 32,105,114,114, 46,115, 99,101,110,101, 46, 73, 83,
     99,101,110,101, 78,111,100,101, 65,110,105,109, 97,116,111,
    114, 70, 97, 99,116,111,114,121, 46,103,101,116, 67,114,101,
     97,116,101, 97, 98,108,101, 83, 99,101,110,101, 78,111,100,
    101, 65,110,105,109, 97,116,111,114, 84,121,112,101, 78, 97,
    109,101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46,115, 99,101,110,101, 46, 73, 83, 99,101,110,101, 78,111,
    100,101, 65,110,105,109, 97,116,111,114, 70, 97, 99,116,111,
    114,121, 58,103,101,116, 67,114,101, 97,116,101, 97, 98,108,
    101, 83, 99,101,110,101, 78,111,100,101, 65,110,105,109, 97,
    116,111,114, 84,121,112,101, 78, 97,109,101, 40, 97, 41, 10,
    114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116,
     46, 99, 56, 95,112,116,114, 95,116,111, 95,115,116,100, 95,
    115,116,114,105,110,103, 40, 95,103,101,116, 67,114,101, 97,
    116,101, 97, 98,108,101, 83, 99,101,110,101, 78,111,100,101,
     65,110,105,109, 97,116,111,114, 84,121,112,101, 78, 97,109,
    101, 40,115,101,108,102, 44, 32, 97, 41, 41, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 42");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IVideoDriver","irr::video::IVideoDriver","irr::IUnknown",tolua_collect_irr__video__IVideoDriver);
    #else
    tolua_cclass(tolua_S,"IVideoDriver","irr::video::IVideoDriver","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IVideoDriver");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IVideoDriver_delete00);
     tolua_function(tolua_S,"beginScene",tolua_IrrLua_irr_video_IVideoDriver_beginScene00);
     tolua_function(tolua_S,"endScene",tolua_IrrLua_irr_video_IVideoDriver_endScene00);
     tolua_function(tolua_S,"endScene",tolua_IrrLua_irr_video_IVideoDriver_endScene01);
     tolua_function(tolua_S,"queryFeature",tolua_IrrLua_irr_video_IVideoDriver_queryFeature00);
     tolua_function(tolua_S,"setTransform",tolua_IrrLua_irr_video_IVideoDriver_setTransform00);
     tolua_function(tolua_S,"getTransform",tolua_IrrLua_irr_video_IVideoDriver_getTransform00);
     tolua_function(tolua_S,"setMaterial",tolua_IrrLua_irr_video_IVideoDriver_setMaterial00);
     tolua_function(tolua_S,"getTexture",tolua_IrrLua_irr_video_IVideoDriver_getTexture00);
     tolua_function(tolua_S,"getTextureByIndex",tolua_IrrLua_irr_video_IVideoDriver_getTextureByIndex00);
     tolua_function(tolua_S,"getTextureCount",tolua_IrrLua_irr_video_IVideoDriver_getTextureCount00);
     tolua_function(tolua_S,"addTexture",tolua_IrrLua_irr_video_IVideoDriver_addTexture00);
     tolua_function(tolua_S,"addTexture",tolua_IrrLua_irr_video_IVideoDriver_addTexture01);
     tolua_function(tolua_S,"createRenderTargetTexture",tolua_IrrLua_irr_video_IVideoDriver_createRenderTargetTexture00);
     tolua_function(tolua_S,"removeTexture",tolua_IrrLua_irr_video_IVideoDriver_removeTexture00);
     tolua_function(tolua_S,"removeAllTextures",tolua_IrrLua_irr_video_IVideoDriver_removeAllTextures00);
     tolua_function(tolua_S,"makeColorKeyTexture",tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture00);
     tolua_function(tolua_S,"makeColorKeyTexture",tolua_IrrLua_irr_video_IVideoDriver_makeColorKeyTexture01);
     tolua_function(tolua_S,"makeNormalMapTexture",tolua_IrrLua_irr_video_IVideoDriver_makeNormalMapTexture00);
     tolua_function(tolua_S,"setRenderTarget",tolua_IrrLua_irr_video_IVideoDriver_setRenderTarget00);
     tolua_function(tolua_S,"setViewPort",tolua_IrrLua_irr_video_IVideoDriver_setViewPort00);
     tolua_function(tolua_S,"getViewPort",tolua_IrrLua_irr_video_IVideoDriver_getViewPort00);
     tolua_function(tolua_S,"drawIndexedTriangleList",tolua_IrrLua_irr_video_IVideoDriver_drawIndexedTriangleList00);
     tolua_function(tolua_S,"draw3DLine",tolua_IrrLua_irr_video_IVideoDriver_draw3DLine00);
     tolua_function(tolua_S,"draw3DTriangle",tolua_IrrLua_irr_video_IVideoDriver_draw3DTriangle00);
     tolua_function(tolua_S,"draw3DBox",tolua_IrrLua_irr_video_IVideoDriver_draw3DBox00);
     tolua_function(tolua_S,"draw2DImage",tolua_IrrLua_irr_video_IVideoDriver_draw2DImage00);
     tolua_function(tolua_S,"draw2DImage",tolua_IrrLua_irr_video_IVideoDriver_draw2DImage01);
     tolua_function(tolua_S,"draw2DRectangle",tolua_IrrLua_irr_video_IVideoDriver_draw2DRectangle00);
     tolua_function(tolua_S,"draw2DLine",tolua_IrrLua_irr_video_IVideoDriver_draw2DLine00);
     tolua_function(tolua_S,"draw2DPolygon",tolua_IrrLua_irr_video_IVideoDriver_draw2DPolygon00);
     tolua_function(tolua_S,"drawStencilShadowVolume",tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadowVolume00);
     tolua_function(tolua_S,"drawStencilShadow",tolua_IrrLua_irr_video_IVideoDriver_drawStencilShadow00);
     tolua_function(tolua_S,"drawMeshBuffer",tolua_IrrLua_irr_video_IVideoDriver_drawMeshBuffer00);
     tolua_function(tolua_S,"setFog",tolua_IrrLua_irr_video_IVideoDriver_setFog00);
     tolua_function(tolua_S,"getScreenSize",tolua_IrrLua_irr_video_IVideoDriver_getScreenSize00);
     tolua_function(tolua_S,"getFPS",tolua_IrrLua_irr_video_IVideoDriver_getFPS00);
     tolua_function(tolua_S,"getPrimitiveCountDrawn",tolua_IrrLua_irr_video_IVideoDriver_getPrimitiveCountDrawn00);
     tolua_function(tolua_S,"deleteAllDynamicLights",tolua_IrrLua_irr_video_IVideoDriver_deleteAllDynamicLights00);
     tolua_function(tolua_S,"addDynamicLight",tolua_IrrLua_irr_video_IVideoDriver_addDynamicLight00);
     tolua_function(tolua_S,"setAmbientLight",tolua_IrrLua_irr_video_IVideoDriver_setAmbientLight00);
     tolua_function(tolua_S,"getMaximalDynamicLightAmount",tolua_IrrLua_irr_video_IVideoDriver_getMaximalDynamicLightAmount00);
     tolua_function(tolua_S,"getDynamicLightCount",tolua_IrrLua_irr_video_IVideoDriver_getDynamicLightCount00);
     tolua_function(tolua_S,"getDynamicLight",tolua_IrrLua_irr_video_IVideoDriver_getDynamicLight00);
     tolua_function(tolua_S,"getName",tolua_IrrLua_irr_video_IVideoDriver_getName00);
     tolua_function(tolua_S,"addExternalImageLoader",tolua_IrrLua_irr_video_IVideoDriver_addExternalImageLoader00);
     tolua_function(tolua_S,"addExternalImageWriter",tolua_IrrLua_irr_video_IVideoDriver_addExternalImageWriter00);
     tolua_function(tolua_S,"getMaximalPrimitiveCount",tolua_IrrLua_irr_video_IVideoDriver_getMaximalPrimitiveCount00);
     tolua_function(tolua_S,"setTextureCreationFlag",tolua_IrrLua_irr_video_IVideoDriver_setTextureCreationFlag00);
     tolua_function(tolua_S,"getTextureCreationFlag",tolua_IrrLua_irr_video_IVideoDriver_getTextureCreationFlag00);
     tolua_function(tolua_S,"createImageFromFile",tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile00);
     tolua_function(tolua_S,"createImageFromFile",tolua_IrrLua_irr_video_IVideoDriver_createImageFromFile01);
     tolua_function(tolua_S,"writeImageToFile",tolua_IrrLua_irr_video_IVideoDriver_writeImageToFile00);
     tolua_function(tolua_S,"createImageFromData",tolua_IrrLua_irr_video_IVideoDriver_createImageFromData00);
     tolua_function(tolua_S,"OnResize",tolua_IrrLua_irr_video_IVideoDriver_OnResize00);
     tolua_function(tolua_S,"addMaterialRenderer",tolua_IrrLua_irr_video_IVideoDriver_addMaterialRenderer00);
     tolua_function(tolua_S,"getMaterialRenderer",tolua_IrrLua_irr_video_IVideoDriver_getMaterialRenderer00);
     tolua_function(tolua_S,"getMaterialRendererCount",tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererCount00);
     tolua_function(tolua_S,"getMaterialRendererName",tolua_IrrLua_irr_video_IVideoDriver_getMaterialRendererName00);
     tolua_function(tolua_S,"setMaterialRendererName",tolua_IrrLua_irr_video_IVideoDriver_setMaterialRendererName00);
     tolua_function(tolua_S,"createAttributesFromMaterial",tolua_IrrLua_irr_video_IVideoDriver_createAttributesFromMaterial00);
     tolua_function(tolua_S,"fillMaterialStructureFromAttributes",tolua_IrrLua_irr_video_IVideoDriver_fillMaterialStructureFromAttributes00);
     tolua_function(tolua_S,"getExposedVideoData",tolua_IrrLua_irr_video_IVideoDriver_getExposedVideoData00);
     tolua_function(tolua_S,"getDriverType",tolua_IrrLua_irr_video_IVideoDriver_getDriverType00);
     tolua_function(tolua_S,"getGPUProgrammingServices",tolua_IrrLua_irr_video_IVideoDriver_getGPUProgrammingServices00);
     tolua_function(tolua_S,"clearZBuffer",tolua_IrrLua_irr_video_IVideoDriver_clearZBuffer00);
     tolua_function(tolua_S,"createScreenShot",tolua_IrrLua_irr_video_IVideoDriver_createScreenShot00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IVideoDriver_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IVideoDriver_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_IVideoDriver_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IShaderConstantSetCallBack","irr::video::IShaderConstantSetCallBack","irr::IUnknown",tolua_collect_irr__video__IShaderConstantSetCallBack);
    #else
    tolua_cclass(tolua_S,"IShaderConstantSetCallBack","irr::video::IShaderConstantSetCallBack","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IShaderConstantSetCallBack");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IShaderConstantSetCallBack_delete00);
     tolua_function(tolua_S,"OnSetConstants",tolua_IrrLua_irr_video_IShaderConstantSetCallBack_OnSetConstants00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IShaderConstantSetCallBack_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IShaderConstantSetCallBack_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_video_IShaderConstantSetCallBack_getDebugName00);
    tolua_endmodule(tolua_S);
    tolua_constant(tolua_S,"EVST_VS_1_1",irr::video::EVST_VS_1_1);
    tolua_constant(tolua_S,"EVST_VS_2_0",irr::video::EVST_VS_2_0);
    tolua_constant(tolua_S,"EVST_VS_2_a",irr::video::EVST_VS_2_a);
    tolua_constant(tolua_S,"EVST_VS_3_0",irr::video::EVST_VS_3_0);
    tolua_constant(tolua_S,"EVST_COUNT",irr::video::EVST_COUNT);
    tolua_constant(tolua_S,"EPST_PS_1_1",irr::video::EPST_PS_1_1);
    tolua_constant(tolua_S,"EPST_PS_1_2",irr::video::EPST_PS_1_2);
    tolua_constant(tolua_S,"EPST_PS_1_3",irr::video::EPST_PS_1_3);
    tolua_constant(tolua_S,"EPST_PS_1_4",irr::video::EPST_PS_1_4);
    tolua_constant(tolua_S,"EPST_PS_2_0",irr::video::EPST_PS_2_0);
    tolua_constant(tolua_S,"EPST_PS_2_a",irr::video::EPST_PS_2_a);
    tolua_constant(tolua_S,"EPST_PS_2_b",irr::video::EPST_PS_2_b);
    tolua_constant(tolua_S,"EPST_PS_3_0",irr::video::EPST_PS_3_0);
    tolua_constant(tolua_S,"EPST_COUNT",irr::video::EPST_COUNT);
    tolua_cclass(tolua_S,"IGPUProgrammingServices","irr::video::IGPUProgrammingServices","",NULL);
    tolua_beginmodule(tolua_S,"IGPUProgrammingServices");
     tolua_function(tolua_S,"addHighLevelShaderMaterial",tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterial00);
     tolua_function(tolua_S,"addHighLevelShaderMaterialFromFiles",tolua_IrrLua_irr_video_IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles00);
     tolua_function(tolua_S,"addShaderMaterial",tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterial00);
     tolua_function(tolua_S,"addShaderMaterialFromFiles",tolua_IrrLua_irr_video_IGPUProgrammingServices_addShaderMaterialFromFiles00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 72,105,103,104,
     76,101,118,101,108, 83,104, 97,100,101,114, 77, 97,116,101,
    114,105, 97,108, 32, 61, 32,105,114,114, 46,118,105,100,101,
    111, 46, 73, 71, 80, 85, 80,114,111,103,114, 97,109,109,105,
    110,103, 83,101,114,118,105, 99,101,115, 46, 97,100,100, 72,
    105,103,104, 76,101,118,101,108, 83,104, 97,100,101,114, 77,
     97,116,101,114,105, 97,108, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,118,105,100,101,111, 46, 73, 71, 80,
     85, 80,114,111,103,114, 97,109,109,105,110,103, 83,101,114,
    118,105, 99,101,115, 58, 97,100,100, 72,105,103,104, 76,101,
    118,101,108, 83,104, 97,100,101,114, 77, 97,116,101,114,105,
     97,108, 40,118,101,114,116,101,120, 83,104, 97,100,101,114,
     80,114,111,103,114, 97,109, 44, 10,118,101,114,116,101,120,
     83,104, 97,100,101,114, 69,110,116,114,121, 80,111,105,110,
    116, 78, 97,109,101, 44, 10,118,115, 67,111,109,112,105,108,
    101, 84, 97,114,103,101,116, 44, 10,112,105,120,101,108, 83,
    104, 97,100,101,114, 80,114,111,103,114, 97,109, 44, 10,112,
    105,120,101,108, 83,104, 97,100,101,114, 69,110,116,114,121,
     80,111,105,110,116, 78, 97,109,101, 44, 10,112,115, 67,111,
    109,112,105,108,101, 84, 97,114,103,101,116, 44, 10, 99, 97,
    108,108, 98, 97, 99,107, 44, 10, 98, 97,115,101, 77, 97,116,
    101,114,105, 97,108, 44, 32,117,115,101,114, 68, 97,116, 97,
     41, 10,118,101,114,116,101,120, 83,104, 97,100,101,114, 80,
    114,111,103,114, 97,109, 32, 61, 32,118,101,114,116,101,120,
     83,104, 97,100,101,114, 80,114,111,103,114, 97,109, 32,111,
    114, 32, 34, 34, 10,118,101,114,116,101,120, 83,104, 97,100,
    101,114, 69,110,116,114,121, 80,111,105,110,116, 78, 97,109,
    101, 32, 61, 32,118,101,114,116,101,120, 83,104, 97,100,101,
    114, 69,110,116,114,121, 80,111,105,110,116, 78, 97,109,101,
     32,111,114, 32, 34,109, 97,105,110, 34, 10,118,115, 67,111,
    109,112,105,108,101, 84, 97,114,103,101,116, 32, 61, 32,118,
    115, 67,111,109,112,105,108,101, 84, 97,114,103,101,116, 32,
    111,114, 32,105,114,114, 46,118,105,100,101,111, 46, 69, 86,
     83, 84, 95, 86, 83, 95, 49, 95, 49, 10,112,105,120,101,108,
     83,104, 97,100,101,114, 80,114,111,103,114, 97,109, 32, 61,
     32,112,105,120,101,108, 83,104, 97,100,101,114, 80,114,111,
    103,114, 97,109, 32,111,114, 32, 34, 34, 10,112,105,120,101,
    108, 83,104, 97,100,101,114, 69,110,116,114,121, 80,111,105,
    110,116, 78, 97,109,101, 32, 61, 32,112,105,120,101,108, 83,
    104, 97,100,101,114, 69,110,116,114,121, 80,111,105,110,116,
     78, 97,109,101, 32,111,114, 32, 34,109, 97,105,110, 34, 10,
    112,115, 67,111,109,112,105,108,101, 84, 97,114,103,101,116,
     32, 61, 32,112,115, 67,111,109,112,105,108,101, 84, 97,114,
    103,101,116, 32,111,114, 32,105,114,114, 46,118,105,100,101,
    111, 46, 69, 80, 83, 84, 95, 80, 83, 95, 49, 95, 49, 10, 98,
     97,115,101, 77, 97,116,101,114,105, 97,108, 32, 61, 32, 98,
     97,115,101, 77, 97,116,101,114,105, 97,108, 32,111,114, 32,
    105,114,114, 46,118,105,100,101,111, 46, 69, 77, 84, 95, 83,
     79, 76, 73, 68, 10,117,115,101,114, 68, 97,116, 97, 32, 61,
     32,117,115,101,114, 68, 97,116, 97, 32,111,114, 32, 48, 10,
    118, 78, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,118,101,114,
    116,101,120, 83,104, 97,100,101,114, 69,110,116,114,121, 80,
    111,105,110,116, 78, 97,109,101, 41, 10,112, 78, 97,109,101,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
     99, 56, 95,112,116,114, 40,112,105,120,101,108, 83,104, 97,
    100,101,114, 69,110,116,114,121, 80,111,105,110,116, 78, 97,
    109,101, 41, 10,118, 80,114,111,103, 32, 61, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,114,
     40,118,101,114,116,101,120, 83,104, 97,100,101,114, 80,114,
    111,103,114, 97,109, 41, 10,112, 80,114,111,103, 32, 61, 32,
    105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,
    112,116,114, 40,112,105,120,101,108, 83,104, 97,100,101,114,
     80,114,111,103,114, 97,109, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95, 97,100,100, 72,105,103,104, 76,
    101,118,101,108, 83,104, 97,100,101,114, 77, 97,116,101,114,
    105, 97,108, 40,115,101,108,102, 44, 32,118, 80,114,111,103,
     44, 32,118, 78, 97,109,101, 44, 32,118,115, 67,111,109,112,
    105,108,101, 84, 97,114,103,101,116, 44, 32,112, 80,114,111,
    103, 44, 32,112, 78, 97,109,101, 44, 10,112,115, 67,111,109,
    112,105,108,101, 84, 97,114,103,101,116, 44, 32, 99, 97,108,
    108, 98, 97, 99,107, 44, 32, 98, 97,115,101, 77, 97,116,101,
    114,105, 97,108, 44, 32,117,115,101,114, 68, 97,116, 97, 41,
     10,105,114,114, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,118, 78, 97,109,101, 41, 10,105,114,114, 46,
    100,101,108,101,116,101, 95, 99, 56, 95,112,116,114, 40,112,
     78, 97,109,101, 41, 10,105,114,114, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,118, 80,114,111,103, 41,
     10,105,114,114, 46,100,101,108,101,116,101, 95, 99, 56, 95,
    112,116,114, 40,112, 80,114,111,103, 41, 10,114,101,116,117,
    114,110, 32,105,114,114, 46, 99, 97,115,116, 46,115, 51, 50,
     95,116,111, 95,108,117, 97, 95, 78,117,109, 98,101,114, 40,
    114,101,116, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95, 97,100,100, 72,105,103,104, 76,101,118,101,108, 83,104,
     97,100,101,114, 77, 97,116,101,114,105, 97,108, 70,114,111,
    109, 70,105,108,101,115, 32, 61, 32,105,114,114, 46,118,105,
    100,101,111, 46, 73, 71, 80, 85, 80,114,111,103,114, 97,109,
    109,105,110,103, 83,101,114,118,105, 99,101,115, 46, 97,100,
    100, 72,105,103,104, 76,101,118,101,108, 83,104, 97,100,101,
    114, 77, 97,116,101,114,105, 97,108, 70,114,111,109, 70,105,
    108,101,115, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,118,105,100,101,111, 46, 73, 71, 80, 85, 80,114,111,
    103,114, 97,109,109,105,110,103, 83,101,114,118,105, 99,101,
    115, 58, 97,100,100, 72,105,103,104, 76,101,118,101,108, 83,
    104, 97,100,101,114, 77, 97,116,101,114,105, 97,108, 70,114,
    111,109, 70,105,108,101,115, 40,118,101,114,116,101,120, 83,
    104, 97,100,101,114, 80,114,111,103,114, 97,109, 44, 10,118,
    101,114,116,101,120, 83,104, 97,100,101,114, 69,110,116,114,
    121, 80,111,105,110,116, 78, 97,109,101, 44, 10,118,115, 67,
    111,109,112,105,108,101, 84, 97,114,103,101,116, 44, 10,112,
    105,120,101,108, 83,104, 97,100,101,114, 80,114,111,103,114,
     97,109, 44, 10,112,105,120,101,108, 83,104, 97,100,101,114,
     69,110,116,114,121, 80,111,105,110,116, 78, 97,109,101, 44,
     10,112,115, 67,111,109,112,105,108,101, 84, 97,114,103,101,
    116, 44, 10, 99, 97,108,108, 98, 97, 99,107, 44, 10, 98, 97,
    115,101, 77, 97,116,101,114,105, 97,108, 44, 32,117,115,101,
    114, 68, 97,116, 97, 41, 10,118,101,114,116,101,120, 83,104,
     97,100,101,114, 80,114,111,103,114, 97,109, 32, 61, 32,118,
    101,114,116,101,120, 83,104, 97,100,101,114, 80,114,111,103,
    114, 97,109, 32,111,114, 32, 34, 34, 10,112,105,120,101,108,
     83,104, 97,100,101,114, 80,114,111,103,114, 97,109, 32, 61,
     32,112,105,120,101,108, 83,104, 97,100,101,114, 80,114,111,
    103,114, 97,109, 32,111,114, 32, 34, 34, 10,118,101,114,116,
    101,120, 83,104, 97,100,101,114, 69,110,116,114,121, 80,111,
    105,110,116, 78, 97,109,101, 32, 61, 32,118,101,114,116,101,
    120, 83,104, 97,100,101,114, 69,110,116,114,121, 80,111,105,
    110,116, 78, 97,109,101, 32,111,114, 32, 34,109, 97,105,110,
     34, 10,118,115, 67,111,109,112,105,108,101, 84, 97,114,103,
    101,116, 32, 61, 32,118,115, 67,111,109,112,105,108,101, 84,
     97,114,103,101,116, 32,111,114, 32,105,114,114, 46,118,105,
    100,101,111, 46, 69, 86, 83, 84, 95, 86, 83, 95, 49, 95, 49,
     10,112,105,120,101,108, 83,104, 97,100,101,114, 69,110,116,
    114,121, 80,111,105,110,116, 78, 97,109,101, 32, 61, 32,112,
    105,120,101,108, 83,104, 97,100,101,114, 69,110,116,114,121,
     80,111,105,110,116, 78, 97,109,101, 32,111,114, 32, 34,109,
     97,105,110, 34, 10,112,115, 67,111,109,112,105,108,101, 84,
     97,114,103,101,116, 32, 61, 32,112,115, 67,111,109,112,105,
    108,101, 84, 97,114,103,101,116, 32,111,114, 32,105,114,114,
     46,118,105,100,101,111, 46, 69, 80, 83, 84, 95, 80, 83, 95,
     49, 95, 49, 10, 98, 97,115,101, 77, 97,116,101,114,105, 97,
    108, 32, 61, 32, 98, 97,115,101, 77, 97,116,101,114,105, 97,
    108, 32,111,114, 32,105,114,114, 46,118,105,100,101,111, 46,
     69, 77, 84, 95, 83, 79, 76, 73, 68, 10,117,115,101,114, 68,
     97,116, 97, 32, 61, 32,117,115,101,114, 68, 97,116, 97, 32,
    111,114, 32, 48, 10,118, 78, 97,109,101, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,112,116,
    114, 40,118,101,114,116,101,120, 83,104, 97,100,101,114, 69,
    110,116,114,121, 80,111,105,110,116, 78, 97,109,101, 41, 10,
    112, 78, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,
    116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,112,105,120,
    101,108, 83,104, 97,100,101,114, 69,110,116,114,121, 80,111,
    105,110,116, 78, 97,109,101, 41, 10,118, 80,114,111,103, 32,
     61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99,
     56, 95,112,116,114, 40,118,101,114,116,101,120, 83,104, 97,
    100,101,114, 80,114,111,103,114, 97,109, 41, 10,112, 80,114,
    111,103, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40,112,105,120,101,108, 83,
    104, 97,100,101,114, 80,114,111,103,114, 97,109, 41, 10,108,
    111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100,
     72,105,103,104, 76,101,118,101,108, 83,104, 97,100,101,114,
     77, 97,116,101,114,105, 97,108, 70,114,111,109, 70,105,108,
    101,115, 40,115,101,108,102, 44, 32,118, 80,114,111,103, 44,
     32,118, 78, 97,109,101, 44, 32,118,115, 67,111,109,112,105,
    108,101, 84, 97,114,103,101,116, 44, 32,112, 80,114,111,103,
     44, 32,112, 78, 97,109,101, 44, 10,112,115, 67,111,109,112,
    105,108,101, 84, 97,114,103,101,116, 44, 32, 99, 97,108,108,
     98, 97, 99,107, 44, 32, 98, 97,115,101, 77, 97,116,101,114,
    105, 97,108, 44, 32,117,115,101,114, 68, 97,116, 97, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,118, 78, 97,109,101, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,112, 78, 97,109,101, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,118, 80,114,111,103, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,112, 80,114,111,103, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95, 97,100,100, 83,104, 97,100,101,
    114, 77, 97,116,101,114,105, 97,108, 70,114,111,109, 70,105,
    108,101,115, 32, 61, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 71, 80, 85, 80,114,111,103,114, 97,109,109,105,110,
    103, 83,101,114,118,105, 99,101,115, 46, 97,100,100, 83,104,
     97,100,101,114, 77, 97,116,101,114,105, 97,108, 70,114,111,
    109, 70,105,108,101,115, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,118,105,100,101,111, 46, 73, 71, 80, 85,
     80,114,111,103,114, 97,109,109,105,110,103, 83,101,114,118,
    105, 99,101,115, 58, 97,100,100, 83,104, 97,100,101,114, 77,
     97,116,101,114,105, 97,108, 70,114,111,109, 70,105,108,101,
    115, 40,118,101,114,116,101,120, 83,104, 97,100,101,114, 80,
    114,111,103,114, 97,109, 44, 10,112,105,120,101,108, 83,104,
     97,100,101,114, 80,114,111,103,114, 97,109, 44, 10, 99, 97,
    108,108, 98, 97, 99,107, 44, 10, 98, 97,115,101, 77, 97,116,
    101,114,105, 97,108, 44, 32,117,115,101,114, 68, 97,116, 97,
     41, 10,118,101,114,116,101,120, 83,104, 97,100,101,114, 80,
    114,111,103,114, 97,109, 32, 61, 32,118,101,114,116,101,120,
     83,104, 97,100,101,114, 80,114,111,103,114, 97,109, 32,111,
    114, 32, 34, 34, 10,112,105,120,101,108, 83,104, 97,100,101,
    114, 80,114,111,103,114, 97,109, 32, 61, 32,112,105,120,101,
    108, 83,104, 97,100,101,114, 80,114,111,103,114, 97,109, 32,
    111,114, 32, 34, 34, 10, 98, 97,115,101, 77, 97,116,101,114,
    105, 97,108, 32, 61, 32, 98, 97,115,101, 77, 97,116,101,114,
    105, 97,108, 32,111,114, 32,105,114,114, 46,118,105,100,101,
    111, 46, 69, 77, 84, 95, 83, 79, 76, 73, 68, 10,117,115,101,
    114, 68, 97,116, 97, 32, 61, 32,117,115,101,114, 68, 97,116,
     97, 32,111,114, 32, 48, 10,118, 80,114,111,103, 32, 61, 32,
    105,114,114, 46, 99, 97,115,116, 46,116,111, 95, 99, 56, 95,
    112,116,114, 40,118,101,114,116,101,120, 83,104, 97,100,101,
    114, 80,114,111,103,114, 97,109, 41, 10,112, 80,114,111,103,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
     99, 56, 95,112,116,114, 40,112,105,120,101,108, 83,104, 97,
    100,101,114, 80,114,111,103,114, 97,109, 41, 10,108,111, 99,
     97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100, 83,104,
     97,100,101,114, 77, 97,116,101,114,105, 97,108, 70,114,111,
    109, 70,105,108,101,115, 40,115,101,108,102, 44, 32,118, 80,
    114,111,103, 44, 32,112, 80,114,111,103, 44, 32, 99, 97,108,
    108, 98, 97, 99,107, 44, 32, 98, 97,115,101, 77, 97,116,101,
    114,105, 97,108, 44, 32,117,115,101,114, 68, 97,116, 97, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,118, 80,114,111,103, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95, 99, 56, 95,112,116,114, 40,112, 80,114,111,103, 41,
     10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 43");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_function(tolua_S,"IrrLuaSetVertexShaderConstant2",tolua_IrrLua_irr_video_IrrLuaSetVertexShaderConstant200);
    tolua_function(tolua_S,"IrrLuaSetPixelShaderConstant2",tolua_IrrLua_irr_video_IrrLuaSetPixelShaderConstant200);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMaterialRenderer","irr::video::IMaterialRenderer","virtual irr::IUnknown",tolua_collect_irr__video__IMaterialRenderer);
    #else
    tolua_cclass(tolua_S,"IMaterialRenderer","irr::video::IMaterialRenderer","virtual irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMaterialRenderer");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IMaterialRenderer_delete00);
     tolua_function(tolua_S,"OnSetMaterial",tolua_IrrLua_irr_video_IMaterialRenderer_OnSetMaterial00);
     tolua_function(tolua_S,"OnRender",tolua_IrrLua_irr_video_IMaterialRenderer_OnRender00);
     tolua_function(tolua_S,"OnUnsetMaterial",tolua_IrrLua_irr_video_IMaterialRenderer_OnUnsetMaterial00);
     tolua_function(tolua_S,"isTransparent",tolua_IrrLua_irr_video_IMaterialRenderer_isTransparent00);
     tolua_function(tolua_S,"getRenderCapability",tolua_IrrLua_irr_video_IMaterialRenderer_getRenderCapability00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IMaterialRendererServices","irr::video::IMaterialRendererServices","",tolua_collect_irr__video__IMaterialRendererServices);
    #else
    tolua_cclass(tolua_S,"IMaterialRendererServices","irr::video::IMaterialRendererServices","",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IMaterialRendererServices");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IMaterialRendererServices_delete00);
     tolua_function(tolua_S,"setBasicRenderStates",tolua_IrrLua_irr_video_IMaterialRendererServices_setBasicRenderStates00);
     tolua_function(tolua_S,"setVertexShaderConstant",tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant00);
     tolua_function(tolua_S,"setVertexShaderConstant",tolua_IrrLua_irr_video_IMaterialRendererServices_setVertexShaderConstant01);
     tolua_function(tolua_S,"setPixelShaderConstant",tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant00);
     tolua_function(tolua_S,"setPixelShaderConstant",tolua_IrrLua_irr_video_IMaterialRendererServices_setPixelShaderConstant01);
     tolua_function(tolua_S,"getVideoDriver",tolua_IrrLua_irr_video_IMaterialRendererServices_getVideoDriver00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,115,101,116, 86,101,114,116,
    101,120, 83,104, 97,100,101,114, 67,111,110,115,116, 97,110,
    116, 32, 61, 32,105,114,114, 46,118,105,100,101,111, 46, 73,
     77, 97,116,101,114,105, 97,108, 82,101,110,100,101,114,101,
    114, 83,101,114,118,105, 99,101,115, 46,115,101,116, 86,101,
    114,116,101,120, 83,104, 97,100,101,114, 67,111,110,115,116,
     97,110,116, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,118,105,100,101,111, 46, 73, 77, 97,116,101,114,105,
     97,108, 82,101,110,100,101,114,101,114, 83,101,114,118,105,
     99,101,115, 58,115,101,116, 86,101,114,116,101,120, 83,104,
     97,100,101,114, 67,111,110,115,116, 97,110,116, 40, 97,114,
    103, 49, 44, 32, 97,114,103, 50, 44, 32, 97,114,103, 51, 41,
     10,105,102, 32,116,121,112,101, 40, 97,114,103, 49, 41, 32,
     61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,104,101,
    110, 10,108,111, 99, 97,108, 32, 99,111,117,110,116, 32, 61,
     32, 97,114,103, 51, 32,111,114, 32,116, 97, 98,108,101, 46,
    103,101,116,110, 40, 97,114,103, 50, 41, 10,105,102, 32, 99,
    111,117,110,116, 32, 60, 32, 49, 32,116,104,101,110, 10, 99,
    111,117,110,116, 32, 61, 32, 49, 54, 10,101,110,100, 10,114,
    101,116,117,114,110, 32,105,114,114, 46,118,105,100,101,111,
     46, 73,114,114, 76,117, 97, 83,101,116, 86,101,114,116,101,
    120, 83,104, 97,100,101,114, 67,111,110,115,116, 97,110,116,
     49, 40,115,101,108,102, 44, 32, 97,114,103, 49, 44, 32, 99,
    111,117,110,116, 44, 32, 97,114,103, 50, 41, 10,101,108,115,
    101, 10,108,111, 99, 97,108, 32, 99,111,117,110,116, 32, 61,
     32,116, 97, 98,108,101, 46,103,101,116,110, 40, 97,114,103,
     49, 41, 10,105,102, 32, 99,111,117,110,116, 32, 60, 32, 49,
     32,116,104,101,110, 10, 99,111,117,110,116, 32, 61, 32, 49,
     54, 10,101,110,100, 10, 97,114,103, 51, 32, 61, 32, 97,114,
    103, 51, 32,111,114, 32, 99,111,117,110,116, 10,114,101,116,
    117,114,110, 32,105,114,114, 46,118,105,100,101,111, 46, 73,
    114,114, 76,117, 97, 83,101,116, 86,101,114,116,101,120, 83,
    104, 97,100,101,114, 67,111,110,115,116, 97,110,116, 50, 40,
    115,101,108,102, 44, 32, 97,114,103, 50, 44, 32, 97,114,103,
     51, 44, 32, 99,111,117,110,116, 44, 32, 97,114,103, 49, 41,
     10,101,110,100, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95,115,101,116, 80,105,120,101,108, 83,104, 97,100,101,114,
     67,111,110,115,116, 97,110,116, 32, 61, 32,105,114,114, 46,
    118,105,100,101,111, 46, 73, 77, 97,116,101,114,105, 97,108,
     82,101,110,100,101,114,101,114, 83,101,114,118,105, 99,101,
    115, 46,115,101,116, 80,105,120,101,108, 83,104, 97,100,101,
    114, 67,111,110,115,116, 97,110,116, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 73,
     77, 97,116,101,114,105, 97,108, 82,101,110,100,101,114,101,
    114, 83,101,114,118,105, 99,101,115, 58,115,101,116, 80,105,
    120,101,108, 83,104, 97,100,101,114, 67,111,110,115,116, 97,
    110,116, 40, 97,114,103, 49, 44, 32, 97,114,103, 50, 44, 32,
     97,114,103, 51, 41, 10,105,102, 32,116,121,112,101, 40, 97,
    114,103, 49, 41, 32, 61, 61, 32, 34,115,116,114,105,110,103,
     34, 32,116,104,101,110, 10,108,111, 99, 97,108, 32, 99,111,
    117,110,116, 32, 61, 32, 97,114,103, 51, 32,111,114, 32,116,
     97, 98,108,101, 46,103,101,116,110, 40, 97,114,103, 50, 41,
     10,105,102, 32, 99,111,117,110,116, 32, 60, 32, 49, 32,116,
    104,101,110, 10, 99,111,117,110,116, 32, 61, 32, 49, 54, 10,
    101,110,100, 10,114,101,116,117,114,110, 32,105,114,114, 46,
    118,105,100,101,111, 46, 73,114,114, 76,117, 97, 83,101,116,
     80,105,120,101,108, 83,104, 97,100,101,114, 67,111,110,115,
    116, 97,110,116, 49, 40,115,101,108,102, 44, 32, 97,114,103,
     49, 44, 32, 99,111,117,110,116, 44, 32, 97,114,103, 50, 41,
     10,101,108,115,101, 10,108,111, 99, 97,108, 32, 99,111,117,
    110,116, 32, 61, 32,116, 97, 98,108,101, 46,103,101,116,110,
     40, 97,114,103, 49, 41, 10,105,102, 32, 99,111,117,110,116,
     32, 60, 32, 49, 32,116,104,101,110, 10, 99,111,117,110,116,
     32, 61, 32, 49, 54, 10,101,110,100, 10, 97,114,103, 51, 32,
     61, 32, 97,114,103, 51, 32,111,114, 32, 99,111,117,110,116,
     10,114,101,116,117,114,110, 32,105,114,114, 46,118,105,100,
    101,111, 46, 73,114,114, 76,117, 97, 83,101,116, 80,105,120,
    101,108, 83,104, 97,100,101,114, 67,111,110,115,116, 97,110,
    116, 50, 40,115,101,108,102, 44, 32, 97,114,103, 50, 44, 32,
     97,114,103, 51, 44, 32, 99,111,117,110,116, 44, 32, 97,114,
    103, 49, 41, 10,101,110,100, 10,101,110,100, 32,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 44");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIShaderConstantSetCallBack","irr::video::IrrLuaIShaderConstantSetCallBack","irr::video::IShaderConstantSetCallBack",tolua_collect_irr__video__IrrLuaIShaderConstantSetCallBack);
    #else
    tolua_cclass(tolua_S,"IrrLuaIShaderConstantSetCallBack","irr::video::IrrLuaIShaderConstantSetCallBack","irr::video::IShaderConstantSetCallBack",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIShaderConstantSetCallBack");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_delete00);
     tolua_function(tolua_S,"OnSetConstants",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_OnSetConstants00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_video_IrrLuaIShaderConstantSetCallBack_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,115,104, 97,100,101,114,112,114,
    111,120,121, 32, 61, 32,123,125, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 99,114,
    101, 97,116,101, 73, 83,104, 97,100,101,114, 67,111,110,115,
    116, 97,110,116, 83,101,116, 67, 97,108,108, 66, 97, 99,107,
     40,100,101,102, 41, 10,108,111, 99, 97,108, 32,111, 32, 61,
     32,123,125, 10,102,111,114, 32,105, 44,118, 32,105,110, 32,
    112, 97,105,114,115, 40,100,101,102, 41, 32,100,111, 32,111,
     91,105, 93, 32, 61, 32,118, 32,101,110,100, 10,111, 46, 95,
     95, 99, 95, 99,108, 97,115,115, 32, 61, 32,105,114,114, 46,
    118,105,100,101,111, 46, 73,114,114, 76,117, 97, 73, 83,104,
     97,100,101,114, 67,111,110,115,116, 97,110,116, 83,101,116,
     67, 97,108,108, 66, 97, 99,107, 58,110,101,119, 40, 41, 10,
    116,111,108,117, 97, 46,105,110,104,101,114,105,116, 40,111,
     44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 41, 10,
    116,111,108,117, 97, 46,116, 97,107,101,111,119,110,101,114,
    115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,110,100,
    101,120, 32, 61, 32,102,117,110, 99,116,105,111,110, 32, 40,
    116, 44, 32,107, 41, 32,114,101,116,117,114,110, 32,114, 97,
    119,103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,108, 97,
    115,115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,101,116,
    109,101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,111, 41,
     10,105,114,114, 46, 95, 95,115,104, 97,100,101,114,112,114,
    111,120,121, 91,111, 46, 95, 95, 99, 95, 99,108, 97,115,115,
     58, 71,101,116, 80,114,111,120,121, 40, 41, 93, 32, 61, 32,
    111, 10,114,101,116,117,114,110, 32,111, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 45");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 70,105,108,101,
     78, 97,109,101, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     82,101, 97,100, 70,105,108,101, 46,103,101,116, 70,105,108,
    101, 78, 97,109,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 82,101, 97,100, 70,105,108,
    101, 58,103,101,116, 70,105,108,101, 78, 97,109,101, 40, 41,
     10,114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,
    116, 46, 99, 56, 95,112,116,114, 95,116,111, 95,115,116,100,
     95,115,116,114,105,110,103, 40, 95,103,101,116, 70,105,108,
    101, 78, 97,109,101, 40,115,101,108,102, 41, 41, 10,101,110,
    100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 46");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 70,105,108,101,
     78, 97,109,101, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     87,114,105,116,101, 70,105,108,101, 46,103,101,116, 70,105,
    108,101, 78, 97,109,101, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,105,111, 46, 73, 87,114,105,116,101, 70,
    105,108,101, 58,103,101,116, 70,105,108,101, 78, 97,109,101,
     40, 41, 10,114,101,116,117,114,110, 32,105,114,114, 46, 99,
     97,115,116, 46, 99, 56, 95,112,116,114, 95,116,111, 95,115,
    116,100, 95,115,116,114,105,110,103, 40, 95,103,101,116, 70,
    105,108,101, 78, 97,109,101, 40,115,101,108,102, 41, 41, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 47");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 70,105,108,101,
     78, 97,109,101, 32, 61, 32,105,114,114, 46,105,111, 46, 73,
     70,105,108,101, 76,105,115,116, 46,103,101,116, 70,105,108,
    101, 78, 97,109,101, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 70,105,108,101, 76,105,115,
    116, 58,103,101,116, 70,105,108,101, 78, 97,109,101, 40, 41,
     10,114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,
    116, 46, 99, 56, 95,112,116,114, 95,116,111, 95,115,116,100,
     95,115,116,114,105,110,103, 40, 95,103,101,116, 70,105,108,
    101, 78, 97,109,101, 40,115,101,108,102, 41, 41, 10,101,110,
    100, 10,108,111, 99, 97,108, 32, 95,103,101,116, 70,117,108,
    108, 70,105,108,101, 78, 97,109,101, 32, 61, 32,105,114,114,
     46,105,111, 46, 73, 70,105,108,101, 76,105,115,116, 46,103,
    101,116, 70,117,108,108, 70,105,108,101, 78, 97,109,101, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,105,111,
     46, 73, 70,105,108,101, 76,105,115,116, 58,103,101,116, 70,
    117,108,108, 70,105,108,101, 78, 97,109,101, 40, 41, 10,114,
    101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46,
     99, 56, 95,112,116,114, 95,116,111, 95,115,116,100, 95,115,
    116,114,105,110,103, 40, 95,103,101,116, 70,117,108,108, 70,
    105,108,101, 78, 97,109,101, 40,115,101,108,102, 41, 41, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 48");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
    tolua_constant(tolua_S,"ETF_ASCII",irr::io::ETF_ASCII);
    tolua_constant(tolua_S,"ETF_UTF8",irr::io::ETF_UTF8);
    tolua_constant(tolua_S,"ETF_UTF16_BE",irr::io::ETF_UTF16_BE);
    tolua_constant(tolua_S,"ETF_UTF16_LE",irr::io::ETF_UTF16_LE);
    tolua_constant(tolua_S,"ETF_UTF32_BE",irr::io::ETF_UTF32_BE);
    tolua_constant(tolua_S,"ETF_UTF32_LE",irr::io::ETF_UTF32_LE);
    tolua_constant(tolua_S,"EXN_NONE",irr::io::EXN_NONE);
    tolua_constant(tolua_S,"EXN_ELEMENT",irr::io::EXN_ELEMENT);
    tolua_constant(tolua_S,"EXN_ELEMENT_END",irr::io::EXN_ELEMENT_END);
    tolua_constant(tolua_S,"EXN_TEXT",irr::io::EXN_TEXT);
    tolua_constant(tolua_S,"EXN_COMMENT",irr::io::EXN_COMMENT);
    tolua_constant(tolua_S,"EXN_CDATA",irr::io::EXN_CDATA);
    tolua_constant(tolua_S,"EXN_UNKNOWN",irr::io::EXN_UNKNOWN);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 65,116,116,114,
    105, 98,117,116,101, 78, 97,109,101, 32, 61, 32,105,114,114,
     46,105,111, 46, 73, 88, 77, 76, 82,101, 97,100,101,114, 46,
    103,101,116, 65,116,116,114,105, 98,117,116,101, 78, 97,109,
    101, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    105,111, 46, 73, 88, 77, 76, 82,101, 97,100,101,114, 58,103,
    101,116, 65,116,116,114,105, 98,117,116,101, 78, 97,109,101,
     40,105,100,120, 41, 10,114,101,116,117,114,110, 32,105,114,
    114, 46, 99, 97,115,116, 46,119, 99,104, 97,114, 95,116, 95,
    112,116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,
    110,103, 40, 95,103,101,116, 65,116,116,114,105, 98,117,116,
    101, 78, 97,109,101, 40,115,101,108,102, 44, 32,105,100,120,
     41, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,
    101,116, 65,116,116,114,105, 98,117,116,101, 86, 97,108,117,
    101, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 88, 77, 76,
     82,101, 97,100,101,114, 46,103,101,116, 65,116,116,114,105,
     98,117,116,101, 86, 97,108,117,101, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,105,111, 46, 73, 88, 77, 76,
     82,101, 97,100,101,114, 58,103,101,116, 65,116,116,114,105,
     98,117,116,101, 86, 97,108,117,101, 40,110, 97,109,101, 41,
     10,108,111, 99, 97,108, 32,110,109, 32, 61, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,114, 95,
    116, 95,112,116,114, 40,110, 97,109,101, 41, 10,108,111, 99,
     97,108, 32,114,101,116, 32, 61, 32, 95,103,101,116, 65,116,
    116,114,105, 98,117,116,101, 86, 97,108,117,101, 40,115,101,
    108,102, 44, 32,110,109, 41, 10,105,114,114, 46, 99, 97,115,
    116, 46,100,101,108,101,116,101, 95,119, 99,104, 97,114, 95,
    116, 95,112,116,114, 40,110,109, 41, 10,114,101,116,117,114,
    110, 32,105,114,114, 46, 99, 97,115,116, 46,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 95,116,111, 95,115,116,100, 95,
    115,116,114,105,110,103, 40,114,101,116, 41, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95,103,101,116, 65,116,116,114,
    105, 98,117,116,101, 86, 97,108,117,101, 83, 97,102,101, 32,
     61, 32,105,114,114, 46,105,111, 46, 73, 88, 77, 76, 82,101,
     97,100,101,114, 46,103,101,116, 65,116,116,114,105, 98,117,
    116,101, 86, 97,108,117,101, 83, 97,102,101, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 88,
     77, 76, 82,101, 97,100,101,114, 58,103,101,116, 65,116,116,
    114,105, 98,117,116,101, 86, 97,108,117,101, 83, 97,102,101,
     40,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,110,109,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
    119, 99,104, 97,114, 95,116, 95,112,116,114, 40,110, 97,109,
    101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95,103,101,116, 65,116,116,114,105, 98,117,116,101, 86, 97,
    108,117,101, 83, 97,102,101, 40,115,101,108,102, 44, 32,110,
    109, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,
    101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114,
     40,110,109, 41, 10,114,101,116,117,114,110, 32,105,114,114,
     46, 99, 97,115,116, 46,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40,114,101,116, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95,103,101,116, 65,116,116,114,105, 98,117,116,101,
     86, 97,108,117,101, 65,115, 73,110,116, 32, 61, 32,105,114,
    114, 46,105,111, 46, 73, 88, 77, 76, 82,101, 97,100,101,114,
     46,103,101,116, 65,116,116,114,105, 98,117,116,101, 86, 97,
    108,117,101, 65,115, 73,110,116, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,105,111, 46, 73, 88, 77, 76, 82,
    101, 97,100,101,114, 58,103,101,116, 65,116,116,114,105, 98,
    117,116,101, 86, 97,108,117,101, 65,115, 73,110,116, 40,110,
     97,109,101, 41, 10,108,111, 99, 97,108, 32,110,109, 32, 61,
     32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,
    104, 97,114, 95,116, 95,112,116,114, 40,110, 97,109,101, 41,
     10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,103,
    101,116, 65,116,116,114,105, 98,117,116,101, 86, 97,108,117,
    101, 65,115, 73,110,116, 40,115,101,108,102, 44, 32,110,109,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,
    110,109, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 86, 97,108,117,101, 65,115,
     70,108,111, 97,116, 32, 61, 32,105,114,114, 46,105,111, 46,
     73, 88, 77, 76, 82,101, 97,100,101,114, 46,103,101,116, 65,
    116,116,114,105, 98,117,116,101, 86, 97,108,117,101, 65,115,
     70,108,111, 97,116, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,105,111, 46, 73, 88, 77, 76, 82,101, 97,100,
    101,114, 58,103,101,116, 65,116,116,114,105, 98,117,116,101,
     86, 97,108,117,101, 65,115, 70,108,111, 97,116, 40,110, 97,
    109,101, 41, 10,108,111, 99, 97,108, 32,110,109, 32, 61, 32,
    105,114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104,
     97,114, 95,116, 95,112,116,114, 40,110, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,103,101,
    116, 65,116,116,114,105, 98,117,116,101, 86, 97,108,117,101,
     65,115, 70,108,111, 97,116, 40,115,101,108,102, 44, 32,110,
    109, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,
    101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114,
     40,110,109, 41, 10,114,101,116,117,114,110, 32,114,101,116,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116,
     78,111,100,101, 78, 97,109,101, 32, 61, 32,105,114,114, 46,
    105,111, 46, 73, 88, 77, 76, 82,101, 97,100,101,114, 46,103,
    101,116, 78,111,100,101, 78, 97,109,101, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,105,111, 46, 73, 88, 77,
     76, 82,101, 97,100,101,114, 58,103,101,116, 78,111,100,101,
     78, 97,109,101, 40, 41, 10,114,101,116,117,114,110, 32,105,
    114,114, 46, 99, 97,115,116, 46,119, 99,104, 97,114, 95,116,
     95,112,116,114, 95,116,111, 95,115,116,100, 95,115,116,114,
    105,110,103, 40, 95,103,101,116, 78,111,100,101, 78, 97,109,
    101, 40,115,101,108,102, 41, 41, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95,103,101,116, 78,111,100,101, 68, 97,116,
     97, 32, 61, 32,105,114,114, 46,105,111, 46, 73, 88, 77, 76,
     82,101, 97,100,101,114, 46,103,101,116, 78,111,100,101, 68,
     97,116, 97, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,105,111, 46, 73, 88, 77, 76, 82,101, 97,100,101,114,
     58,103,101,116, 78,111,100,101, 68, 97,116, 97, 40, 41, 10,
    114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116,
     46,119, 99,104, 97,114, 95,116, 95,112,116,114, 95,116,111,
     95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,
    116, 78,111,100,101, 68, 97,116, 97, 40,115,101,108,102, 41,
     41, 10,101,110,100, 10,105,114,114, 46,105,111, 46, 73, 88,
     77, 76, 82,101, 97,100,101,114, 46,103,101,116, 68,101, 98,
    117,103, 78, 97,109,101, 32, 61, 32,105,114,114, 46, 73, 85,
    110,107,110,111,119,110, 46,103,101,116, 68,101, 98,117,103,
     78, 97,109,101,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 49");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIEnvironment","irr::gui::IGUIEnvironment","irr::IUnknown",tolua_collect_irr__gui__IGUIEnvironment);
    #else
    tolua_cclass(tolua_S,"IGUIEnvironment","irr::gui::IGUIEnvironment","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIEnvironment");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIEnvironment_delete00);
     tolua_function(tolua_S,"drawAll",tolua_IrrLua_irr_gui_IGUIEnvironment_drawAll00);
     tolua_function(tolua_S,"setFocus",tolua_IrrLua_irr_gui_IGUIEnvironment_setFocus00);
     tolua_function(tolua_S,"removeFocus",tolua_IrrLua_irr_gui_IGUIEnvironment_removeFocus00);
     tolua_function(tolua_S,"hasFocus",tolua_IrrLua_irr_gui_IGUIEnvironment_hasFocus00);
     tolua_function(tolua_S,"getVideoDriver",tolua_IrrLua_irr_gui_IGUIEnvironment_getVideoDriver00);
     tolua_function(tolua_S,"postEventFromUser",tolua_IrrLua_irr_gui_IGUIEnvironment_postEventFromUser00);
     tolua_function(tolua_S,"setUserEventReceiver",tolua_IrrLua_irr_gui_IGUIEnvironment_setUserEventReceiver00);
     tolua_function(tolua_S,"getSkin",tolua_IrrLua_irr_gui_IGUIEnvironment_getSkin00);
     tolua_function(tolua_S,"setSkin",tolua_IrrLua_irr_gui_IGUIEnvironment_setSkin00);
     tolua_function(tolua_S,"createSkin",tolua_IrrLua_irr_gui_IGUIEnvironment_createSkin00);
     tolua_function(tolua_S,"getFont",tolua_IrrLua_irr_gui_IGUIEnvironment_getFont00);
     tolua_function(tolua_S,"getBuiltInFont",tolua_IrrLua_irr_gui_IGUIEnvironment_getBuiltInFont00);
     tolua_function(tolua_S,"getRootGUIElement",tolua_IrrLua_irr_gui_IGUIEnvironment_getRootGUIElement00);
     tolua_function(tolua_S,"addButton",tolua_IrrLua_irr_gui_IGUIEnvironment_addButton00);
     tolua_function(tolua_S,"addWindow",tolua_IrrLua_irr_gui_IGUIEnvironment_addWindow00);
     tolua_function(tolua_S,"addMessageBox",tolua_IrrLua_irr_gui_IGUIEnvironment_addMessageBox00);
     tolua_function(tolua_S,"addScrollBar",tolua_IrrLua_irr_gui_IGUIEnvironment_addScrollBar00);
     tolua_function(tolua_S,"addImage",tolua_IrrLua_irr_gui_IGUIEnvironment_addImage00);
     tolua_function(tolua_S,"addImage",tolua_IrrLua_irr_gui_IGUIEnvironment_addImage01);
     tolua_function(tolua_S,"addCheckBox",tolua_IrrLua_irr_gui_IGUIEnvironment_addCheckBox00);
     tolua_function(tolua_S,"addListBox",tolua_IrrLua_irr_gui_IGUIEnvironment_addListBox00);
     tolua_function(tolua_S,"addMeshViewer",tolua_IrrLua_irr_gui_IGUIEnvironment_addMeshViewer00);
     tolua_function(tolua_S,"addFileOpenDialog",tolua_IrrLua_irr_gui_IGUIEnvironment_addFileOpenDialog00);
     tolua_function(tolua_S,"addStaticText",tolua_IrrLua_irr_gui_IGUIEnvironment_addStaticText00);
     tolua_function(tolua_S,"addEditBox",tolua_IrrLua_irr_gui_IGUIEnvironment_addEditBox00);
     tolua_function(tolua_S,"addInOutFader",tolua_IrrLua_irr_gui_IGUIEnvironment_addInOutFader00);
     tolua_function(tolua_S,"addTabControl",tolua_IrrLua_irr_gui_IGUIEnvironment_addTabControl00);
     tolua_function(tolua_S,"addTab",tolua_IrrLua_irr_gui_IGUIEnvironment_addTab00);
     tolua_function(tolua_S,"addContextMenu",tolua_IrrLua_irr_gui_IGUIEnvironment_addContextMenu00);
     tolua_function(tolua_S,"addMenu",tolua_IrrLua_irr_gui_IGUIEnvironment_addMenu00);
     tolua_function(tolua_S,"addToolBar",tolua_IrrLua_irr_gui_IGUIEnvironment_addToolBar00);
     tolua_function(tolua_S,"addComboBox",tolua_IrrLua_irr_gui_IGUIEnvironment_addComboBox00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIEnvironment_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIEnvironment_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIEnvironment_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIElement","irr::gui::IGUIElement","irr::IUnknown",tolua_collect_irr__gui__IGUIElement);
    #else
    tolua_cclass(tolua_S,"IGUIElement","irr::gui::IGUIElement","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIElement");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_gui_IGUIElement_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_gui_IGUIElement_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_gui_IGUIElement_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIElement_delete00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIElement_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIElement_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIElement_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIElement_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIElement_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIElement_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIElement_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIElement_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIElement_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIElement_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIElement_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIElement_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIElement_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIElement_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIElement_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIElement_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIElement_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIElement_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIElement_setID00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIElement_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIElement_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIElement_getType00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIElement_OnEvent00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIElement_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIElement_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIElement_getDebugName00);
     tolua_variable(tolua_S,"__irr__IEventReceiver__",tolua_get_irr__gui__IGUIElement___irr__IEventReceiver__,NULL);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,115,101,116, 84,101,120,116,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,116,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 58,
    115,101,116, 84,101,120,116, 40,116,101,120,116, 41, 10,116,
    101,120,116, 32, 61, 32,116,101,120,116, 32,111,114, 32, 34,
     34, 10,108,111, 99, 97,108, 32,116,120,116, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,101,120,116, 41, 10, 95,
    115,101,116, 84,101,120,116, 40,115,101,108,102, 44, 32,116,
    120,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,
    114, 40,116,120,116, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95,103,101,116, 84,101,120,116, 32, 61, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,
    110,116, 46,103,101,116, 84,101,120,116, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 58,103,101,116, 84,101,
    120,116, 40, 41, 10,108,111, 99, 97,108, 32,116,120,116, 32,
     61, 32, 95,103,101,116, 84,101,120,116, 40,115,101,108,102,
     41, 10,105,102, 32,116,121,112,101, 40,116,120,116, 41, 32,
     61, 61, 32, 34,115,116,114,105,110,103, 34, 32,116,104,101,
    110, 10,114,101,116,117,114,110, 32,116,120,116, 10,101,110,
    100, 10,114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,
    115,116, 46,119, 99,104, 97,114, 95,116, 95,112,116,114, 95,
    116,111, 95,115,116,100, 95,115,116,114,105,110,103, 40,116,
    120,116, 41, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 50");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUICheckBox","irr::gui::IGUICheckBox","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUICheckBox);
    #else
    tolua_cclass(tolua_S,"IGUICheckBox","irr::gui::IGUICheckBox","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUICheckBox");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUICheckBox_delete00);
     tolua_function(tolua_S,"setChecked",tolua_IrrLua_irr_gui_IGUICheckBox_setChecked00);
     tolua_function(tolua_S,"isChecked",tolua_IrrLua_irr_gui_IGUICheckBox_isChecked00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUICheckBox_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUICheckBox_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUICheckBox_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUICheckBox_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUICheckBox_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUICheckBox_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUICheckBox_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUICheckBox_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUICheckBox_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUICheckBox_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUICheckBox_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUICheckBox_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUICheckBox_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUICheckBox_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUICheckBox_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUICheckBox_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUICheckBox_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUICheckBox_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUICheckBox_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUICheckBox_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUICheckBox_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUICheckBox_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUICheckBox_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUICheckBox_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUICheckBox_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 67,104,
    101, 99,107, 66,111,120, 46,115,101,116, 84,101,120,116, 32,
     61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,
    108,101,109,101,110,116, 46,115,101,116, 84,101,120,116, 10,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 67,104,101,
     99,107, 66,111,120, 46,103,101,116, 84,101,120,116, 32, 61,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,
    101,109,101,110,116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 51");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIContextMenu","irr::gui::IGUIContextMenu","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIContextMenu);
    #else
    tolua_cclass(tolua_S,"IGUIContextMenu","irr::gui::IGUIContextMenu","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIContextMenu");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIContextMenu_delete00);
     tolua_function(tolua_S,"getItemCount",tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCount00);
     tolua_function(tolua_S,"addItem",tolua_IrrLua_irr_gui_IGUIContextMenu_addItem00);
     tolua_function(tolua_S,"addSeparator",tolua_IrrLua_irr_gui_IGUIContextMenu_addSeparator00);
     tolua_function(tolua_S,"getItemText",tolua_IrrLua_irr_gui_IGUIContextMenu_getItemText00);
     tolua_function(tolua_S,"setItemText",tolua_IrrLua_irr_gui_IGUIContextMenu_setItemText00);
     tolua_function(tolua_S,"isItemEnabled",tolua_IrrLua_irr_gui_IGUIContextMenu_isItemEnabled00);
     tolua_function(tolua_S,"setItemEnabled",tolua_IrrLua_irr_gui_IGUIContextMenu_setItemEnabled00);
     tolua_function(tolua_S,"removeItem",tolua_IrrLua_irr_gui_IGUIContextMenu_removeItem00);
     tolua_function(tolua_S,"removeAllItems",tolua_IrrLua_irr_gui_IGUIContextMenu_removeAllItems00);
     tolua_function(tolua_S,"getSelectedItem",tolua_IrrLua_irr_gui_IGUIContextMenu_getSelectedItem00);
     tolua_function(tolua_S,"getItemCommandId",tolua_IrrLua_irr_gui_IGUIContextMenu_getItemCommandId00);
     tolua_function(tolua_S,"setItemCommandId",tolua_IrrLua_irr_gui_IGUIContextMenu_setItemCommandId00);
     tolua_function(tolua_S,"getSubMenu",tolua_IrrLua_irr_gui_IGUIContextMenu_getSubMenu00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIContextMenu_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIContextMenu_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIContextMenu_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIContextMenu_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIContextMenu_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIContextMenu_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIContextMenu_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIContextMenu_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIContextMenu_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIContextMenu_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIContextMenu_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIContextMenu_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIContextMenu_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIContextMenu_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIContextMenu_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIContextMenu_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIContextMenu_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIContextMenu_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIContextMenu_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIContextMenu_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIContextMenu_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIContextMenu_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIContextMenu_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIContextMenu_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIContextMenu_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 73,116,101,109,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     67,111,110,116,101,120,116, 77,101,110,117, 46, 97,100,100,
     73,116,101,109, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 67,111,110,116,
    101,120,116, 77,101,110,117, 58, 97,100,100, 73,116,101,109,
     40,116,101,120,116, 44, 32, 99,111,109,109, 97,110,100, 73,
    100, 44, 32,101,110, 97, 98,108,101,100, 44, 32,104, 97,115,
     83,117, 98, 77,101,110,117, 41, 10, 99,111,109,109, 97,110,
    100, 73,100, 32, 61, 32, 99,111,109,109, 97,110,100, 73,100,
     32,111,114, 32, 45, 49, 10,101,110, 97, 98,108,101,100, 32,
     61, 32,101,110, 97, 98,108,101,100, 32,111,114, 32,116,114,
    117,101, 10,104, 97,115, 83,117, 98, 77,101,110,117, 32, 61,
     32,104, 97,115, 83,117, 98, 77,101,110,117, 32,111,114, 32,
    102, 97,108,115,101, 10,116,101,120,116, 32, 61, 32,116,101,
    120,116, 32,111,114, 32, 34, 34, 10,108,111, 99, 97,108, 32,
    116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,
    116,111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,
    116,101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95, 97,100,100, 73,116,101,109, 40,115,101,108,
    102, 44, 32,116,120,116, 44, 32, 99,111,109,109, 97,110,100,
     73,100, 44, 32,101,110, 97, 98,108,101,100, 44, 32,104, 97,
    115, 83,117, 98, 77,101,110,117, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,120,116, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95,103,101,116, 73,116,101,109, 84,101,120,
    116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 67,111,110,116,101,120,116, 77,101,110,117, 46,103,101,
    116, 73,116,101,109, 84,101,120,116, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 67,111,110,116,101,120,116, 77,101,110,117, 58,103,101,
    116, 73,116,101,109, 84,101,120,116, 40,105,100,120, 41, 10,
    114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116,
     46,119, 99,104, 97,114, 95,116, 95,112,116,114, 95,116,111,
     95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,
    116, 73,116,101,109, 84,101,120,116, 40,115,101,108,102, 44,
     32,105,100,120, 41, 41, 10,101,110,100, 10,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 67,111,110,116,101,120,116,
     77,101,110,117, 46,115,101,116, 84,101,120,116, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,
    109,101,110,116, 46,115,101,116, 84,101,120,116, 10,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 67,111,110,116,101,
    120,116, 77,101,110,117, 46,103,101,116, 84,101,120,116, 32,
     61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,
    108,101,109,101,110,116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 52");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIComboBox","irr::gui::IGUIComboBox","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIComboBox);
    #else
    tolua_cclass(tolua_S,"IGUIComboBox","irr::gui::IGUIComboBox","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIComboBox");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIComboBox_delete00);
     tolua_function(tolua_S,"getItemCount",tolua_IrrLua_irr_gui_IGUIComboBox_getItemCount00);
     tolua_function(tolua_S,"getItem",tolua_IrrLua_irr_gui_IGUIComboBox_getItem00);
     tolua_function(tolua_S,"addItem",tolua_IrrLua_irr_gui_IGUIComboBox_addItem00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_gui_IGUIComboBox_clear00);
     tolua_function(tolua_S,"getSelected",tolua_IrrLua_irr_gui_IGUIComboBox_getSelected00);
     tolua_function(tolua_S,"setSelected",tolua_IrrLua_irr_gui_IGUIComboBox_setSelected00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIComboBox_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIComboBox_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIComboBox_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIComboBox_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIComboBox_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIComboBox_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIComboBox_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIComboBox_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIComboBox_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIComboBox_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIComboBox_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIComboBox_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIComboBox_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIComboBox_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIComboBox_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIComboBox_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIComboBox_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIComboBox_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIComboBox_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIComboBox_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIComboBox_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIComboBox_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIComboBox_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIComboBox_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIComboBox_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 73,116,101,109,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     67,111,109, 98,111, 66,111,120, 46,103,101,116, 73,116,101,
    109, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 67,111,109, 98,111, 66,111,
    120, 58,103,101,116, 73,116,101,109, 40,105,100,120, 41, 10,
    114,101,116,117,114,110, 32,105,114,114, 46, 99, 97,115,116,
     46,119, 99,104, 97,114, 95,116, 95,112,116,114, 95,116,111,
     95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,101,
    116, 73,116,101,109, 40,115,101,108,102, 44, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95,115, 51, 50, 40,105,100,
    120, 41, 41, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95, 97,100,100, 73,116,101,109, 32, 61, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 67,111,109, 98,111, 66,111,
    120, 46, 97,100,100, 73,116,101,109, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 67,111,109, 98,111, 66,111,120, 58, 97,100,100, 73,116,
    101,109, 40,110, 97,109,101, 41, 10,108,111, 99, 97,108, 32,
    110,109, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,110,
     97,109,101, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95, 97,100,100, 73,116,101,109, 40,115,101,108,102,
     44, 32,110,109, 41, 10,105,114,114, 46, 99, 97,115,116, 46,
    100,101,108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,
    112,116,114, 40,110,109, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 67,111,109, 98,111, 66,111,120, 46,115,
    101,116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,
    105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,115,
    101,116, 84,101,120,116, 10,105,114,114, 46,103,117,105, 46,
     73, 71, 85, 73, 67,111,109, 98,111, 66,111,120, 46,103,101,
    116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,103,101,
    116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 53");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIFont","irr::gui::IGUIFont","irr::IUnknown",tolua_collect_irr__gui__IGUIFont);
    #else
    tolua_cclass(tolua_S,"IGUIFont","irr::gui::IGUIFont","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIFont");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIFont_delete00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIFont_draw00);
     tolua_function(tolua_S,"getDimension",tolua_IrrLua_irr_gui_IGUIFont_getDimension00);
     tolua_function(tolua_S,"getCharacterFromPos",tolua_IrrLua_irr_gui_IGUIFont_getCharacterFromPos00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIFont_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIFont_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIFont_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIEditBox","irr::gui::IGUIEditBox","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIEditBox);
    #else
    tolua_cclass(tolua_S,"IGUIEditBox","irr::gui::IGUIEditBox","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIEditBox");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIEditBox_delete00);
     tolua_function(tolua_S,"setOverrideFont",tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideFont00);
     tolua_function(tolua_S,"setOverrideColor",tolua_IrrLua_irr_gui_IGUIEditBox_setOverrideColor00);
     tolua_function(tolua_S,"enableOverrideColor",tolua_IrrLua_irr_gui_IGUIEditBox_enableOverrideColor00);
     tolua_function(tolua_S,"setMax",tolua_IrrLua_irr_gui_IGUIEditBox_setMax00);
     tolua_function(tolua_S,"getMax",tolua_IrrLua_irr_gui_IGUIEditBox_getMax00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIEditBox_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIEditBox_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIEditBox_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIEditBox_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIEditBox_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIEditBox_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIEditBox_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIEditBox_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIEditBox_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIEditBox_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIEditBox_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIEditBox_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIEditBox_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIEditBox_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIEditBox_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIEditBox_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIEditBox_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIEditBox_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIEditBox_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIEditBox_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIEditBox_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIEditBox_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIEditBox_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIEditBox_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIEditBox_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,100,
    105,116, 66,111,120, 46,115,101,116, 84,101,120,116, 32, 61,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,
    101,109,101,110,116, 46,115,101,116, 84,101,120,116, 10,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,100,105,116,
     66,111,120, 46,103,101,116, 84,101,120,116, 32, 61, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,
    101,110,116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 54");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIFileOpenDialog","irr::gui::IGUIFileOpenDialog","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIFileOpenDialog);
    #else
    tolua_cclass(tolua_S,"IGUIFileOpenDialog","irr::gui::IGUIFileOpenDialog","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIFileOpenDialog");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_delete00);
     tolua_function(tolua_S,"getFilename",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getFilename00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIFileOpenDialog_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 70,105,108,101,
    110, 97,109,101, 32, 61, 32,105,114,114, 46,103,117,105, 46,
     73, 71, 85, 73, 70,105,108,101, 79,112,101,110, 68,105, 97,
    108,111,103, 46,103,101,116, 70,105,108,101,110, 97,109,101,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 70,105,108,101, 79,112,101,110,
     68,105, 97,108,111,103, 58,103,101,116, 70,105,108,101,110,
     97,109,101, 40, 41, 10,114,101,116,117,114,110, 32,105,114,
    114, 46, 99, 97,115,116, 46,119, 99,104, 97,114, 95,116, 95,
    112,116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,
    110,103, 40, 95,103,101,116, 70,105,108,101,110, 97,109,101,
     40,115,101,108,102, 41, 41, 10,101,110,100, 10,105,114,114,
     46,103,117,105, 46, 73, 71, 85, 73, 70,105,108,101, 79,112,
    101,110, 68,105, 97,108,111,103, 46,115,101,116, 84,101,120,
    116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,
    116, 10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 70,
    105,108,101, 79,112,101,110, 68,105, 97,108,111,103, 46,103,
    101,116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,
    105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,103,
    101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 55");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIImage","irr::gui::IGUIImage","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIImage);
    #else
    tolua_cclass(tolua_S,"IGUIImage","irr::gui::IGUIImage","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIImage");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIImage_delete00);
     tolua_function(tolua_S,"setImage",tolua_IrrLua_irr_gui_IGUIImage_setImage00);
     tolua_function(tolua_S,"setUseAlphaChannel",tolua_IrrLua_irr_gui_IGUIImage_setUseAlphaChannel00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIImage_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIImage_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIImage_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIImage_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIImage_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIImage_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIImage_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIImage_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIImage_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIImage_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIImage_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIImage_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIImage_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIImage_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIImage_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIImage_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIImage_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIImage_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIImage_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIImage_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIImage_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIImage_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIImage_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIImage_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIImage_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIImage_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 73,109,
     97,103,101, 46,115,101,116, 84,101,120,116, 32, 61, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,
    101,110,116, 46,115,101,116, 84,101,120,116, 10,105,114,114,
     46,103,117,105, 46, 73, 71, 85, 73, 73,109, 97,103,101, 46,
    103,101,116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,
    103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 56");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIInOutFader","irr::gui::IGUIInOutFader","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIInOutFader);
    #else
    tolua_cclass(tolua_S,"IGUIInOutFader","irr::gui::IGUIInOutFader","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIInOutFader");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIInOutFader_delete00);
     tolua_function(tolua_S,"getColor",tolua_IrrLua_irr_gui_IGUIInOutFader_getColor00);
     tolua_function(tolua_S,"setColor",tolua_IrrLua_irr_gui_IGUIInOutFader_setColor00);
     tolua_function(tolua_S,"fadeIn",tolua_IrrLua_irr_gui_IGUIInOutFader_fadeIn00);
     tolua_function(tolua_S,"fadeOut",tolua_IrrLua_irr_gui_IGUIInOutFader_fadeOut00);
     tolua_function(tolua_S,"isReady",tolua_IrrLua_irr_gui_IGUIInOutFader_isReady00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIInOutFader_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIInOutFader_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIInOutFader_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIInOutFader_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIInOutFader_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIInOutFader_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIInOutFader_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIInOutFader_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIInOutFader_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIInOutFader_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIInOutFader_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIInOutFader_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIInOutFader_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIInOutFader_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIInOutFader_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIInOutFader_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIInOutFader_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIInOutFader_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIInOutFader_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIInOutFader_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIInOutFader_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIInOutFader_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIInOutFader_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIInOutFader_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIInOutFader_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 73,110,
     79,117,116, 70, 97,100,101,114, 46,115,101,116, 84,101,120,
    116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,
    116, 10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 73,
    110, 79,117,116, 70, 97,100,101,114, 46,103,101,116, 84,101,
    120,116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 46,103,101,116, 84,101,
    120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 57");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIListBox","irr::gui::IGUIListBox","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIListBox);
    #else
    tolua_cclass(tolua_S,"IGUIListBox","irr::gui::IGUIListBox","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIListBox");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIListBox_delete00);
     tolua_function(tolua_S,"getItemCount",tolua_IrrLua_irr_gui_IGUIListBox_getItemCount00);
     tolua_function(tolua_S,"getListItem",tolua_IrrLua_irr_gui_IGUIListBox_getListItem00);
     tolua_function(tolua_S,"addItem",tolua_IrrLua_irr_gui_IGUIListBox_addItem00);
     tolua_function(tolua_S,"addItem",tolua_IrrLua_irr_gui_IGUIListBox_addItem01);
     tolua_function(tolua_S,"setIconFont",tolua_IrrLua_irr_gui_IGUIListBox_setIconFont00);
     tolua_function(tolua_S,"clear",tolua_IrrLua_irr_gui_IGUIListBox_clear00);
     tolua_function(tolua_S,"getSelected",tolua_IrrLua_irr_gui_IGUIListBox_getSelected00);
     tolua_function(tolua_S,"setSelected",tolua_IrrLua_irr_gui_IGUIListBox_setSelected00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIListBox_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIListBox_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIListBox_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIListBox_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIListBox_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIListBox_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIListBox_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIListBox_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIListBox_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIListBox_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIListBox_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIListBox_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIListBox_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIListBox_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIListBox_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIListBox_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIListBox_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIListBox_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIListBox_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIListBox_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIListBox_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIListBox_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIListBox_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIListBox_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIListBox_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIListBox_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 73,116,101,109,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     76,105,115,116, 66,111,120, 46, 97,100,100, 73,116,101,109,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 76,105,115,116, 66,111,120, 58,
     97,100,100, 73,116,101,109, 40,116,101,120,116, 41, 10,116,
    101,120,116, 32, 61, 32,116,101,120,116, 32,111,114, 32, 34,
     34, 10,108,111, 99, 97,108, 32,116,120,116, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,101,120,116, 41, 10,108,
    111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100,
     73,116,101,109, 40,115,101,108,102, 44, 32,116,120,116, 41,
     10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,
    101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,
    120,116, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,
    101,110,100, 10,108,111, 99, 97,108, 32, 95,115,101,116, 83,
    101,108,101, 99,116,101,100, 32, 61, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 76,105,115,116, 66,111,120, 46,
    115,101,116, 83,101,108,101, 99,116,101,100, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,103,117,105, 46, 73,
     71, 85, 73, 76,105,115,116, 66,111,120, 58,115,101,116, 83,
    101,108,101, 99,116,101,100, 40,105,100, 41, 10,105,100, 32,
     61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,101,116,117,
    114,110, 32, 95,115,101,116, 83,101,108,101, 99,116,101,100,
     40,115,101,108,102, 44, 32,105,100, 41, 10,101,110,100, 10,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 76,105,115,
    116, 66,111,120, 46,115,101,116, 84,101,120,116, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,
    109,101,110,116, 46,115,101,116, 84,101,120,116, 10,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 76,105,115,116, 66,
    111,120, 46,103,101,116, 84,101,120,116, 32, 61, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,
    110,116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 58");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIMeshViewer","irr::gui::IGUIMeshViewer","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIMeshViewer);
    #else
    tolua_cclass(tolua_S,"IGUIMeshViewer","irr::gui::IGUIMeshViewer","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIMeshViewer");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIMeshViewer_delete00);
     tolua_function(tolua_S,"setMesh",tolua_IrrLua_irr_gui_IGUIMeshViewer_setMesh00);
     tolua_function(tolua_S,"setMaterial",tolua_IrrLua_irr_gui_IGUIMeshViewer_setMaterial00);
     tolua_function(tolua_S,"getMaterial",tolua_IrrLua_irr_gui_IGUIMeshViewer_getMaterial00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIMeshViewer_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIMeshViewer_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIMeshViewer_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIMeshViewer_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIMeshViewer_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIMeshViewer_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIMeshViewer_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIMeshViewer_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIMeshViewer_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIMeshViewer_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIMeshViewer_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIMeshViewer_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIMeshViewer_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIMeshViewer_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIMeshViewer_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIMeshViewer_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIMeshViewer_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIMeshViewer_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIMeshViewer_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIMeshViewer_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIMeshViewer_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIMeshViewer_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIMeshViewer_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIMeshViewer_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIMeshViewer_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 77,101,
    115,104, 86,105,101,119,101,114, 46,115,101,116, 84,101,120,
    116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,
    116, 10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 77,
    101,115,104, 86,105,101,119,101,114, 46,103,101,116, 84,101,
    120,116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 46,103,101,116, 84,101,
    120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 59");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIScrollBar","irr::gui::IGUIScrollBar","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIScrollBar);
    #else
    tolua_cclass(tolua_S,"IGUIScrollBar","irr::gui::IGUIScrollBar","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIScrollBar");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIScrollBar_delete00);
     tolua_function(tolua_S,"setMax",tolua_IrrLua_irr_gui_IGUIScrollBar_setMax00);
     tolua_function(tolua_S,"getPos",tolua_IrrLua_irr_gui_IGUIScrollBar_getPos00);
     tolua_function(tolua_S,"setPos",tolua_IrrLua_irr_gui_IGUIScrollBar_setPos00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIScrollBar_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIScrollBar_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIScrollBar_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIScrollBar_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIScrollBar_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIScrollBar_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIScrollBar_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIScrollBar_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIScrollBar_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIScrollBar_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIScrollBar_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIScrollBar_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIScrollBar_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIScrollBar_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIScrollBar_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIScrollBar_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIScrollBar_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIScrollBar_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIScrollBar_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIScrollBar_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIScrollBar_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIScrollBar_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIScrollBar_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIScrollBar_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIScrollBar_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 83, 99,
    114,111,108,108, 66, 97,114, 46,115,101,116, 84,101,120,116,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,116,
     10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 83, 99,
    114,111,108,108, 66, 97,114, 46,103,101,116, 84,101,120,116,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,108,101,109,101,110,116, 46,103,101,116, 84,101,120,116,
    32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 60");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIStaticText","irr::gui::IGUIStaticText","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIStaticText);
    #else
    tolua_cclass(tolua_S,"IGUIStaticText","irr::gui::IGUIStaticText","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIStaticText");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIStaticText_delete00);
     tolua_function(tolua_S,"setOverrideFont",tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideFont00);
     tolua_function(tolua_S,"setOverrideColor",tolua_IrrLua_irr_gui_IGUIStaticText_setOverrideColor00);
     tolua_function(tolua_S,"enableOverrideColor",tolua_IrrLua_irr_gui_IGUIStaticText_enableOverrideColor00);
     tolua_function(tolua_S,"setWordWrap",tolua_IrrLua_irr_gui_IGUIStaticText_setWordWrap00);
     tolua_function(tolua_S,"getTextHeight",tolua_IrrLua_irr_gui_IGUIStaticText_getTextHeight00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIStaticText_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIStaticText_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIStaticText_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIStaticText_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIStaticText_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIStaticText_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIStaticText_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIStaticText_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIStaticText_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIStaticText_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIStaticText_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIStaticText_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIStaticText_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIStaticText_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIStaticText_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIStaticText_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIStaticText_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIStaticText_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIStaticText_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIStaticText_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIStaticText_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIStaticText_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIStaticText_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIStaticText_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIStaticText_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 83,116,
     97,116,105, 99, 84,101,120,116, 46,115,101,116, 84,101,120,
    116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,
    116, 10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 83,
    116, 97,116,105, 99, 84,101,120,116, 46,103,101,116, 84,101,
    120,116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 46,103,101,116, 84,101,
    120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 61");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUITab","irr::gui::IGUITab","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUITab);
    #else
    tolua_cclass(tolua_S,"IGUITab","irr::gui::IGUITab","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUITab");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUITab_delete00);
     tolua_function(tolua_S,"getNumber",tolua_IrrLua_irr_gui_IGUITab_getNumber00);
     tolua_function(tolua_S,"setDrawBackground",tolua_IrrLua_irr_gui_IGUITab_setDrawBackground00);
     tolua_function(tolua_S,"setBackgroundColor",tolua_IrrLua_irr_gui_IGUITab_setBackgroundColor00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUITab_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUITab_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUITab_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUITab_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUITab_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUITab_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUITab_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUITab_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUITab_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUITab_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUITab_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUITab_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUITab_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUITab_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUITab_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUITab_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUITab_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUITab_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUITab_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUITab_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUITab_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUITab_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUITab_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUITab_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUITab_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUITab_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUITabControl","irr::gui::IGUITabControl","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUITabControl);
    #else
    tolua_cclass(tolua_S,"IGUITabControl","irr::gui::IGUITabControl","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUITabControl");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUITabControl_delete00);
     tolua_function(tolua_S,"addTab",tolua_IrrLua_irr_gui_IGUITabControl_addTab00);
     tolua_function(tolua_S,"getTabcount",tolua_IrrLua_irr_gui_IGUITabControl_getTabcount00);
     tolua_function(tolua_S,"getTab",tolua_IrrLua_irr_gui_IGUITabControl_getTab00);
     tolua_function(tolua_S,"setActiveTab",tolua_IrrLua_irr_gui_IGUITabControl_setActiveTab00);
     tolua_function(tolua_S,"getActiveTab",tolua_IrrLua_irr_gui_IGUITabControl_getActiveTab00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUITabControl_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUITabControl_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUITabControl_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUITabControl_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUITabControl_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUITabControl_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUITabControl_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUITabControl_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUITabControl_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUITabControl_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUITabControl_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUITabControl_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUITabControl_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUITabControl_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUITabControl_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUITabControl_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUITabControl_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUITabControl_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUITabControl_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUITabControl_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUITabControl_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUITabControl_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUITabControl_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUITabControl_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUITabControl_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUITabControl_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 84, 97, 98, 32,
     61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 84,
     97, 98, 67,111,110,116,114,111,108, 46, 97,100,100, 84, 97,
     98, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 84, 97, 98, 67,111,110,116,
    114,111,108, 58, 97,100,100, 84, 97, 98, 40, 99, 97,112,116,
    105,111,110, 44, 32,105,100, 41, 10,105,100, 32, 61, 32,105,
    100, 32,111,114, 32, 45, 49, 10,108,111, 99, 97,108, 32,116,
    120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40, 99,
     97,112,116,105,111,110, 41, 10,108,111, 99, 97,108, 32,114,
    101,116, 32, 61, 32, 95, 97,100,100, 84, 97, 98, 40,115,101,
    108,102, 44, 32,116,120,116, 44, 32,105,100, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,119,
     99,104, 97,114, 95,116, 95,112,116,114, 40,116,120,116, 41,
     10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,
     10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 84, 97,
     98, 46,115,101,116, 84,101,120,116, 32, 61, 32,105,114,114,
     46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,
    116, 46,115,101,116, 84,101,120,116, 10,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 84, 97, 98, 46,103,101,116, 84,
    101,120,116, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73,
     71, 85, 73, 69,108,101,109,101,110,116, 46,103,101,116, 84,
    101,120,116, 10,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 84, 97, 98, 67,111,110,116,114,111,108, 46,115,101,116,
     84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,105, 46,
     73, 71, 85, 73, 69,108,101,109,101,110,116, 46,115,101,116,
     84,101,120,116, 10,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 84, 97, 98, 67,111,110,116,114,111,108, 46,103,101,
    116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,103,101,
    116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 62");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    tolua_constant(tolua_S,"EMBF_OK",irr::gui::EMBF_OK);
    tolua_constant(tolua_S,"EMBF_CANCEL",irr::gui::EMBF_CANCEL);
    tolua_constant(tolua_S,"EMBF_YES",irr::gui::EMBF_YES);
    tolua_constant(tolua_S,"EMBF_NO",irr::gui::EMBF_NO);
    tolua_constant(tolua_S,"EMBF_FORCE_32BIT",irr::gui::EMBF_FORCE_32BIT);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIWindow","irr::gui::IGUIWindow","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIWindow);
    #else
    tolua_cclass(tolua_S,"IGUIWindow","irr::gui::IGUIWindow","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIWindow");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIWindow_delete00);
     tolua_function(tolua_S,"getCloseButton",tolua_IrrLua_irr_gui_IGUIWindow_getCloseButton00);
     tolua_function(tolua_S,"getMinimizeButton",tolua_IrrLua_irr_gui_IGUIWindow_getMinimizeButton00);
     tolua_function(tolua_S,"getMaximizeButton",tolua_IrrLua_irr_gui_IGUIWindow_getMaximizeButton00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIWindow_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIWindow_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIWindow_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIWindow_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIWindow_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIWindow_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIWindow_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIWindow_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIWindow_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIWindow_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIWindow_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIWindow_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIWindow_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIWindow_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIWindow_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIWindow_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIWindow_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIWindow_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIWindow_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIWindow_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIWindow_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIWindow_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIWindow_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIWindow_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIWindow_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIWindow_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 87,105,
    110,100,111,119, 46,115,101,116, 84,101,120,116, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,
    109,101,110,116, 46,115,101,116, 84,101,120,116, 10,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 87,105,110,100,111,
    119, 46,103,101,116, 84,101,120,116, 32, 61, 32,105,114,114,
     46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,
    116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 63");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIButton","irr::gui::IGUIButton","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIButton);
    #else
    tolua_cclass(tolua_S,"IGUIButton","irr::gui::IGUIButton","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIButton");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIButton_delete00);
     tolua_function(tolua_S,"setOverrideFont",tolua_IrrLua_irr_gui_IGUIButton_setOverrideFont00);
     tolua_function(tolua_S,"setImage",tolua_IrrLua_irr_gui_IGUIButton_setImage00);
     tolua_function(tolua_S,"setImage",tolua_IrrLua_irr_gui_IGUIButton_setImage01);
     tolua_function(tolua_S,"setPressedImage",tolua_IrrLua_irr_gui_IGUIButton_setPressedImage00);
     tolua_function(tolua_S,"setPressedImage",tolua_IrrLua_irr_gui_IGUIButton_setPressedImage01);
     tolua_function(tolua_S,"setIsPushButton",tolua_IrrLua_irr_gui_IGUIButton_setIsPushButton00);
     tolua_function(tolua_S,"setPressed",tolua_IrrLua_irr_gui_IGUIButton_setPressed00);
     tolua_function(tolua_S,"isPressed",tolua_IrrLua_irr_gui_IGUIButton_isPressed00);
     tolua_function(tolua_S,"setUseAlphaChannel",tolua_IrrLua_irr_gui_IGUIButton_setUseAlphaChannel00);
     tolua_function(tolua_S,"getUseAlphaChannel",tolua_IrrLua_irr_gui_IGUIButton_getUseAlphaChannel00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIButton_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIButton_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIButton_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIButton_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIButton_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIButton_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIButton_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIButton_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIButton_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIButton_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIButton_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIButton_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIButton_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIButton_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIButton_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIButton_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIButton_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIButton_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIButton_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIButton_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIButton_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIButton_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIButton_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIButton_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIButton_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIButton_getDebugName00);
    tolua_endmodule(tolua_S);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUIToolBar","irr::gui::IGUIToolBar","irr::gui::IGUIElement",tolua_collect_irr__gui__IGUIToolBar);
    #else
    tolua_cclass(tolua_S,"IGUIToolBar","irr::gui::IGUIToolBar","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUIToolBar");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUIToolBar_delete00);
     tolua_function(tolua_S,"addButton",tolua_IrrLua_irr_gui_IGUIToolBar_addButton00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IGUIToolBar_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IGUIToolBar_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IGUIToolBar_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IGUIToolBar_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IGUIToolBar_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IGUIToolBar_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IGUIToolBar_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IGUIToolBar_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IGUIToolBar_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IGUIToolBar_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IGUIToolBar_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IGUIToolBar_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IGUIToolBar_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IGUIToolBar_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IGUIToolBar_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IGUIToolBar_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IGUIToolBar_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IGUIToolBar_setID00);
     tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_gui_IGUIToolBar_OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IGUIToolBar_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IGUIToolBar_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IGUIToolBar_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUIToolBar_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUIToolBar_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUIToolBar_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 66,117,116,116,
    111,110, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 84,111,111,108, 66, 97,114, 46, 97,100,100, 66,117,
    116,116,111,110, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 84,111,111,108,
     66, 97,114, 58, 97,100,100, 66,117,116,116,111,110, 40,105,
    100, 44, 32,116,101,120,116, 44, 32,105,109,103, 44, 32,112,
    114,101,115,115,101,100,105,109,103, 44, 32,105,115, 80,117,
    115,104, 66,117,116,116,111,110, 44, 32,117,115,101, 65,108,
    112,104, 97, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114,
     32, 45, 49, 10,116,101,120,116, 32, 61, 32,116,101,120,116,
     32,111,114, 32, 34, 34, 10,108,111, 99, 97,108, 32,116,120,
    116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111,
     95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,101,
    120,116, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61,
     32, 95, 97,100,100, 66,117,116,116,111,110, 40,115,101,108,
    102, 44, 32,105,100, 44, 32,116,120,116, 44, 32,105,109,103,
     44, 32,112,114,101,115,115,101,100,105,109,103, 44, 32,105,
    115, 80,117,115,104, 66,117,116,116,111,110, 44, 32,117,115,
    101, 65,108,112,104, 97, 41, 10,105,114,114, 46, 99, 97,115,
    116, 46,100,101,108,101,116,101, 95,119, 99,104, 97,114, 95,
    116, 95,112,116,114, 40,116,120,116, 41, 10,114,101,116,117,
    114,110, 32,114,101,116, 10,101,110,100, 10,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 84,111,111,108, 66, 97,114,
     46,115,101,116, 84,101,120,116, 32, 61, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116,
     46,115,101,116, 84,101,120,116, 10,105,114,114, 46,103,117,
    105, 46, 73, 71, 85, 73, 84,111,111,108, 66, 97,114, 46,103,
    101,116, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,
    105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 46,103,
    101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 64");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 66,117,
    116,116,111,110, 46,115,101,116, 84,101,120,116, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,
    109,101,110,116, 46,115,101,116, 84,101,120,116, 10,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 66,117,116,116,111,
    110, 46,103,101,116, 84,101,120,116, 32, 61, 32,105,114,114,
     46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,
    116, 46,103,101,116, 84,101,120,116,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 65");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,100,114, 97,119, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 70,111,110,
    116, 46,100,114, 97,119, 10,102,117,110, 99,116,105,111,110,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 70,111,
    110,116, 58,100,114, 97,119, 40,116,101,120,116, 44, 32,112,
    111,115,105,116,105,111,110, 44, 32, 99,111,108,111,114, 44,
     32,104, 99,101,110,116, 44, 32,118, 99,101,110,116,101,114,
     44, 32, 99,108,105,112, 41, 10,116,101,120,116, 32, 61, 32,
    116,101,120,116, 32,111,114, 32, 34, 34, 10,112,111,115,105,
    116,105,111,110, 32, 61, 32,112,111,115,105,116,105,111,110,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,112,111,
    115,105,116,105,111,110, 50,100, 40, 48, 44, 48, 41, 10, 99,
    111,108,111,114, 32, 61, 32, 99,111,108,111,114, 32,111,114,
     32,105,114,114, 46,118,105,100,101,111, 46, 83, 67,111,108,
    111,114, 40, 48, 44, 48, 44, 48, 44, 48, 41, 10,108,111, 99,
     97,108, 32,116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 40,116,101,120,116, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95,100,114, 97,119, 40,115,101,108,
    102, 44, 32,116,120,116, 44, 32,112,111,115,105,116,105,111,
    110, 44, 32, 99,111,108,111,114, 44, 32,104, 99,101,110,116,
     44, 32,118, 99,101,110,116,101,114, 44, 32, 99,108,105,112,
     41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,
    116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,
    116,120,116, 41, 10,114,101,116,117,114,110, 32,114,101,116,
     10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 66");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    tolua_constant(tolua_S,"EGST_WINDOWS_CLASSIC",irr::gui::EGST_WINDOWS_CLASSIC);
    tolua_constant(tolua_S,"EGST_WINDOWS_METALLIC",irr::gui::EGST_WINDOWS_METALLIC);
    tolua_constant(tolua_S,"EGDC_3D_DARK_SHADOW",irr::gui::EGDC_3D_DARK_SHADOW);
    tolua_constant(tolua_S,"EGDC_3D_SHADOW",irr::gui::EGDC_3D_SHADOW);
    tolua_constant(tolua_S,"EGDC_3D_FACE",irr::gui::EGDC_3D_FACE);
    tolua_constant(tolua_S,"EGDC_3D_HIGH_LIGHT",irr::gui::EGDC_3D_HIGH_LIGHT);
    tolua_constant(tolua_S,"EGDC_3D_LIGHT",irr::gui::EGDC_3D_LIGHT);
    tolua_constant(tolua_S,"EGDC_ACTIVE_BORDER",irr::gui::EGDC_ACTIVE_BORDER);
    tolua_constant(tolua_S,"EGDC_ACTIVE_CAPTION",irr::gui::EGDC_ACTIVE_CAPTION);
    tolua_constant(tolua_S,"EGDC_APP_WORKSPACE",irr::gui::EGDC_APP_WORKSPACE);
    tolua_constant(tolua_S,"EGDC_BUTTON_TEXT",irr::gui::EGDC_BUTTON_TEXT);
    tolua_constant(tolua_S,"EGDC_GRAY_TEXT",irr::gui::EGDC_GRAY_TEXT);
    tolua_constant(tolua_S,"EGDC_HIGH_LIGHT",irr::gui::EGDC_HIGH_LIGHT);
    tolua_constant(tolua_S,"EGDC_HIGH_LIGHT_TEXT",irr::gui::EGDC_HIGH_LIGHT_TEXT);
    tolua_constant(tolua_S,"EGDC_INACTIVE_BORDER",irr::gui::EGDC_INACTIVE_BORDER);
    tolua_constant(tolua_S,"EGDC_INACTIVE_CAPTION",irr::gui::EGDC_INACTIVE_CAPTION);
    tolua_constant(tolua_S,"EGDC_TOOLTIP",irr::gui::EGDC_TOOLTIP);
    tolua_constant(tolua_S,"EGDC_SCROLLBAR",irr::gui::EGDC_SCROLLBAR);
    tolua_constant(tolua_S,"EGDC_WINDOW",irr::gui::EGDC_WINDOW);
    tolua_constant(tolua_S,"EGDC_COUNT",irr::gui::EGDC_COUNT);
    tolua_constant(tolua_S,"EGDS_SCROLLBAR_SIZE",irr::gui::EGDS_SCROLLBAR_SIZE);
    tolua_constant(tolua_S,"EGDS_MENU_HEIGHT",irr::gui::EGDS_MENU_HEIGHT);
    tolua_constant(tolua_S,"EGDS_WINDOW_BUTTON_WIDTH",irr::gui::EGDS_WINDOW_BUTTON_WIDTH);
    tolua_constant(tolua_S,"EGDS_CHECK_BOX_WIDTH",irr::gui::EGDS_CHECK_BOX_WIDTH);
    tolua_constant(tolua_S,"EGDS_MESSAGE_BOX_WIDTH",irr::gui::EGDS_MESSAGE_BOX_WIDTH);
    tolua_constant(tolua_S,"EGDS_MESSAGE_BOX_HEIGHT",irr::gui::EGDS_MESSAGE_BOX_HEIGHT);
    tolua_constant(tolua_S,"EGDS_BUTTON_WIDTH",irr::gui::EGDS_BUTTON_WIDTH);
    tolua_constant(tolua_S,"EGDS_BUTTON_HEIGHT",irr::gui::EGDS_BUTTON_HEIGHT);
    tolua_constant(tolua_S,"EGDS_COUNT",irr::gui::EGDS_COUNT);
    tolua_constant(tolua_S,"EGDT_MSG_BOX_OK",irr::gui::EGDT_MSG_BOX_OK);
    tolua_constant(tolua_S,"EGDT_MSG_BOX_CANCEL",irr::gui::EGDT_MSG_BOX_CANCEL);
    tolua_constant(tolua_S,"EGDT_MSG_BOX_YES",irr::gui::EGDT_MSG_BOX_YES);
    tolua_constant(tolua_S,"EGDT_MSG_BOX_NO",irr::gui::EGDT_MSG_BOX_NO);
    tolua_constant(tolua_S,"EGDT_COUNT",irr::gui::EGDT_COUNT);
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IGUISkin","irr::gui::IGUISkin","irr::IUnknown",tolua_collect_irr__gui__IGUISkin);
    #else
    tolua_cclass(tolua_S,"IGUISkin","irr::gui::IGUISkin","irr::IUnknown",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IGUISkin");
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IGUISkin_delete00);
     tolua_function(tolua_S,"getColor",tolua_IrrLua_irr_gui_IGUISkin_getColor00);
     tolua_function(tolua_S,"setColor",tolua_IrrLua_irr_gui_IGUISkin_setColor00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_gui_IGUISkin_getSize00);
     tolua_function(tolua_S,"getDefaultText",tolua_IrrLua_irr_gui_IGUISkin_getDefaultText00);
     tolua_function(tolua_S,"setDefaultText",tolua_IrrLua_irr_gui_IGUISkin_setDefaultText00);
     tolua_function(tolua_S,"setSize",tolua_IrrLua_irr_gui_IGUISkin_setSize00);
     tolua_function(tolua_S,"getFont",tolua_IrrLua_irr_gui_IGUISkin_getFont00);
     tolua_function(tolua_S,"setFont",tolua_IrrLua_irr_gui_IGUISkin_setFont00);
     tolua_function(tolua_S,"draw3DButtonPaneStandard",tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPaneStandard00);
     tolua_function(tolua_S,"draw3DButtonPanePressed",tolua_IrrLua_irr_gui_IGUISkin_draw3DButtonPanePressed00);
     tolua_function(tolua_S,"draw3DSunkenPane",tolua_IrrLua_irr_gui_IGUISkin_draw3DSunkenPane00);
     tolua_function(tolua_S,"draw3DWindowBackground",tolua_IrrLua_irr_gui_IGUISkin_draw3DWindowBackground00);
     tolua_function(tolua_S,"draw3DMenuPane",tolua_IrrLua_irr_gui_IGUISkin_draw3DMenuPane00);
     tolua_function(tolua_S,"draw3DToolBar",tolua_IrrLua_irr_gui_IGUISkin_draw3DToolBar00);
     tolua_function(tolua_S,"draw3DTabButton",tolua_IrrLua_irr_gui_IGUISkin_draw3DTabButton00);
     tolua_function(tolua_S,"draw3DTabBody",tolua_IrrLua_irr_gui_IGUISkin_draw3DTabBody00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IGUISkin_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IGUISkin_drop00);
     tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_gui_IGUISkin_getDebugName00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIGUISkin","irr::gui::IrrLuaIGUISkin","irr::gui::IGUISkin",tolua_collect_irr__gui__IrrLuaIGUISkin);
    #else
    tolua_cclass(tolua_S,"IrrLuaIGUISkin","irr::gui::IrrLuaIGUISkin","irr::gui::IGUISkin",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIGUISkin");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_delete00);
     tolua_function(tolua_S,"getColor",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getColor00);
     tolua_function(tolua_S,"setColor",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setColor00);
     tolua_function(tolua_S,"getSize",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getSize00);
     tolua_function(tolua_S,"getDefaultText",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getDefaultText00);
     tolua_function(tolua_S,"setDefaultText",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setDefaultText00);
     tolua_function(tolua_S,"setSize",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setSize00);
     tolua_function(tolua_S,"getFont",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_getFont00);
     tolua_function(tolua_S,"setFont",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_setFont00);
     tolua_function(tolua_S,"draw3DButtonPaneStandard",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPaneStandard00);
     tolua_function(tolua_S,"draw3DButtonPanePressed",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DButtonPanePressed00);
     tolua_function(tolua_S,"draw3DSunkenPane",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DSunkenPane00);
     tolua_function(tolua_S,"draw3DWindowBackground",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DWindowBackground00);
     tolua_function(tolua_S,"draw3DMenuPane",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DMenuPane00);
     tolua_function(tolua_S,"draw3DToolBar",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DToolBar00);
     tolua_function(tolua_S,"draw3DTabButton",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabButton00);
     tolua_function(tolua_S,"draw3DTabBody",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_draw3DTabBody00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_gui_IrrLuaIGUISkin_GetProxy00);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,103,117,105,115,107,105,110,
    112,114,111,120,121, 32, 61, 32,123,125, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,103,117,105, 46, 99,114,
    101, 97,116,101, 73, 71, 85, 73, 83,107,105,110, 40,100,101,
    102, 41, 10,108,111, 99, 97,108, 32,111, 32, 61, 32,123,125,
     10,102,111,114, 32,105, 44,118, 32,105,110, 32,112, 97,105,
    114,115, 40,100,101,102, 41, 32,100,111, 32,111, 91,105, 93,
     32, 61, 32,118, 32,101,110,100, 10,111, 46, 95, 95, 99, 95,
     99,108, 97,115,115, 32, 61, 32,105,114,114, 46,103,117,105,
     46, 73,114,114, 76,117, 97, 73, 71, 85, 73, 83,107,105,110,
     58,110,101,119, 40, 41, 10,116,111,108,117, 97, 46,105,110,
    104,101,114,105,116, 40,111, 44, 32,111, 46, 95, 95, 99, 95,
     99,108, 97,115,115, 41, 10,116,111,108,117, 97, 46,116, 97,
    107,101,111,119,110,101,114,115,104,105,112, 40,111, 41, 10,
    111, 46, 95, 95,105,110,100,101,120, 32, 61, 32,102,117,110,
     99,116,105,111,110, 32, 40,116, 44, 32,107, 41, 32,114,101,
    116,117,114,110, 32,114, 97,119,103,101,116, 40,116, 44, 34,
     95, 95, 99, 95, 99,108, 97,115,115, 34, 41, 91,107, 93, 32,
    101,110,100, 10,115,101,116,109,101,116, 97,116, 97, 98,108,
    101, 40,111, 44, 32,111, 41, 10,105,114,114, 46, 95, 95,105,
    103,117,105,115,107,105,110,112,114,111,120,121, 91,111, 46,
     95, 95, 99, 95, 99,108, 97,115,115, 58, 71,101,116, 80,114,
    111,120,121, 40, 41, 93, 32, 61, 32,111, 10,114,101,116,117,
    114,110, 32,111, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 67");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_constant(tolua_S,"EET_GUI_EVENT",irr::EET_GUI_EVENT);
   tolua_constant(tolua_S,"EET_MOUSE_INPUT_EVENT",irr::EET_MOUSE_INPUT_EVENT);
   tolua_constant(tolua_S,"EET_KEY_INPUT_EVENT",irr::EET_KEY_INPUT_EVENT);
   tolua_constant(tolua_S,"EET_LOG_TEXT_EVENT",irr::EET_LOG_TEXT_EVENT);
   tolua_constant(tolua_S,"EET_USER_EVENT",irr::EET_USER_EVENT);
   tolua_constant(tolua_S,"EMIE_LMOUSE_PRESSED_DOWN",irr::EMIE_LMOUSE_PRESSED_DOWN);
   tolua_constant(tolua_S,"EMIE_RMOUSE_PRESSED_DOWN",irr::EMIE_RMOUSE_PRESSED_DOWN);
   tolua_constant(tolua_S,"EMIE_MMOUSE_PRESSED_DOWN",irr::EMIE_MMOUSE_PRESSED_DOWN);
   tolua_constant(tolua_S,"EMIE_LMOUSE_LEFT_UP",irr::EMIE_LMOUSE_LEFT_UP);
   tolua_constant(tolua_S,"EMIE_RMOUSE_LEFT_UP",irr::EMIE_RMOUSE_LEFT_UP);
   tolua_constant(tolua_S,"EMIE_MMOUSE_LEFT_UP",irr::EMIE_MMOUSE_LEFT_UP);
   tolua_constant(tolua_S,"EMIE_MOUSE_MOVED",irr::EMIE_MOUSE_MOVED);
   tolua_constant(tolua_S,"EMIE_MOUSE_WHEEL",irr::EMIE_MOUSE_WHEEL);
   tolua_constant(tolua_S,"EMIE_COUNT",irr::EMIE_COUNT);
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    tolua_constant(tolua_S,"EGET_ELEMENT_FOCUS_LOST",irr::gui::EGET_ELEMENT_FOCUS_LOST);
    tolua_constant(tolua_S,"EGET_ELEMENT_HOVERED",irr::gui::EGET_ELEMENT_HOVERED);
    tolua_constant(tolua_S,"EGET_ELEMENT_LEFT",irr::gui::EGET_ELEMENT_LEFT);
    tolua_constant(tolua_S,"EGET_BUTTON_CLICKED",irr::gui::EGET_BUTTON_CLICKED);
    tolua_constant(tolua_S,"EGET_SCROLL_BAR_CHANGED",irr::gui::EGET_SCROLL_BAR_CHANGED);
    tolua_constant(tolua_S,"EGET_CHECKBOX_CHANGED",irr::gui::EGET_CHECKBOX_CHANGED);
    tolua_constant(tolua_S,"EGET_LISTBOX_CHANGED",irr::gui::EGET_LISTBOX_CHANGED);
    tolua_constant(tolua_S,"EGET_LISTBOX_SELECTED_AGAIN",irr::gui::EGET_LISTBOX_SELECTED_AGAIN);
    tolua_constant(tolua_S,"EGET_FILE_SELECTED",irr::gui::EGET_FILE_SELECTED);
    tolua_constant(tolua_S,"EGET_FILE_CHOOSE_DIALOG_CANCELLED",irr::gui::EGET_FILE_CHOOSE_DIALOG_CANCELLED);
    tolua_constant(tolua_S,"EGET_MESSAGEBOX_YES",irr::gui::EGET_MESSAGEBOX_YES);
    tolua_constant(tolua_S,"EGET_MESSAGEBOX_NO",irr::gui::EGET_MESSAGEBOX_NO);
    tolua_constant(tolua_S,"EGET_MESSAGEBOX_OK",irr::gui::EGET_MESSAGEBOX_OK);
    tolua_constant(tolua_S,"EGET_MESSAGEBOX_CANCEL",irr::gui::EGET_MESSAGEBOX_CANCEL);
    tolua_constant(tolua_S,"EGET_EDITBOX_ENTER",irr::gui::EGET_EDITBOX_ENTER);
    tolua_constant(tolua_S,"EGET_TAB_CHANGED",irr::gui::EGET_TAB_CHANGED);
    tolua_constant(tolua_S,"EGET_MENU_ITEM_SELECTED",irr::gui::EGET_MENU_ITEM_SELECTED);
    tolua_constant(tolua_S,"EGET_COMBO_BOX_CHANGED",irr::gui::EGET_COMBO_BOX_CHANGED);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"SEvent","irr::SEvent","",NULL);
   tolua_beginmodule(tolua_S,"SEvent");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"IEventReceiver","irr::IEventReceiver","",tolua_collect_irr__IEventReceiver);
   #else
   tolua_cclass(tolua_S,"IEventReceiver","irr::IEventReceiver","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"IEventReceiver");
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_IEventReceiver_delete00);
    tolua_function(tolua_S,"OnEvent",tolua_IrrLua_irr_IEventReceiver_OnEvent00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"IrrLuaEventReceiver","irr::IrrLuaEventReceiver","irr::IEventReceiver",tolua_collect_irr__IrrLuaEventReceiver);
   #else
   tolua_cclass(tolua_S,"IrrLuaEventReceiver","irr::IrrLuaEventReceiver","irr::IEventReceiver",NULL);
   #endif
   tolua_beginmodule(tolua_S,"IrrLuaEventReceiver");
    tolua_function(tolua_S,"new",tolua_IrrLua_irr_IrrLuaEventReceiver_new00);
    tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_IrrLuaEventReceiver_new00_local);
    tolua_function(tolua_S,".call",tolua_IrrLua_irr_IrrLuaEventReceiver_new00_local);
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_IrrLuaEventReceiver_delete00);
    tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_IrrLuaEventReceiver_GetProxy00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,105,101,118,101,110,116,114,101,
     99,101,105,118,101,114,112,114,111,120,121, 32, 61, 32,123,
    125, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
     99,114,101, 97,116,101, 73, 69,118,101,110,116, 82,101, 99,
    101,105,118,101,114, 40,100,101,102, 41, 10,108,111, 99, 97,
    108, 32,111, 32, 61, 32,123,125, 10,102,111,114, 32,105, 44,
    118, 32,105,110, 32,112, 97,105,114,115, 40,100,101,102, 41,
     32,100,111, 32,111, 91,105, 93, 32, 61, 32,118, 32,101,110,
    100, 10,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 32, 61,
     32,105,114,114, 46, 73,114,114, 76,117, 97, 69,118,101,110,
    116, 82,101, 99,101,105,118,101,114, 58,110,101,119, 40, 41,
     10,116,111,108,117, 97, 46,105,110,104,101,114,105,116, 40,
    111, 44, 32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 41,
     10,116,111,108,117, 97, 46,116, 97,107,101,111,119,110,101,
    114,115,104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,110,
    100,101,120, 32, 61, 32,102,117,110, 99,116,105,111,110, 32,
     40,116, 44, 32,107, 41, 32,114,101,116,117,114,110, 32,114,
     97,119,103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,108,
     97,115,115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,101,
    116,109,101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,111,
     41, 10,105,114,114, 46, 95, 95,105,101,118,101,110,116,114,
    101, 99,101,105,118,101,114,112,114,111,120,121, 91,111, 46,
     95, 95, 99, 95, 99,108, 97,115,115, 58, 71,101,116, 80,114,
    111,120,121, 40, 41, 93, 32, 61, 32,111, 10,114,101,116,117,
    114,110, 32,111, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 68");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 97,100,100, 83,116, 97,116,
    105, 99, 84,101,120,116, 32, 61, 32,105,114,114, 46,103,117,
    105, 46, 73, 71, 85, 73, 69,110,118,105,114,111,110,109,101,
    110,116, 46, 97,100,100, 83,116, 97,116,105, 99, 84,101,120,
    116, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,111,110,
    109,101,110,116, 58, 97,100,100, 83,116, 97,116,105, 99, 84,
    101,120,116, 40,116,101,120,116, 44, 32,114,101, 99,116, 44,
     32, 98,111,111,108, 49, 44, 32, 98,111,111,108, 50, 44, 32,
    114,111,111,116, 44, 32,105,100, 44, 32, 98,111,111,108, 51,
     32, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45,
     49, 10,116,101,120,116, 32, 61, 32,116,101,120,116, 32,111,
    114, 32, 34, 34, 10,114,101, 99,116, 32, 61, 32,114,101, 99,
    116, 32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,114,
    101, 99,116, 40, 48, 44, 48, 44, 48, 44, 48, 41, 10,114,111,
    111,116, 32, 61, 32,114,111,111,116, 32,111,114, 32,115,101,
    108,102, 58,103,101,116, 82,111,111,116, 71, 85, 73, 69,108,
    101,109,101,110,116, 40, 41, 10,108,111, 99, 97,108, 32,110,
     97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,
    116,111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,
    116,101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,116,
     32, 61, 32, 95, 97,100,100, 83,116, 97,116,105, 99, 84,101,
    120,116, 40,115,101,108,102, 44, 32,110, 97,109,101, 44, 32,
    114,101, 99,116, 44, 32, 98,111,111,108, 49, 44, 32, 98,111,
    111,108, 50, 44, 32,114,111,111,116, 44, 32,105,100, 32, 44,
     32, 98,111,111,108, 51, 41, 10,105,114,114, 46, 99, 97,115,
    116, 46,100,101,108,101,116,101, 95,119, 99,104, 97,114, 95,
    116, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,101,116,
    117,114,110, 32,114,101,116, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95, 97,100,100, 66,117,116,116,111,110, 32, 61,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,
    118,105,114,111,110,109,101,110,116, 46, 97,100,100, 66,117,
    116,116,111,110, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,
    114,111,110,109,101,110,116, 58, 97,100,100, 66,117,116,116,
    111,110, 40,114,101, 99,116, 44, 32,112, 97,114,101,110,116,
     44, 32,105,100, 44, 32,116,101,120,116, 32, 41, 10,105,100,
     32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,116,101,120,
    116, 32, 61, 32,116,101,120,116, 32,111,114, 32, 34, 34, 10,
    114,101, 99,116, 32, 61, 32,114,101, 99,116, 32,111,114, 32,
    105,114,114, 46, 99,111,114,101, 46,114,101, 99,116, 40, 48,
     44, 48, 44, 48, 44, 48, 41, 10,108,111, 99, 97,108, 32,116,
    120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,
    101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95, 97,100,100, 66,117,116,116,111,110, 40,115,101,
    108,102, 44, 32,114,101, 99,116, 44, 32,112, 97,114,101,110,
    116, 44, 32,105,100, 44, 32,116,120,116, 32, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,119,
     99,104, 97,114, 95,116, 95,112,116,114, 40,116,120,116, 41,
     10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,100,
     10,108,111, 99, 97,108, 32, 95,103,101,116, 70,111,110,116,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,110,118,105,114,111,110,109,101,110,116, 46,103,101,116,
     70,111,110,116, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,
    114,111,110,109,101,110,116, 58,103,101,116, 70,111,110,116,
     40,110, 97,109,101, 41, 10,110, 97,109,101, 32, 61, 32,110,
     97,109,101, 32,111,114, 32, 34, 34, 10,108,111, 99, 97,108,
     32,110, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95, 99, 56, 95,112,116,114, 40,110, 97,109,101, 41, 10,
    108,111, 99, 97,108, 32,114,101,116, 32, 61, 32, 95,103,101,
    116, 70,111,110,116, 40,115,101,108,102, 44, 32,110, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95, 99, 56, 95,112,116,114, 40,110, 41, 10,114,101,116,117,
    114,110, 32,114,101,116, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95, 97,100,100, 73,109, 97,103,101, 32, 61, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,
    114,111,110,109,101,110,116, 46, 97,100,100, 73,109, 97,103,
    101, 10,108,111, 99, 97,108, 32,102,117,110, 99,116,105,111,
    110, 32, 95, 97,100,100, 73,109, 97,103,101, 49, 40,103,117,
    105,101,110,118, 44, 32,105,109, 97,103,101, 44, 32,112,111,
    115, 44, 32,117,115,101, 65,108,112,104, 97, 67,104, 97,110,
    110,101,108, 44, 32,112, 97,114,101,110,116, 44, 32,105,100,
     44, 32,116,101,120,116, 41, 10,105,100, 32, 61, 32,105,100,
     32,111,114, 32, 45, 49, 10,116,101,120,116, 32, 61, 32,116,
    101,120,116, 32,111,114, 32, 34, 34, 10,112,111,115, 32, 61,
     32,112,111,115, 32,111,114, 32,105,114,114, 46, 99,111,114,
    101, 46,112,111,115,105,116,105,111,110, 50,100, 40, 48, 44,
     48, 41, 10,117,115,101, 65,108,112,104, 97, 67,104, 97,110,
    110,101,108, 32, 61, 32,117,115,101, 65,108,112,104, 97, 67,
    104, 97,110,110,101,108, 32,111,114, 32,116,114,117,101, 10,
    108,111, 99, 97,108, 32,116,120,116, 32, 61, 32,105,114,114,
     46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,114, 95,
    116, 95,112,116,114, 40,116,101,120,116, 41, 10,108,111, 99,
     97,108, 32,114,101,116, 32, 61, 32, 95, 97,100,100, 73,109,
     97,103,101, 40,103,117,105,101,110,118, 44, 32,105,109, 97,
    103,101, 44, 32,112,111,115, 44, 32,117,115,101, 65,108,112,
    104, 97, 67,104, 97,110,110,101,108, 44, 32,112, 97,114,101,
    110,116, 44, 32,105,100, 44, 32,116,120,116, 32, 41, 10,105,
    114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,
    119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,120,116,
     41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,110,
    100, 10,108,111, 99, 97,108, 32,102,117,110, 99,116,105,111,
    110, 32, 95, 97,100,100, 73,109, 97,103,101, 50, 40,103,117,
    105,101,110,118, 44, 32,114,101, 99,116, 97,110,103,108,101,
     44, 32,112, 97,114,101,110,116, 44, 32,105,100, 44, 32,116,
    101,120,116, 41, 10,114,101, 99,116, 97,110,103,108,101, 32,
     61, 32,114,101, 99,116, 97,110,103,108,101, 32,111,114, 32,
    105,114,114, 46, 99,111,114,101, 46,114,101, 99,116, 40, 48,
     44, 48, 44, 48, 44, 48, 41, 10,105,100, 32, 61, 32,105,100,
     32,111,114, 32, 45, 49, 10,116,101,120,116, 32, 61, 32,116,
    101,120,116, 32,111,114, 32, 34, 34, 10,108,111, 99, 97,108,
     32,116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114,
     40,116,101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,
    116, 32, 61, 32, 95, 97,100,100, 73,109, 97,103,101, 40,103,
    117,105,101,110,118, 44, 32,114,101, 99,116, 97,110,103,108,
    101, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 44, 32,
    116,120,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,
    101,108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 40,116,120,116, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,
    110,118,105,114,111,110,109,101,110,116, 58, 97,100,100, 73,
    109, 97,103,101, 40, 97, 44, 98, 44, 99, 44,100, 44,101, 44,
    102, 41, 10,105,102, 32,116,111,108,117, 97, 46,116,121,112,
    101, 40, 97, 41, 32, 61, 61, 32, 34,105,114,114, 58, 58, 99,
    111,114,101, 58, 58,114,101, 99,116, 60,115, 51, 50, 62, 34,
     32,116,104,101,110, 10,114,101,116,117,114,110, 32, 95, 97,
    100,100, 73,109, 97,103,101, 50, 40,115,101,108,102, 44, 97,
     44, 98, 44, 99, 44,100, 41, 10,101,108,115,101, 10,114,101,
    116,117,114,110, 32, 95, 97,100,100, 73,109, 97,103,101, 49,
     40,115,101,108,102, 44, 97, 44, 98, 44, 99, 44,100, 44,101,
     44,102, 41, 10,101,110,100, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95, 97,100,100, 87,105,110,100,111,119, 32, 61,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,
    118,105,114,111,110,109,101,110,116, 46, 97,100,100, 87,105,
    110,100,111,119, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,
    114,111,110,109,101,110,116, 58, 97,100,100, 87,105,110,100,
    111,119, 40,114,101, 99,116, 44, 32,109,111,100, 97,108, 44,
     32,116,101,120,116, 44, 32,112, 97,114,101,110,116, 44, 32,
    105,100, 32, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114,
     32, 45, 49, 10,116,101,120,116, 32, 61, 32,116,101,120,116,
     32,111,114, 32, 34, 34, 10,114,101, 99,116, 32, 61, 32,114,
    101, 99,116, 32,111,114, 32,105,114,114, 46, 99,111,114,101,
     46,114,101, 99,116, 40, 48, 44, 48, 44, 48, 44, 48, 41, 10,
    109,111,100, 97,108, 32, 61, 32,109,111,100, 97,108, 32,111,
    114, 32,102, 97,108,115,101, 10,108,111, 99, 97,108, 32,116,
    120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,
    111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,
    101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32,
     61, 32, 95, 97,100,100, 87,105,110,100,111,119, 40,115,101,
    108,102, 44, 32,114,101, 99,116, 44, 32,109,111,100, 97,108,
     44, 32,116,120,116, 44, 32,112, 97,114,101,110,116, 44, 32,
    105,100, 32, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,
    101,108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 40,116,120,116, 41, 10,114,101,116,117,114,110, 32,
    114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 70,105,108,101, 79,112,101,110, 68,105, 97,108,
    111,103, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,110,118,105,114,111,110,109,101,110,116, 46, 97,
    100,100, 70,105,108,101, 79,112,101,110, 68,105, 97,108,111,
    103, 10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,111,110,
    109,101,110,116, 58, 97,100,100, 70,105,108,101, 79,112,101,
    110, 68,105, 97,108,111,103, 40,116,101,120,116, 44, 32,109,
    111,100, 97,108, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 32, 41, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32,
     45, 49, 10,116,101,120,116, 32, 61, 32,116,101,120,116, 32,
    111,114, 32, 34, 34, 10,109,111,100, 97,108, 32, 61, 32,109,
    111,100, 97,108, 32,111,114, 32,116,114,117,101, 10,108,111,
     99, 97,108, 32,116,120,116, 32, 61, 32,105,114,114, 46, 99,
     97,115,116, 46,116,111, 95,119, 99,104, 97,114, 95,116, 95,
    112,116,114, 40,116,101,120,116, 41, 10,108,111, 99, 97,108,
     32,114,101,116, 32, 61, 32, 95, 97,100,100, 70,105,108,101,
     79,112,101,110, 68,105, 97,108,111,103, 40,115,101,108,102,
     44, 32,116,120,116, 44, 32,109,111,100, 97,108, 44, 32,112,
     97,114,101,110,116, 44, 32,105,100, 32, 41, 10,105,114,114,
     46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,119, 99,
    104, 97,114, 95,116, 95,112,116,114, 40,116,120,116, 41, 10,
    114,101,116,117,114,110, 32,114,101,116, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95, 97,100,100, 69,100,105,116, 66,
    111,120, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,110,118,105,114,111,110,109,101,110,116, 46, 97,
    100,100, 69,100,105,116, 66,111,120, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,110,118,105,114,111,110,109,101,110,116, 58, 97,100,
    100, 69,100,105,116, 66,111,120, 40,116,101,120,116, 44, 32,
    114,101, 99,116, 97,110,103,108,101, 44, 32, 98,111,114,100,
    101,114, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 32,
     41, 10,116,101,120,116, 32, 61, 32,116,101,120,116, 32,111,
    114, 32, 34, 34, 10,105,100, 32, 61, 32,105,100, 32,111,114,
     32, 45, 49, 10, 98,111,114,100,101,114, 32, 61, 32, 98,111,
    114,100,101,114, 32,111,114, 32,116,114,117,101, 10,112, 97,
    114,101,110,116, 32, 61, 32,112, 97,114,101,110,116, 32,111,
    114, 32,110,105,108, 10,108,111, 99, 97,108, 32,116,120,116,
     32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,116,111, 95,
    119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,101,120,
    116, 41, 10,108,111, 99, 97,108, 32,114,101,116, 32, 61, 32,
     95, 97,100,100, 69,100,105,116, 66,111,120, 40,115,101,108,
    102, 44, 32,116,120,116, 44, 32,114,101, 99,116, 97,110,103,
    108,101, 44, 32, 98,111,114,100,101,114, 44, 32,112, 97,114,
    101,110,116, 44, 32,105,100, 32, 41, 10,105,114,114, 46, 99,
     97,115,116, 46,100,101,108,101,116,101, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,120,116, 41, 10,114,101,
    116,117,114,110, 32,114,101,116, 10,101,110,100, 10,108,111,
     99, 97,108, 32, 95, 97,100,100, 77,101,115,115, 97,103,101,
     66,111,120, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73,
     71, 85, 73, 69,110,118,105,114,111,110,109,101,110,116, 46,
     97,100,100, 77,101,115,115, 97,103,101, 66,111,120, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 69,110,118,105,114,111,110,109,101,110,
    116, 58, 97,100,100, 77,101,115,115, 97,103,101, 66,111,120,
     40, 99, 97,112,116,105,111,110, 44, 32,116,101,120,116, 44,
     32,109,111,100, 97,108, 44, 32,102,108, 97,103,115, 44, 32,
    112, 97,114,101,110,116, 44, 32,105,100, 32, 41, 10,116,101,
    120,116, 32, 61, 32,116,101,120,116, 32,111,114, 32, 34, 34,
     10, 99, 97,112,116,105,111,110, 32, 61, 32, 99, 97,112,116,
    105,111,110, 32,111,114, 32, 34, 34, 10,105,100, 32, 61, 32,
    105,100, 32,111,114, 32, 45, 49, 10,109,111,100, 97,108, 32,
     61, 32,109,111,100, 97,108, 32,111,114, 32,116,114,117,101,
     10,102,108, 97,103,115, 32, 61, 32,102,108, 97,103,115, 32,
    111,114, 32,105,114,114, 46,103,117,105, 46, 69, 77, 66, 70,
     95, 79, 75, 10,112, 97,114,101,110,116, 32, 61, 32,112, 97,
    114,101,110,116, 32,111,114, 32,110,105,108, 10,108,111, 99,
     97,108, 32,116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 40,116,101,120,116, 41, 10,108,111, 99, 97,108, 32,
     99, 97,112, 32, 61, 32,105,114,114, 46, 99, 97,115,116, 46,
    116,111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,
     99, 97,112,116,105,111,110, 41, 10,108,111, 99, 97,108, 32,
    114,101,116, 32, 61, 32, 95, 97,100,100, 77,101,115,115, 97,
    103,101, 66,111,120, 40,115,101,108,102, 44, 32, 99, 97,112,
     44, 32,116,120,116, 44, 32,109,111,100, 97,108, 44, 32,102,
    108, 97,103,115, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,108,
    101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,114,
     40,116,120,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,
    100,101,108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,
    112,116,114, 40, 99, 97,112, 41, 10,114,101,116,117,114,110,
     32,114,101,116, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95, 97,100,100, 67,104,101, 99,107, 66,111,120, 32, 61, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,
    105,114,111,110,109,101,110,116, 46, 97,100,100, 67,104,101,
     99,107, 66,111,120, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,
    105,114,111,110,109,101,110,116, 58, 97,100,100, 67,104,101,
     99,107, 66,111,120, 40, 99,104,101, 99,107,101,100, 44, 32,
    114,101, 99,116, 97,110,103,108,101, 44, 32,112, 97,114,101,
    110,116, 44, 32,105,100, 44, 32,116,101,120,116, 32, 41, 10,
    116,101,120,116, 32, 61, 32,116,101,120,116, 32,111,114, 32,
     34, 34, 10,105,100, 32, 61, 32,105,100, 32,111,114, 32, 45,
     49, 10,112, 97,114,101,110,116, 32, 61, 32,112, 97,114,101,
    110,116, 32,111,114, 32,110,105,108, 10,108,111, 99, 97,108,
     32,116,120,116, 32, 61, 32,105,114,114, 46, 99, 97,115,116,
     46,116,111, 95,119, 99,104, 97,114, 95,116, 95,112,116,114,
     40,116,101,120,116, 41, 10,108,111, 99, 97,108, 32,114,101,
    116, 32, 61, 32, 95, 97,100,100, 67,104,101, 99,107, 66,111,
    120, 40,115,101,108,102, 44, 32, 99,104,101, 99,107,101,100,
     44, 32,114,101, 99,116, 97,110,103,108,101, 44, 32,112, 97,
    114,101,110,116, 44, 32,105,100, 44, 32,116,120,116, 41, 10,
    105,114,114, 46, 99, 97,115,116, 46,100,101,108,101,116,101,
     95,119, 99,104, 97,114, 95,116, 95,112,116,114, 40,116,120,
    116, 41, 10,114,101,116,117,114,110, 32,114,101,116, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 76,105,
    115,116, 66,111,120, 32, 61, 32,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 69,110,118,105,114,111,110,109,101,110,
    116, 46, 97,100,100, 76,105,115,116, 66,111,120, 10,102,117,
    110, 99,116,105,111,110, 32,105,114,114, 46,103,117,105, 46,
     73, 71, 85, 73, 69,110,118,105,114,111,110,109,101,110,116,
     58, 97,100,100, 76,105,115,116, 66,111,120, 40,114,101, 99,
    116, 97,110,103,108,101, 44, 32,112, 97,114,101,110,116, 44,
     32,105,100, 44, 32,100,114, 97,119, 66, 97, 99,107,103,114,
    111,117,110,100, 41, 10,112, 97,114,101,110,116, 32, 61, 32,
    112, 97,114,101,110,116, 32,111,114, 32,110,105,108, 10,105,
    100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,100,114,
     97,119, 66, 97, 99,107,103,114,111,117,110,100, 32, 61, 32,
    100,114, 97,119, 66, 97, 99,107,103,114,111,117,110,100, 32,
    111,114, 32,102, 97,108,115,101, 10,114,101,116,117,114,110,
     32, 95, 97,100,100, 76,105,115,116, 66,111,120, 40,115,101,
    108,102, 44, 32,114,101, 99,116, 97,110,103,108,101, 44, 32,
    112, 97,114,101,110,116, 44, 32,105,100, 44, 32,100,114, 97,
    119, 66, 97, 99,107,103,114,111,117,110,100, 41, 10,101,110,
    100, 10,108,111, 99, 97,108, 32, 95, 97,100,100, 77,101,110,
    117, 32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,110,118,105,114,111,110,109,101,110,116, 46, 97,100,
    100, 77,101,110,117, 10,102,117,110, 99,116,105,111,110, 32,
    105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,
    105,114,111,110,109,101,110,116, 58, 97,100,100, 77,101,110,
    117, 40,112, 97,114,101,110,116, 44, 32,105,100, 41, 10,105,
    100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,101,
    116,117,114,110, 32, 95, 97,100,100, 77,101,110,117, 40,115,
    101,108,102, 44, 32,112, 97,114,101,110,116, 44, 32,105,100,
     41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,100,
    100, 84,111,111,108, 66, 97,114, 32, 61, 32,105,114,114, 46,
    103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,111,110,
    109,101,110,116, 46, 97,100,100, 84,111,111,108, 66, 97,114,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,111,110,109,
    101,110,116, 58, 97,100,100, 84,111,111,108, 66, 97,114, 40,
    112, 97,114,101,110,116, 44, 32,105,100, 41, 10,105,100, 32,
     61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,101,116,117,
    114,110, 32, 95, 97,100,100, 84,111,111,108, 66, 97,114, 40,
    115,101,108,102, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95, 97,
    100,100, 67,111,109, 98,111, 66,111,120, 32, 61, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,
    111,110,109,101,110,116, 46, 97,100,100, 67,111,109, 98,111,
     66,111,120, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,
    111,110,109,101,110,116, 58, 97,100,100, 67,111,109, 98,111,
     66,111,120, 40,114,101, 99,116, 44,112, 97,114,101,110,116,
     44, 32,105,100, 41, 10,105,100, 32, 61, 32,105,100, 32,111,
    114, 32, 45, 49, 10,114,101,116,117,114,110, 32, 95, 97,100,
    100, 67,111,109, 98,111, 66,111,120, 40,115,101,108,102, 44,
     32,114,101, 99,116, 44, 32,112, 97,114,101,110,116, 44, 32,
    105,100, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32, 95,
     97,100,100, 84, 97, 98, 67,111,110,116,114,111,108, 32, 61,
     32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,
    118,105,114,111,110,109,101,110,116, 46, 97,100,100, 84, 97,
     98, 67,111,110,116,114,111,108, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,110,118,105,114,111,110,109,101,110,116, 58, 97,100,100,
     84, 97, 98, 67,111,110,116,114,111,108, 40,114,101, 99,116,
     44, 32,112, 97,114,101,110,116, 44, 32,102,105,108,108, 98,
     97, 99,107,103,114,111,117,110,100, 44, 32, 98,111,114,100,
    101,114, 44, 32,105,100, 41, 10,105,100, 32, 61, 32,105,100,
     32,111,114, 32, 45, 49, 10,105,102, 32,102,105,108,108, 98,
     97, 99,107,103,114,111,117,110,100, 32, 61, 61, 32,110,105,
    108, 32,116,104,101,110, 32,102,105,108,108, 98, 97, 99,107,
    103,114,111,117,110,100, 32, 61, 32,116,114,117,101, 32,101,
    110,100, 10,105,102, 32, 98,111,114,100,101,114, 32, 61, 61,
     32,110,105,108, 32,116,104,101,110, 32, 98,111,114,100,101,
    114, 32, 61, 32,116,114,117,101, 32,101,110,100, 10,114,101,
    116,117,114,110, 32, 95, 97,100,100, 84, 97, 98, 67,111,110,
    116,114,111,108, 40,115,101,108,102, 44, 32,114,101, 99,116,
     44, 32,112, 97,114,101,110,116, 44, 32,102,105,108,108, 98,
     97, 99,107,103,114,111,117,110,100, 44, 32, 98,111,114,100,
    101,114, 44, 32,105,100, 41, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95, 97,100,100, 84, 97, 98, 32, 61, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,110,118,105,114,
    111,110,109,101,110,116, 46, 97,100,100, 84, 97, 98, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46,103,117,105,
     46, 73, 71, 85, 73, 69,110,118,105,114,111,110,109,101,110,
    116, 58, 97,100,100, 84, 97, 98, 40,114,101, 99,116, 44, 32,
    112, 97,114,101,110,116, 44, 32,105,100, 41, 10,105,100, 32,
     61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,101,116,117,
    114,110, 32, 95, 97,100,100, 84, 97, 98, 40,115,101,108,102,
     44, 32,114,101, 99,116, 44, 32,112, 97,114,101,110,116, 44,
     32,105,100, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,
     95, 97,100,100, 73,110, 79,117,116, 70, 97,100,101,114, 32,
     61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73, 69,
    110,118,105,114,111,110,109,101,110,116, 46, 97,100,100, 73,
    110, 79,117,116, 70, 97,100,101,114, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85,
     73, 69,110,118,105,114,111,110,109,101,110,116, 58, 97,100,
    100, 73,110, 79,117,116, 70, 97,100,101,114, 40,114,101, 99,
    116, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 41, 10,
    105,100, 32, 61, 32,105,100, 32,111,114, 32, 45, 49, 10,114,
    101,116,117,114,110, 32, 95, 97,100,100, 73,110, 79,117,116,
     70, 97,100,101,114, 40,115,101,108,102, 44, 32,114,101, 99,
    116, 44, 32,112, 97,114,101,110,116, 44, 32,105,100, 41, 10,
    101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 69");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    #ifdef __cplusplus
    tolua_cclass(tolua_S,"IrrLuaIGUIElement","irr::gui::IrrLuaIGUIElement","irr::gui::IGUIElement",tolua_collect_irr__gui__IrrLuaIGUIElement);
    #else
    tolua_cclass(tolua_S,"IrrLuaIGUIElement","irr::gui::IrrLuaIGUIElement","irr::gui::IGUIElement",NULL);
    #endif
    tolua_beginmodule(tolua_S,"IrrLuaIGUIElement");
     tolua_function(tolua_S,"new",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00);
     tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00_local);
     tolua_function(tolua_S,".call",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_new00_local);
     tolua_function(tolua_S,"delete",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_delete00);
     tolua_function(tolua_S,"getParent",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getParent00);
     tolua_function(tolua_S,"getRelativePosition",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getRelativePosition00);
     tolua_function(tolua_S,"setRelativePosition",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setRelativePosition00);
     tolua_function(tolua_S,"getAbsolutePosition",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getAbsolutePosition00);
     tolua_function(tolua_S,"updateAbsolutePosition",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_updateAbsolutePosition00);
     tolua_function(tolua_S,"getElementFromPoint",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromPoint00);
     tolua_function(tolua_S,"addChild",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_addChild00);
     tolua_function(tolua_S,"removeChild",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_removeChild00);
     tolua_function(tolua_S,"remove",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_remove00);
     tolua_function(tolua_S,"draw",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_draw00);
     tolua_function(tolua_S,"move",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_move00);
     tolua_function(tolua_S,"isVisible",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isVisible00);
     tolua_function(tolua_S,"setVisible",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setVisible00);
     tolua_function(tolua_S,"isEnabled",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_isEnabled00);
     tolua_function(tolua_S,"setEnabled",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setEnabled00);
     tolua_function(tolua_S,"setText",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setText00);
     tolua_function(tolua_S,"getText",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getText00);
     tolua_function(tolua_S,"getID",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getID00);
     tolua_function(tolua_S,"setID",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_setID00);
     tolua_function(tolua_S,"IrrLuaIGUIElement__OnEvent",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_IrrLuaIGUIElement__OnEvent00);
     tolua_function(tolua_S,"bringToFront",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_bringToFront00);
     tolua_function(tolua_S,"getElementFromId",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getElementFromId00);
     tolua_function(tolua_S,"getType",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_getType00);
     tolua_function(tolua_S,"grab",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_grab00);
     tolua_function(tolua_S,"drop",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_drop00);
     tolua_function(tolua_S,"GetProxy",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_GetProxy00);
     tolua_function(tolua_S,"get_Children",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Children00);
     tolua_function(tolua_S,"set_Children",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Children00);
     tolua_function(tolua_S,"get_Parent",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Parent00);
     tolua_function(tolua_S,"set_Parent",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Parent00);
     tolua_function(tolua_S,"get_RelativeRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_RelativeRect00);
     tolua_function(tolua_S,"set_RelativeRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_RelativeRect00);
     tolua_function(tolua_S,"get_AbsoluteRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteRect00);
     tolua_function(tolua_S,"set_AbsoluteRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteRect00);
     tolua_function(tolua_S,"get_AbsoluteClippingRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_AbsoluteClippingRect00);
     tolua_function(tolua_S,"set_AbsoluteClippingRect",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_AbsoluteClippingRect00);
     tolua_function(tolua_S,"get_IsVisible",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsVisible00);
     tolua_function(tolua_S,"set_IsVisible",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsVisible00);
     tolua_function(tolua_S,"get_IsEnabled",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_IsEnabled00);
     tolua_function(tolua_S,"set_IsEnabled",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_IsEnabled00);
     tolua_function(tolua_S,"get_Text",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Text00);
     tolua_function(tolua_S,"set_Text",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Text00);
     tolua_function(tolua_S,"get_ID",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_ID00);
     tolua_function(tolua_S,"set_ID",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_ID00);
     tolua_function(tolua_S,"get_Environment",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Environment00);
     tolua_function(tolua_S,"set_Environment",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Environment00);
     tolua_function(tolua_S,"get_Type",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_get_Type00);
     tolua_function(tolua_S,"set_Type",tolua_IrrLua_irr_gui_IrrLuaIGUIElement_set_Type00);
     tolua_variable(tolua_S,"Children",tolua_get_irr__gui__IrrLuaIGUIElement_Children,tolua_set_irr__gui__IrrLuaIGUIElement_Children);
     tolua_variable(tolua_S,"Parent",tolua_get_irr__gui__IrrLuaIGUIElement_Parent_ptr,tolua_set_irr__gui__IrrLuaIGUIElement_Parent_ptr);
     tolua_variable(tolua_S,"RelativeRect",tolua_get_irr__gui__IrrLuaIGUIElement_RelativeRect,tolua_set_irr__gui__IrrLuaIGUIElement_RelativeRect);
     tolua_variable(tolua_S,"AbsoluteRect",tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteRect,tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteRect);
     tolua_variable(tolua_S,"AbsoluteClippingRect",tolua_get_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect,tolua_set_irr__gui__IrrLuaIGUIElement_AbsoluteClippingRect);
     tolua_variable(tolua_S,"IsVisible",tolua_get_irr__gui__IrrLuaIGUIElement_IsVisible,tolua_set_irr__gui__IrrLuaIGUIElement_IsVisible);
     tolua_variable(tolua_S,"IsEnabled",tolua_get_irr__gui__IrrLuaIGUIElement_IsEnabled,tolua_set_irr__gui__IrrLuaIGUIElement_IsEnabled);
     tolua_variable(tolua_S,"Text",tolua_get_irr__gui__IrrLuaIGUIElement_Text,tolua_set_irr__gui__IrrLuaIGUIElement_Text);
     tolua_variable(tolua_S,"ID",tolua_get_irr__gui__IrrLuaIGUIElement_ID,tolua_set_irr__gui__IrrLuaIGUIElement_ID);
     tolua_variable(tolua_S,"Environment",tolua_get_irr__gui__IrrLuaIGUIElement_Environment_ptr,tolua_set_irr__gui__IrrLuaIGUIElement_Environment_ptr);
    tolua_endmodule(tolua_S);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,115,101,116, 84,101,120,116,
     32, 61, 32,105,114,114, 46,103,117,105, 46, 73, 71, 85, 73,
     69,108,101,109,101,110,116, 46,115,101,116, 84,101,120,116,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,103,
    117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,110,116, 58,
    115,101,116, 84,101,120,116, 40,116,101,120,116, 41, 10,116,
    101,120,116, 32, 61, 32,116,101,120,116, 32,111,114, 32, 34,
     34, 10,108,111, 99, 97,108, 32,116,120,116, 32, 61, 32,105,
    114,114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,
    114, 95,116, 95,112,116,114, 40,116,101,120,116, 41, 10, 95,
    115,101,116, 84,101,120,116, 40,115,101,108,102, 44, 32,116,
    120,116, 41, 10,105,114,114, 46, 99, 97,115,116, 46,100,101,
    108,101,116,101, 95,119, 99,104, 97,114, 95,116, 95,112,116,
    114, 40,116,120,116, 41, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95,103,101,116, 84,101,120,116, 32, 61, 32,105,114,
    114, 46,103,117,105, 46, 73, 71, 85, 73, 69,108,101,109,101,
    110,116, 46,103,101,116, 84,101,120,116, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,103,117,105, 46, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 58,103,101,116, 84,101,
    120,116, 40, 41, 10,114,101,116,117,114,110, 32,105,114,114,
     46, 99, 97,115,116, 46,119, 99,104, 97,114, 95,116, 95,112,
    116,114, 95,116,111, 95,115,116,100, 95,115,116,114,105,110,
    103, 40, 95,103,101,116, 84,101,120,116, 40,115,101,108,102,
     41, 41, 10,101,110,100, 10,105,114,114, 46, 95, 95,105,103,
    117,105,101,108,101,109,101,110,116,112,114,111,120,121, 32,
     61, 32,123,125, 10,102,117,110, 99,116,105,111,110, 32,105,
    114,114, 46,103,117,105, 46, 99,114,101, 97,116,101, 73, 71,
     85, 73, 69,108,101,109,101,110,116, 40, 84,121,112,101, 44,
     32,101,110,118,105,114,111,110,109,101,110,116, 44, 32,112,
     97,114,101,110,116, 44, 32,105,100, 44, 32,114,101, 99,116,
     97,110,103,108,101, 44, 32,100,101,102, 41, 10,108,111, 99,
     97,108, 32,111, 32, 61, 32,123,125, 10,102,111,114, 32,105,
     44,118, 32,105,110, 32,112, 97,105,114,115, 40,100,101,102,
     41, 32,100,111, 32,111, 91,105, 93, 32, 61, 32,118, 32,101,
    110,100, 10,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 32,
     61, 32,105,114,114, 46,103,117,105, 46, 73,114,114, 76,117,
     97, 73, 71, 85, 73, 69,108,101,109,101,110,116, 58,110,101,
    119, 40, 84,121,112,101, 44, 32,101,110,118,105,114,111,110,
    109,101,110,116, 44, 32,112, 97,114,101,110,116, 44, 32,105,
    100, 44, 32,114,101, 99,116, 97,110,103,108,101, 41, 10,116,
    111,108,117, 97, 46,105,110,104,101,114,105,116, 40,111, 44,
     32,111, 46, 95, 95, 99, 95, 99,108, 97,115,115, 41, 10,116,
    111,108,117, 97, 46,116, 97,107,101,111,119,110,101,114,115,
    104,105,112, 40,111, 41, 10,111, 46, 95, 95,105,110,100,101,
    120, 32, 61, 32,102,117,110, 99,116,105,111,110, 32, 40,116,
     44, 32,107, 41, 32,114,101,116,117,114,110, 32,114, 97,119,
    103,101,116, 40,116, 44, 34, 95, 95, 99, 95, 99,108, 97,115,
    115, 34, 41, 91,107, 93, 32,101,110,100, 10,115,101,116,109,
    101,116, 97,116, 97, 98,108,101, 40,111, 44, 32,111, 41, 10,
    105,114,114, 46, 95, 95,105,103,117,105,101,108,101,109,101,
    110,116,112,114,111,120,121, 91,111, 58, 71,101,116, 80,114,
    111,120,121, 40, 41, 93, 32, 61, 32,111, 10,114,101,116,117,
    114,110, 32,111, 10,101,110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 70");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"scene",0);
   tolua_beginmodule(tolua_S,"scene");
   tolua_endmodule(tolua_S);
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_constant(tolua_S,"EVDF_RENDER_TO_TARGET",irr::video::EVDF_RENDER_TO_TARGET);
    tolua_constant(tolua_S,"EVDF_BILINEAR_FILTER",irr::video::EVDF_BILINEAR_FILTER);
    tolua_constant(tolua_S,"EVDF_HARDWARE_TL",irr::video::EVDF_HARDWARE_TL);
    tolua_constant(tolua_S,"EVDF_MIP_MAP",irr::video::EVDF_MIP_MAP);
    tolua_constant(tolua_S,"EVDF_STENCIL_BUFFER",irr::video::EVDF_STENCIL_BUFFER);
    tolua_constant(tolua_S,"EVDF_VERTEX_SHADER_1_1",irr::video::EVDF_VERTEX_SHADER_1_1);
    tolua_constant(tolua_S,"EVDF_VERTEX_SHADER_2_0",irr::video::EVDF_VERTEX_SHADER_2_0);
    tolua_constant(tolua_S,"EVDF_VERTEX_SHADER_3_0",irr::video::EVDF_VERTEX_SHADER_3_0);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_1_1",irr::video::EVDF_PIXEL_SHADER_1_1);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_1_2",irr::video::EVDF_PIXEL_SHADER_1_2);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_1_3",irr::video::EVDF_PIXEL_SHADER_1_3);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_1_4",irr::video::EVDF_PIXEL_SHADER_1_4);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_2_0",irr::video::EVDF_PIXEL_SHADER_2_0);
    tolua_constant(tolua_S,"EVDF_PIXEL_SHADER_3_0",irr::video::EVDF_PIXEL_SHADER_3_0);
    tolua_constant(tolua_S,"EVDF_ARB_VERTEX_PROGRAM_1",irr::video::EVDF_ARB_VERTEX_PROGRAM_1);
    tolua_constant(tolua_S,"EVDF_ARB_FRAGMENT_PROGRAM_1",irr::video::EVDF_ARB_FRAGMENT_PROGRAM_1);
    tolua_constant(tolua_S,"EVDF_ARB_GLSL",irr::video::EVDF_ARB_GLSL);
    tolua_constant(tolua_S,"EVDF_HLSL",irr::video::EVDF_HLSL);
    tolua_constant(tolua_S,"ETS_VIEW",irr::video::ETS_VIEW);
    tolua_constant(tolua_S,"ETS_WORLD",irr::video::ETS_WORLD);
    tolua_constant(tolua_S,"ETS_PROJECTION",irr::video::ETS_PROJECTION);
    tolua_constant(tolua_S,"ETS_COUNT",irr::video::ETS_COUNT);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95,103,101,116, 84,101,120,116,
    117,114,101, 32, 61, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 86,105,100,101,111, 68,114,105,118,101,114, 46,103,
    101,116, 84,101,120,116,117,114,101, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 73,
     86,105,100,101,111, 68,114,105,118,101,114, 58,103,101,116,
     84,101,120,116,117,114,101, 40,116,101,120,116,117,114,101,
     41, 10,116,101,120,116,117,114,101, 32, 61, 32,116,101,120,
    116,117,114,101, 32,111,114, 32, 34, 34, 10,108,111, 99, 97,
    108, 32,110, 97,109,101, 32, 61, 32,105,114,114, 46, 99, 97,
    115,116, 46,116,111, 95, 99, 56, 95,112,116,114, 40,116,101,
    120,116,117,114,101, 41, 10,108,111, 99, 97,108, 32,114,101,
    116, 32, 61, 32, 95,103,101,116, 84,101,120,116,117,114,101,
     40,115,101,108,102, 44, 32,110, 97,109,101, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95, 99,
     56, 95,112,116,114, 40,110, 97,109,101, 41, 10,114,101,116,
    117,114,110, 32,114,101,116, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95,103,101,116, 78, 97,109,101, 32, 61, 32,105,
    114,114, 46,118,105,100,101,111, 46, 73, 86,105,100,101,111,
     68,114,105,118,101,114, 46,103,101,116, 78, 97,109,101, 10,
    102,117,110, 99,116,105,111,110, 32,105,114,114, 46,118,105,
    100,101,111, 46, 73, 86,105,100,101,111, 68,114,105,118,101,
    114, 58,103,101,116, 78, 97,109,101, 40, 41, 10,114,101,116,
    117,114,110, 32,105,114,114, 46, 99, 97,115,116, 46,119, 99,
    104, 97,114, 95,116, 95,112,116,114, 95,116,111, 95,115,116,
    100, 95,115,116,114,105,110,103, 40, 95,103,101,116, 78, 97,
    109,101, 40,115,101,108,102, 41, 41, 10,101,110,100, 10,108,
    111, 99, 97,108, 32, 95, 98,101,103,105,110, 83, 99,101,110,
    101, 32, 61, 32,105,114,114, 46,118,105,100,101,111, 46, 73,
     86,105,100,101,111, 68,114,105,118,101,114, 46, 98,101,103,
    105,110, 83, 99,101,110,101, 10,102,117,110, 99,116,105,111,
    110, 32,105,114,114, 46,118,105,100,101,111, 46, 73, 86,105,
    100,101,111, 68,114,105,118,101,114, 58, 98,101,103,105,110,
     83, 99,101,110,101, 40, 98,111,111,108, 49, 44, 32, 98,111,
    111,108, 50, 44, 32, 99,111,108,111,114, 41, 10, 99,111,108,
    111,114, 32, 61, 32, 99,111,108,111,114, 32,111,114, 32,105,
    114,114, 46,118,105,100,101,111, 46, 83, 67,111,108,111,114,
     40, 48, 44, 48, 44, 48, 44, 48, 41, 10,114,101,116,117,114,
    110, 32, 95, 98,101,103,105,110, 83, 99,101,110,101, 40,115,
    101,108,102, 44, 32, 98,111,111,108, 49, 44, 32, 98,111,111,
    108, 50, 44, 32, 99,111,108,111,114, 41, 10,101,110,100, 10,
    108,111, 99, 97,108, 32, 95,100,114, 97,119, 50, 68, 73,109,
     97,103,101, 32, 61, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 86,105,100,101,111, 68,114,105,118,101,114, 46,100,
    114, 97,119, 50, 68, 73,109, 97,103,101, 10,108,111, 99, 97,
    108, 32,102,117,110, 99,116,105,111,110, 32, 95,100,114, 97,
    119, 50, 68, 73,109, 97,103,101, 95, 49, 40,115,101,108,102,
     44, 32,116,101,120,116,117,114,101, 44, 32,112,111,115, 41,
     10,112,111,115, 32, 61, 32,112,111,115, 32,111,114, 32,105,
    114,114, 46, 99,111,114,101, 46,112,111,115,105,116,105,111,
    110, 50,100, 40, 48, 44, 48, 41, 10,114,101,116,117,114,110,
     32, 95,100,114, 97,119, 50, 68, 73,109, 97,103,101, 40,115,
    101,108,102, 44, 32,116,101,120,116,117,114,101, 44, 32,112,
    111,115, 41, 10,101,110,100, 10,108,111, 99, 97,108, 32,102,
    117,110, 99,116,105,111,110, 32, 95,100,114, 97,119, 50, 68,
     73,109, 97,103,101, 95, 50, 40,115,101,108,102, 44, 32,105,
    109, 97,103,101,115, 44, 32,112,111,115, 44, 32,115,111,117,
    114, 99,101, 82,101, 99,116, 44, 32,100,101,115,116, 82,101,
     99,116, 44, 32, 99,111,108,111,114, 44, 32,117,115,101, 65,
    108,112,104, 97, 41, 10,112,111,115, 32, 61, 32,112,111,115,
     32,111,114, 32,105,114,114, 46, 99,111,114,101, 46,112,111,
    115,105,116,105,111,110, 50,100, 40, 48, 44, 48, 41, 10, 99,
    111,108,111,114, 32, 61, 32, 99,111,108,111,114, 32,111,114,
     32,105,114,114, 46,118,105,100,101,111, 46, 83, 67,111,108,
    111,114, 40, 50, 53, 53, 44, 50, 53, 53, 44, 50, 53, 53, 44,
     50, 53, 53, 41, 10,114,101,116,117,114,110, 32, 95,100,114,
     97,119, 50, 68, 73,109, 97,103,101, 40,115,101,108,102, 44,
     32,105,109, 97,103,101,115, 44, 32,112,111,115, 44, 32,115,
    111,117,114, 99,101, 82,101, 99,116, 44, 32,100,101,115,116,
     82,101, 99,116, 44, 32, 99,111,108,111,114, 44, 32,117,115,
    101, 65,108,112,104, 97, 41, 10,101,110,100, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 86,105,100,101,111, 68,114,105,118,101,114, 58,100,
    114, 97,119, 50, 68, 73,109, 97,103,101, 40, 97,114,103, 49,
     44, 32, 97,114,103, 50, 44, 32, 97,114,103, 51, 44, 32, 97,
    114,103, 52, 44, 32, 97,114,103, 53, 44, 32, 97,114,103, 54,
     41, 10,105,102, 32, 97,114,103, 51, 32,116,104,101,110, 10,
    114,101,116,117,114,110, 32, 95,100,114, 97,119, 50, 68, 73,
    109, 97,103,101, 95, 50, 40,115,101,108,102, 44, 32, 97,114,
    103, 49, 44, 32, 97,114,103, 50, 44, 32, 97,114,103, 51, 44,
     32, 97,114,103, 52, 44, 32, 97,114,103, 53, 44, 32, 97,114,
    103, 54, 41, 10,101,108,115,101, 10,114,101,116,117,114,110,
     32, 95,100,114, 97,119, 50, 68, 73,109, 97,103,101, 95, 49,
     40,115,101,108,102, 44, 32, 97,114,103, 49, 44, 32, 97,114,
    103, 50, 41, 10,101,110,100, 10,101,110,100, 10,108,111, 99,
     97,108, 32, 95,100,114, 97,119, 50, 68, 82,101, 99,116, 97,
    110,103,108,101, 32, 61, 32,105,114,114, 46,118,105,100,101,
    111, 46, 73, 86,105,100,101,111, 68,114,105,118,101,114, 46,
    100,114, 97,119, 50, 68, 82,101, 99,116, 97,110,103,108,101,
     10,102,117,110, 99,116,105,111,110, 32,105,114,114, 46,118,
    105,100,101,111, 46, 73, 86,105,100,101,111, 68,114,105,118,
    101,114, 58,100,114, 97,119, 50, 68, 82,101, 99,116, 97,110,
    103,108,101, 40, 99,111,108,111,114, 44, 32,112,111,115, 44,
     32, 99,108,105,112, 41, 10, 99,111,108,111,114, 32, 61, 32,
     99,111,108,111,114, 32,111,114, 32,105,114,114, 46,118,105,
    100,101,111, 46, 83, 67,111,108,111,114, 40, 48, 44, 48, 44,
     48, 44, 48, 41, 10,112,111,115, 32, 61, 32,112,111,115, 32,
    111,114, 32,105,114,114, 46, 99,111,114,101, 46,114,101, 99,
    116, 40, 48, 44, 48, 44, 48, 44, 48, 41, 10,114,101,116,117,
    114,110, 32, 95,100,114, 97,119, 50, 68, 82,101, 99,116, 97,
    110,103,108,101, 40,115,101,108,102, 44, 32, 99,111,108,111,
    114, 44, 32,112,111,115, 44, 32, 99,108,105,112, 41, 10,101,
    110,100, 10,108,111, 99, 97,108, 32, 95, 99,114,101, 97,116,
    101, 82,101,110,100,101,114, 84, 97,114,103,101,116, 84,101,
    120,116,117,114,101, 32, 61, 32,105,114,114, 46,118,105,100,
    101,111, 46, 73, 86,105,100,101,111, 68,114,105,118,101,114,
     46, 99,114,101, 97,116,101, 82,101,110,100,101,114, 84, 97,
    114,103,101,116, 84,101,120,116,117,114,101, 10,102,117,110,
     99,116,105,111,110, 32,105,114,114, 46,118,105,100,101,111,
     46, 73, 86,105,100,101,111, 68,114,105,118,101,114, 58, 99,
    114,101, 97,116,101, 82,101,110,100,101,114, 84, 97,114,103,
    101,116, 84,101,120,116,117,114,101, 40,115,105,122,101, 41,
     10,114,101,116,117,114,110, 32, 95, 99,114,101, 97,116,101,
     82,101,110,100,101,114, 84, 97,114,103,101,116, 84,101,120,
    116,117,114,101, 40,115,101,108,102, 44, 32,105,114,114, 46,
     99,111,114,101, 46,100,105,109,101,110,115,105,111,110, 50,
    100,115, 51, 50, 40,115,105,122,101, 46, 87,105,100,116,104,
     44, 32,115,105,122,101, 46, 72,101,105,103,104,116, 41, 41,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95,115,101,116,
     82,101,110,100,101,114, 84, 97,114,103,101,116, 32, 61, 32,
    105,114,114, 46,118,105,100,101,111, 46, 73, 86,105,100,101,
    111, 68,114,105,118,101,114, 46,115,101,116, 82,101,110,100,
    101,114, 84, 97,114,103,101,116, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46,118,105,100,101,111, 46, 73, 86,
    105,100,101,111, 68,114,105,118,101,114, 58,115,101,116, 82,
    101,110,100,101,114, 84, 97,114,103,101,116, 40,116,101,120,
    116,117,114,101, 44, 32, 99,108,101, 97,114, 66, 97, 99,107,
     66,117,102,102,101,114, 44, 32, 99,108,101, 97,114, 90, 66,
    117,102,102,101,114, 44, 32, 99,111,108, 41, 10, 99,111,108,
     32, 61, 32, 99,111,108, 32,111,114, 32,105,114,114, 46,118,
    105,100,101,111, 46, 83, 67,111,108,111,114, 40, 48, 44, 48,
     44, 48, 44, 48, 41, 10,114,101,116,117,114,110, 32, 95,115,
    101,116, 82,101,110,100,101,114, 84, 97,114,103,101,116, 40,
    115,101,108,102, 44, 32,116,101,120,116,117,114,101, 44, 32,
     99,108,101, 97,114, 66, 97, 99,107, 66,117,102,102,101,114,
     44, 32, 99,108,101, 97,114, 90, 66,117,102,102,101,114, 44,
     32, 99,111,108, 41, 10,101,110,100, 10,108,111, 99, 97,108,
     32, 95,115,101,116, 70,111,103, 32, 61, 32,105,114,114, 46,
    118,105,100,101,111, 46, 73, 86,105,100,101,111, 68,114,105,
    118,101,114, 46,115,101,116, 70,111,103, 10,102,117,110, 99,
    116,105,111,110, 32,105,114,114, 46,118,105,100,101,111, 46,
     73, 86,105,100,101,111, 68,114,105,118,101,114, 58,115,101,
    116, 70,111,103, 40, 99,111,108,111,114, 44, 32,108,105,110,
    101, 97,114, 70,111,103, 44, 32, 83,116, 97,114,116, 44, 32,
     69,110,100, 44, 32,100,101,110,115,105,116,121, 44, 32,112,
    105,120,101,108, 70,111,103, 44, 32,114, 97,110,103,101, 70,
    111,103, 41, 10, 99,111,108,111,114, 32, 61, 32, 99,111,108,
    111,114, 32,111,114, 32,105,114,114, 46,118,105,100,101,111,
     46, 83, 67,111,108,111,114, 40, 48, 44, 50, 53, 53, 44, 50,
     53, 53, 44, 50, 53, 53, 41, 10,105,102, 32,108,105,110,101,
     97,114, 70,111,103, 32, 61, 61, 32,110,105,108, 32,116,104,
    101,110, 32,108,105,110,101, 97,114, 70,111,103, 32, 61, 32,
    116,114,117,101, 32,101,110,100, 10, 83,116, 97,114,116, 32,
     61, 32, 83,116, 97,114,116, 32,111,114, 32, 53, 48, 10, 69,
    110,100, 32, 61, 32, 69,110,100, 32,111,114, 32, 49, 48, 48,
     10,100,101,110,115,105,116,121, 32, 61, 32,100,101,110,115,
    105,116,121, 32,111,114, 32, 48, 46, 48, 49, 10,112,105,120,
    101,108, 70,111,103, 32, 61, 32,112,105,120,101,108, 70,111,
    103, 32,111,114, 32,102, 97,108,115,101, 10,114, 97,110,103,
    101, 70,111,103, 32, 61, 32,114, 97,110,103,101, 70,111,103,
     32,111,114, 32,102, 97,108,115,101, 10,114,101,116,117,114,
    110, 32, 95,115,101,116, 70,111,103, 40,115,101,108,102, 44,
     32, 99,111,108,111,114, 44, 32,108,105,110,101, 97,114, 70,
    111,103, 44, 32, 83,116, 97,114,116, 44, 32, 69,110,100, 44,
     32,100,101,110,115,105,116,121, 44, 32,112,105,120,101,108,
     70,111,103, 44, 32,114, 97,110,103,101, 70,111,103, 41, 10,
    101,110,100, 10,102,117,110, 99,116,105,111,110, 32,105,114,
    114, 46,118,105,100,101,111, 46, 73, 86,105,100,101,111, 68,
    114,105,118,101,114, 58,100,114, 97,119, 73,110,100,101,120,
    101,100, 84,114,105, 97,110,103,108,101, 76,105,115,116, 40,
    118,101,114,116,105, 99,101,115, 44, 32,105,110,100,105, 99,
    101,115, 41, 10,114,101,116,117,114,110, 32,105,114,114, 46,
    118,105,100,101,111, 46, 73,114,114, 76,117, 97, 68,114, 97,
    119, 73,110,100,101,120,101,100, 84,114,105, 97,110,103,108,
    101, 76,105,115,116, 40,115,101,108,102, 44, 32,116, 97, 98,
    108,101, 46,103,101,116,110, 40,118,101,114,116,105, 99,101,
    115, 41, 44, 32,118,101,114,116,105, 99,101,115, 44, 32,116,
     97, 98,108,101, 46,103,101,116,110, 40,105,110,100,105, 99,
    101,115, 41, 44, 32,105,110,100,105, 99,101,115, 41, 10,101,
    110,100,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 71");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"video",0);
   tolua_beginmodule(tolua_S,"video");
    tolua_function(tolua_S,"IrrLuaDrawIndexedTriangleList",tolua_IrrLua_irr_video_IrrLuaDrawIndexedTriangleList00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"SIrrlichtCreationParameters","irr::SIrrlichtCreationParameters","",tolua_collect_irr__SIrrlichtCreationParameters);
   #else
   tolua_cclass(tolua_S,"SIrrlichtCreationParameters","irr::SIrrlichtCreationParameters","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"SIrrlichtCreationParameters");
    tolua_function(tolua_S,"new",tolua_IrrLua_irr_SIrrlichtCreationParameters_new00);
    tolua_function(tolua_S,"new_local",tolua_IrrLua_irr_SIrrlichtCreationParameters_new00_local);
    tolua_function(tolua_S,".call",tolua_IrrLua_irr_SIrrlichtCreationParameters_new00_local);
    tolua_variable(tolua_S,"DriverType",tolua_get_irr__SIrrlichtCreationParameters_DriverType,tolua_set_irr__SIrrlichtCreationParameters_DriverType);
    tolua_variable(tolua_S,"WindowSize",tolua_get_irr__SIrrlichtCreationParameters_WindowSize,tolua_set_irr__SIrrlichtCreationParameters_WindowSize);
    tolua_variable(tolua_S,"Bits",tolua_get_irr__SIrrlichtCreationParameters_unsigned_Bits,tolua_set_irr__SIrrlichtCreationParameters_unsigned_Bits);
    tolua_variable(tolua_S,"Fullscreen",tolua_get_irr__SIrrlichtCreationParameters_Fullscreen,tolua_set_irr__SIrrlichtCreationParameters_Fullscreen);
    tolua_variable(tolua_S,"Stencilbuffer",tolua_get_irr__SIrrlichtCreationParameters_Stencilbuffer,tolua_set_irr__SIrrlichtCreationParameters_Stencilbuffer);
    tolua_variable(tolua_S,"Vsync",tolua_get_irr__SIrrlichtCreationParameters_Vsync,tolua_set_irr__SIrrlichtCreationParameters_Vsync);
    tolua_variable(tolua_S,"HighPrecisionFPU",tolua_get_irr__SIrrlichtCreationParameters_HighPrecisionFPU,tolua_set_irr__SIrrlichtCreationParameters_HighPrecisionFPU);
    tolua_variable(tolua_S,"AntiAlias",tolua_get_irr__SIrrlichtCreationParameters_AntiAlias,tolua_set_irr__SIrrlichtCreationParameters_AntiAlias);
    tolua_variable(tolua_S,"EventReceiver",tolua_get_irr__SIrrlichtCreationParameters_EventReceiver_ptr,tolua_set_irr__SIrrlichtCreationParameters_EventReceiver_ptr);
    tolua_variable(tolua_S,"WindowId",tolua_get_irr__SIrrlichtCreationParameters_WindowId,tolua_set_irr__SIrrlichtCreationParameters_WindowId);
    tolua_variable(tolua_S,"SDK_version_do_not_use",tolua_get_irr__SIrrlichtCreationParameters_SDK_version_do_not_use,tolua_set_irr__SIrrlichtCreationParameters_SDK_version_do_not_use);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"IrrlichtDevice","irr::IrrlichtDevice","",tolua_collect_irr__IrrlichtDevice);
   #else
   tolua_cclass(tolua_S,"IrrlichtDevice","irr::IrrlichtDevice","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"IrrlichtDevice");
    tolua_function(tolua_S,"delete",tolua_IrrLua_irr_IrrlichtDevice_delete00);
    tolua_function(tolua_S,"run",tolua_IrrLua_irr_IrrlichtDevice_run00);
    tolua_function(tolua_S,"getVideoDriver",tolua_IrrLua_irr_IrrlichtDevice_getVideoDriver00);
    tolua_function(tolua_S,"getFileSystem",tolua_IrrLua_irr_IrrlichtDevice_getFileSystem00);
    tolua_function(tolua_S,"getGUIEnvironment",tolua_IrrLua_irr_IrrlichtDevice_getGUIEnvironment00);
    tolua_function(tolua_S,"getSceneManager",tolua_IrrLua_irr_IrrlichtDevice_getSceneManager00);
    tolua_function(tolua_S,"getCursorControl",tolua_IrrLua_irr_IrrlichtDevice_getCursorControl00);
    tolua_function(tolua_S,"getLogger",tolua_IrrLua_irr_IrrlichtDevice_getLogger00);
    tolua_function(tolua_S,"getVideoModeList",tolua_IrrLua_irr_IrrlichtDevice_getVideoModeList00);
    tolua_function(tolua_S,"getOSOperator",tolua_IrrLua_irr_IrrlichtDevice_getOSOperator00);
    tolua_function(tolua_S,"getTimer",tolua_IrrLua_irr_IrrlichtDevice_getTimer00);
    tolua_function(tolua_S,"setWindowCaption",tolua_IrrLua_irr_IrrlichtDevice_setWindowCaption00);
    tolua_function(tolua_S,"isWindowActive",tolua_IrrLua_irr_IrrlichtDevice_isWindowActive00);
    tolua_function(tolua_S,"closeDevice",tolua_IrrLua_irr_IrrlichtDevice_closeDevice00);
    tolua_function(tolua_S,"getVersion",tolua_IrrLua_irr_IrrlichtDevice_getVersion00);
    tolua_function(tolua_S,"setEventReceiver",tolua_IrrLua_irr_IrrlichtDevice_setEventReceiver00);
    tolua_function(tolua_S,"getEventReceiver",tolua_IrrLua_irr_IrrlichtDevice_getEventReceiver00);
    tolua_function(tolua_S,"setResizeAble",tolua_IrrLua_irr_IrrlichtDevice_setResizeAble00);
    tolua_function(tolua_S,"grab",tolua_IrrLua_irr_IrrlichtDevice_grab00);
    tolua_function(tolua_S,"drop",tolua_IrrLua_irr_IrrlichtDevice_drop00);
    tolua_function(tolua_S,"getDebugName",tolua_IrrLua_irr_IrrlichtDevice_getDebugName00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,108,111, 99, 97,108, 32, 95, 83,101,116, 87,105,110,100,
    111,119, 67, 97,112,116,105,111,110, 32, 61, 32,105,114,114,
     46, 73,114,114,108,105, 99,104,116, 68,101,118,105, 99,101,
     46,115,101,116, 87,105,110,100,111,119, 67, 97,112,116,105,
    111,110, 10,102,117,110, 99,116,105,111,110, 32,105,114,114,
     46, 73,114,114,108,105, 99,104,116, 68,101,118,105, 99,101,
     58,115,101,116, 87,105,110,100,111,119, 67, 97,112,116,105,
    111,110, 40,116,101,120,116, 41, 10,116,101,120,116, 32, 61,
     32,116,101,120,116, 32,111,114, 32, 34, 34, 10,108,111, 99,
     97,108, 32, 99, 97,112,116,105,111,110, 32, 61, 32,105,114,
    114, 46, 99, 97,115,116, 46,116,111, 95,119, 99,104, 97,114,
     95,116, 95,112,116,114, 40,116,101,120,116, 41, 10,108,111,
     99, 97,108, 32,114,101,116, 32, 61, 32, 95, 83,101,116, 87,
    105,110,100,111,119, 67, 97,112,116,105,111,110, 40,115,101,
    108,102, 44, 32, 99, 97,112,116,105,111,110, 41, 10,105,114,
    114, 46, 99, 97,115,116, 46,100,101,108,101,116,101, 95,119,
     99,104, 97,114, 95,116, 95,112,116,114, 40, 99, 97,112,116,
    105,111,110, 41, 10,114,101,116,117,114,110, 32,114,101,116,
     10,101,110,100, 10,108,111, 99, 97,108, 32, 95,103,101,116,
     86,101,114,115,105,111,110, 32, 61, 32,105,114,114, 46, 73,
    114,114,108,105, 99,104,116, 68,101,118,105, 99,101, 46,103,
    101,116, 86,101,114,115,105,111,110, 10,102,117,110, 99,116,
    105,111,110, 32,105,114,114, 46, 73,114,114,108,105, 99,104,
    116, 68,101,118,105, 99,101, 58,103,101,116, 86,101,114,115,
    105,111,110, 40, 41, 10,114,101,116,117,114,110, 32,105,114,
    114, 46, 99, 97,115,116, 46, 99, 56, 95,112,116,114, 95,116,
    111, 95,115,116,100, 95,115,116,114,105,110,103, 40, 95,103,
    101,116, 86,101,114,115,105,111,110, 40,115,101,108,102, 41,
     41, 10,101,110,100, 10,105,114,114, 46, 73,114,114,108,105,
     99,104,116, 68,101,118,105, 99,101, 46,103,101,116, 68,101,
     98,117,103, 78, 97,109,101, 32, 61, 32,105,114,114, 46, 73,
     85,110,107,110,111,119,110, 46,103,101,116, 68,101, 98,117,
    103, 78, 97,109,101,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 72");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"io",0);
   tolua_beginmodule(tolua_S,"io");
    tolua_function(tolua_S,"dofile",tolua_IrrLua_irr_io_dofile00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_module(tolua_S,"gui",0);
   tolua_beginmodule(tolua_S,"gui");
    tolua_constant(tolua_S,"EGUIET_ELEMENT",irr::gui::EGUIET_ELEMENT);
    tolua_constant(tolua_S,"EGUIET_BUTTON",irr::gui::EGUIET_BUTTON);
    tolua_constant(tolua_S,"EGUIET_CHECK_BOX",irr::gui::EGUIET_CHECK_BOX);
    tolua_constant(tolua_S,"EGUIET_COMBO_BOX",irr::gui::EGUIET_COMBO_BOX);
    tolua_constant(tolua_S,"EGUIET_CONTEXT_MENU",irr::gui::EGUIET_CONTEXT_MENU);
    tolua_constant(tolua_S,"EGUIET_EDIT_BOX",irr::gui::EGUIET_EDIT_BOX);
    tolua_constant(tolua_S,"EGUIET_FILE_OPEN_DIALOG",irr::gui::EGUIET_FILE_OPEN_DIALOG);
    tolua_constant(tolua_S,"EGUIET_IN_OUT_FADER",irr::gui::EGUIET_IN_OUT_FADER);
    tolua_constant(tolua_S,"EGUIET_IMAGE",irr::gui::EGUIET_IMAGE);
    tolua_constant(tolua_S,"EGUIET_LIST_BOX",irr::gui::EGUIET_LIST_BOX);
    tolua_constant(tolua_S,"EGUIET_MESH_VIEWER",irr::gui::EGUIET_MESH_VIEWER);
    tolua_constant(tolua_S,"EGUIET_MODAL_SCREEN",irr::gui::EGUIET_MODAL_SCREEN);
    tolua_constant(tolua_S,"EGUIET_SCROLL_BAR",irr::gui::EGUIET_SCROLL_BAR);
    tolua_constant(tolua_S,"EGUIET_STATIC_TEXT",irr::gui::EGUIET_STATIC_TEXT);
    tolua_constant(tolua_S,"EGUIET_TAB",irr::gui::EGUIET_TAB);
    tolua_constant(tolua_S,"EGUIET_TAB_CONTROL",irr::gui::EGUIET_TAB_CONTROL);
    tolua_constant(tolua_S,"EGUIET_TOOL_BAR",irr::gui::EGUIET_TOOL_BAR);
    tolua_constant(tolua_S,"EGUIET_WINDOW",irr::gui::EGUIET_WINDOW);
    tolua_constant(tolua_S,"EGUIET_COUNT",irr::gui::EGUIET_COUNT);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"irr",0);
  tolua_beginmodule(tolua_S,"irr");
   tolua_function(tolua_S,"createDevice",tolua_IrrLua_irr_createDevice00);
   tolua_function(tolua_S,"createDeviceEx",tolua_IrrLua_irr_createDeviceEx00);
  tolua_endmodule(tolua_S);

  { /* begin embedded lua code */
   int top = lua_gettop(tolua_S);
   static unsigned char B[] = {
    10,105,114,114, 46, 95, 95,100,101,118,105, 99,101,115, 32,
     61, 32,123,125, 10,108,111, 99, 97,108, 32, 95, 99,114,101,
     97,116,101, 68,101,118,105, 99,101, 32, 61, 32,105,114,114,
     46, 99,114,101, 97,116,101, 68,101,118,105, 99,101, 10,102,
    117,110, 99,116,105,111,110, 32,105,114,114, 46, 99,114,101,
     97,116,101, 68,101,118,105, 99,101, 40,114,101,110,100,101,
    114,116,121,112,101, 44, 32,100,105,109,115, 44, 32, 98,105,
    116,115, 44, 32,102,117,108,108,115, 99,114,101,101,110, 44,
     32,115,116,101,110, 99,105,108, 98,117,102,102,101,114, 44,
     32,118,115,121,110, 99, 44, 32,114,101, 99,101,105,118,101,
    114, 41, 10,114,101,110,100,101,114,116,121,112,101, 32, 61,
     32,114,101,110,100,101,114,116,121,112,101, 32,111,114, 32,
    105,114,114, 46,118,105,100,101,111, 46, 69, 68, 84, 95, 83,
     79, 70, 84, 87, 65, 82, 69, 10,100,105,109,115, 32, 61, 32,
    100,105,109,115, 32,111,114, 32,105,114,114, 46, 99,111,114,
    101, 46,100,105,109,101,110,115,105,111,110, 50,100,115, 51,
     50, 40, 54, 52, 48, 44, 52, 56, 48, 41, 10,105,102, 32,116,
    111,108,117, 97, 46,116,121,112,101, 40,100,105,109,115, 41,
     32, 61, 61, 32, 34,105,114,114, 58, 58, 99,111,114,101, 58,
     58,100,105,109,101,110,115,105,111,110, 50,100, 60,102, 51,
     50, 62, 34, 32,116,104,101,110, 10,100,105,109,115, 32, 61,
     32,105,114,114, 46, 99,111,114,101, 46,100,105,109,101,110,
    115,105,111,110, 50,100,115, 51, 50, 40,100,105,109,115, 46,
     87,105,100,116,104, 44, 32,100,105,109,115, 46, 72,101,105,
    103,104,116, 41, 10,101,110,100, 10, 98,105,116,115, 32, 61,
     32, 98,105,116,115, 32,111,114, 32, 49, 54, 10,118,115,121,
    110, 99, 32, 61, 32,118,115,121,110, 99, 32,111,114, 32,102,
     97,108,115,101, 10,105,102, 32,114,101,110,100,101,114,116,
    121,112,101, 32, 61, 61, 32,105,114,114, 46,118,105,100,101,
    111, 46, 69, 68, 84, 95, 68, 73, 82, 69, 67, 84, 51, 68, 56,
     32,111,114, 32,114,101,110,100,101,114,116,121,112,101, 32,
     61, 61, 32,105,114,114, 46,118,105,100,101,111, 46, 69, 68,
     84, 95, 68, 73, 82, 69, 67, 84, 51, 68, 57, 32,116,104,101,
    110, 10,108,111, 99, 97,108, 32,112, 97,114, 97,109,115, 32,
     61, 32,105,114,114, 46, 83, 73,114,114,108,105, 99,104,116,
     67,114,101, 97,116,105,111,110, 80, 97,114, 97,109,101,116,
    101,114,115, 40, 41, 10,112, 97,114, 97,109,115, 46, 72,105,
    103,104, 80,114,101, 99,105,115,105,111,110, 70, 80, 85, 32,
     61, 32,116,114,117,101, 10,112, 97,114, 97,109,115, 46, 68,
    114,105,118,101,114, 84,121,112,101, 32, 61, 32,114,101,110,
    100,101,114,116,121,112,101, 10,112, 97,114, 97,109,115, 46,
     87,105,110,100,111,119, 83,105,122,101, 32, 61, 32,100,105,
    109,115, 10,112, 97,114, 97,109,115, 46, 70,117,108,108,115,
     99,114,101,101,110, 32, 61, 32,102,117,108,108,115, 99,114,
    101,101,110, 10,112, 97,114, 97,109,115, 46, 83,116,101,110,
     99,105,108, 66,117,102,102,101,114, 32, 61, 32,115,116,101,
    110, 99,105,108, 98,117,102,102,101,114, 10,112, 97,114, 97,
    109,115, 46, 86,115,121,110, 99, 32, 61, 32,118,115,121,110,
     99, 10,112, 97,114, 97,109,115, 46, 69,118,101,110,116, 82,
    101, 99,101,105,118,101,114, 32, 61, 32,114,101, 99,101,105,
    118,101,114, 10,114,101,116,117,114,110, 32,105,114,114, 46,
     99,114,101, 97,116,101, 68,101,118,105, 99,101, 69,120, 40,
    112, 97,114, 97,109,115, 41, 10,101,110,100, 10,108,111, 99,
     97,108, 32,100,101,118, 32, 61, 32, 95, 99,114,101, 97,116,
    101, 68,101,118,105, 99,101, 40,114,101,110,100,101,114,116,
    121,112,101, 44, 32,100,105,109,115, 44, 32, 98,105,116,115,
     44, 32,102,117,108,108,115, 99,114,101,101,110, 44, 32,115,
    116,101,110, 99,105,108, 98,117,102,102,101,114, 44, 32,118,
    115,121,110, 99, 44, 32,114,101, 99,101,105,118,101,114, 41,
     10,105,114,114, 46, 95, 95,100,101,118,105, 99,101,115, 91,
    100,101,118, 93, 32, 61, 32,100,101,118, 10,114,101,116,117,
    114,110, 32,100,101,118, 10,101,110,100, 10,108,111, 99, 97,
    108, 32, 95, 99,114,101, 97,116,101, 68,101,118,105, 99,101,
     69,120, 32, 61, 32,105,114,114, 46, 99,114,101, 97,116,101,
     68,101,118,105, 99,101, 69,120, 10,102,117,110, 99,116,105,
    111,110, 32,105,114,114, 46, 99,114,101, 97,116,101, 68,101,
    118,105, 99,101, 69,120, 40,112, 97,114, 97,109,115, 41, 10,
    112, 97,114, 97,109,115, 46, 72,105,103,104, 80,114,101, 99,
    105,115,105,111,110, 70, 80, 85, 32, 61, 32,116,114,117,101,
     10,108,111, 99, 97,108, 32,100,101,118, 32, 61, 32, 95, 99,
    114,101, 97,116,101, 68,101,118,105, 99,101, 69,120, 40,112,
     97,114, 97,109,115, 41, 10,105,114,114, 46, 95, 95,100,101,
    118,105, 99,101,115, 91,100,101,118, 93, 32, 61, 32,100,101,
    118, 10,114,101,116,117,114,110, 32,100,101,118, 10,101,110,
    100, 10,112,114,105,110,116, 40, 34, 73,114,114, 76,117, 97,
     32, 49, 46, 49, 32, 67,111,112,121,114,105,103,104,116, 32,
     40, 67, 41, 32, 50, 48, 48, 53, 44, 32, 50, 48, 48, 54, 32,
     74,111,115,104, 32, 84,117,114,112,101,110, 34, 41,32
   };
   tolua_dobuffer(tolua_S,(char*)B,sizeof(B),"tolua: embedded Lua code 73");
   lua_settop(tolua_S, top);
  } /* end of embedded lua code */

 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_IrrLua (lua_State* tolua_S) {
 return tolua_IrrLua_open(tolua_S);
};
#endif

