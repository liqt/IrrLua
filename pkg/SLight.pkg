// Copyright (C) 2005-2006 Josh Turpen, Nikolaus Gebhardt
// This file is part of the IrrLua Lua binding for Irrlicht.
// For conditions of distribution and use, see copyright notice in IrrLua.h


namespace irr
{
namespace video  
{
//! Enumeration for different types of lights
enum E_LIGHT_TYPE
{
	//! point light, it has a position in space and radiates light in all directions
	ELT_POINT,

	//! directional light, coming from a direction from an infinite distance
	ELT_DIRECTIONAL
};

//! structure for holding data describing a dynamic point light.
/** ambient light and point lights are the only light supported 
by the irrlicht engine.
*/
struct SLight
{
	SLight();

	//! Ambient color emitted by the light
	SColorf AmbientColor; 

	//! Diffuse color emitted by the light. This is the primary color you
	//! might want to set.
	SColorf DiffuseColor; 

	//! Specular color emitted by the light. 
	SColorf SpecularColor; 

	//! Position of the light.
	core::vector3d<f32> Position; 

	//! Radius of light. Everything within this radius be be lighted.
	f32 Radius; 

	//! Does the light cast shadows?
	bool CastShadows;
	
	E_LIGHT_TYPE Type;
};

} // end namespace video
} // end namespace irr

$[

irr.video.LightTypeNames = {"Point", "Directional" }

$]


