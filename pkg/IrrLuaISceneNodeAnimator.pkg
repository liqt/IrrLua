// Copyright (C) 2005-2006 Josh Turpen, Nikolaus Gebhardt
// This file is part of the IrrLua Lua binding for Irrlicht.
// For conditions of distribution and use, see copyright notice in IrrLua.h


namespace irr
{
namespace scene
{
	class IrrLuaISceneNodeAnimator : public irr::scene::ISceneNodeAnimator
	{
	public:

		IrrLuaISceneNodeAnimator();
		~IrrLuaISceneNodeAnimator();

		virtual void animateNode(irr::scene::ISceneNode* node, u32 timeMs);
		
		//! IUnknown
		virtual void grab();
		virtual bool drop();
		
		// IrrLua stuff
		
		void *GetProxy();

	};
} // end namespace scene
} // end namespace irr


$[

irr.__iscenenodeanimatorproxy = {}

function irr.scene.createISceneNodeAnimator(def)
	local o = {}
	for i,v in pairs(def) do o[i] = v end
	o.__c_class = irr.scene.IrrLuaISceneNodeAnimator:new()
	tolua.inherit(o, o.__c_class)
	tolua.takeownership(o)
	o.__index = function (t, k) return rawget(t,"__c_class")[k] end	
	setmetatable(o, o)	
	irr.__iscenenodeanimatorproxy[o.__c_class:GetProxy()] = o
	return o  
end

$]

